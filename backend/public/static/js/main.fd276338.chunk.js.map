{"version":3,"sources":["js/services/async-storage.service.js","js/services/http.service.js","js/services/user.service.js","js/store/actions/user.actions.js","assets/img/logo/mainlogo.png","js/cmps/MainHeader.jsx","assets/img/logo/logo.png","js/services/util.service.js","js/services/item.service.js","js/services/group.service.js","js/services/label.service.js","js/services/column.service.js","js/services/board.service.js","js/services/socket.service.js","js/services/workspace.service.js","js/store/actions/board.actions.js","js/cmps/SidebarHeader.jsx","js/services/event-bus.service.js","js/store/actions/workspace.actions.js","js/cmps/user-msg.jsx","js/pages/HomePage.jsx","js/pages/Login.jsx","routesHomePage.js","assets/img/not-found/notfound.png","js/cmps/NoResault.jsx","js/store/actions/item.actions.js","js/cmps/board/DashboardView.jsx","assets/img/user.svg","js/cmps/menus/StatusColorPalette.jsx","js/cmps/menus/StatusMenu.jsx","js/store/actions/label.actions.js","js/cmps/menus/PersonMenu.jsx","js/cmps/menus/DatePicker.jsx","js/cmps/item/ItemColumn.jsx","js/cmps/menus/ItemMenu.jsx","js/cmps/item/ItemPreview.jsx","js/store/actions/group.actions.js","js/cmps/dynamic-cmps/ColorPallete.jsx","js/cmps/menus/GroupMenu.jsx","js/cmps/group/GroupColumn.jsx","js/cmps/group/GroupHeader.jsx","js/cmps/group/StatusFooter.jsx","js/cmps/group/NumberFooter.jsx","js/cmps/menus/NumberMenu.jsx","js/cmps/group/GroupFooter.jsx","js/cmps/group/GroupPreview.jsx","js/cmps/board/TableView.jsx","js/cmps/kanban/KanbanGroup.jsx","js/cmps/kanban/KanbanView.jsx","js/cmps/board/BoardContent.jsx","js/cmps/group/GroupFilter.jsx","js/cmps/item/PersonFilter.jsx","js/cmps/item/StatusFilter.jsx","js/cmps/menus/FilterMenu.jsx","js/cmps/menus/SortMenu.jsx","js/cmps/board/BoardSearch.jsx","js/cmps/board/BoardActions.jsx","js/cmps/board/BoardHeader.jsx","js/cmps/menus/BoardMenu.jsx","js/cmps/board/BoardPreview.jsx","js/cmps/board/BoardList.jsx","js/cmps/WorkspaceMenu.jsx","js/cmps/workspace/AddWorkspace.jsx","js/cmps/board/AddBoard.jsx","js/cmps/menus/AddMember.jsx","js/cmps/WorkspaceNav.jsx","js/cmps/board/BoardUpdatesList.jsx","js/cmps/item/PostUpdate.jsx","js/cmps/item/ItemUpdatesList.jsx","js/cmps/dynamic-cmps/ActivityUpdateTab.jsx","js/cmps/dynamic-cmps/ActivityLogTab.jsx","js/pages/ItemDetails.jsx","js/pages/Screen.jsx","js/pages/ActivityLog.jsx","js/cmps/Loader.jsx","js/cmps/SelectedPopup.jsx","js/pages/BoardDetails.jsx","js/pages/UserDetails.jsx","js/cmps/workspace/WorkspaceContent.jsx","js/cmps/workspace/WorkspaceHeader.jsx","js/pages/WorkspaceDetails.jsx","routesMainApp.js","RootCmp.jsx","serviceWorkerRegistration.js","reportWebVitals.js","js/store/reducers/workspace.reducer.js","js/store/reducers/user.reducer.js","js/store/reducers/board.reducer.js","js/store/reducers/group.reducer.js","js/store/reducers/item.reducer.js","js/store/store.js","index.js"],"names":["randomColor","require","storageService","query","get","entityType","entityId","then","entities","find","entity","_id","post","newEntity","_makeId","push","_save","put","updatedEntity","idx","findIndex","splice","remove","luminosity","format","alpha","delay","JSON","parse","localStorage","getItem","Promise","resolve","reject","setTimeout","setItem","stringify","length","text","possible","i","charAt","Math","floor","random","BASE_URL","axios","Axios","create","withCredentials","httpService","endpoint","data","ajax","a","method","url","params","res","console","log","dir","response","status","sessionStorage","clear","window","location","assign","STORAGE_KEY_LOGGEDIN_USER","STORAGE_KEY","userService","login","logout","signup","getLoggedinUser","getById","userId","update","save","user","loginWithGoogle","userCred","username","password","_saveLocalUser","googleUser","removeItem","onLogin","credentials","dispatch","type","onLogout","loadUsers","users","_MainHeader","state","isActive","onActive","setState","this","className","exact","to","src","mainlogo","alt","onClick","React","Component","mapDispatchToProps","MainHeader","connect","makeId","txt","itemService","duplicateItems","workspace","board","itemsIds","groups","forEach","group","itemId","itemIdx","items","item","id","newItem","duplicateItem","boardIdx","boards","gBoard","removeSelected","getPersonItem","personsToShow","map","reduce","acc","memberIdx","columns","column","totalCount","members","member","name","fullname","count","getStatuses","statuses","colors","statusIdx","cmpsOrder","cmpOrder","color","label","title","createItem","onPost","newUpdate","createdBy","img","createdAt","Date","now","createUpdate","updates","unshift","gItem","addToTop","Duplicate","currItem","itemToCopy","gCmpsOrder","_addCmpsOrder","creator","activities","isSelected","date","number","groupService","createGroup","ActionBy","searchBy","itemTitle","searchItem","groupsIds","filterGroups","groupsToFilter","filterStatus","persons","filterPersons","sortStore","sortBy","sortGroups","filter","groupsToReturn","removeGroup","groupId","groupIdx","activity","currGroup","newGroup","duplicateGroup","toLowerCase","includes","sortOrder","dateIdx","sort","b","localeCompare","cmp","some","itemCount","labelService","columnIdx","prevColor","prevColorIdx","gColors","currLabel","newLabel","createLabel","labels","newWorkspace","labelIdx","removedLabel","colorIdx","currColor","createColumn","width","boardService","boardId","boardOrTitle","newBoard","description","pos","createBoard","currBoard","getBoardById","toggleMenu","toggleMenus","menuToOpen","Object","keys","menu","dragAndDrop","result","startIdx","source","index","endIdx","destination","droppableId","fromGroup","toGroup","workspaces","socketService","socket","setup","io","on","eventName","cb","off","removeAllListeners","emit","terminate","createSocketService","workspaceService","workspaceId","getByBoardId","addNewWorkspace","updatedWorkspace","createWorkspace","userToSave","loadBoard","err","changeView","currView","removeBoard","editBoard","_SidebarHeader","props","history","route","logo","__SidebarHeader","workspaceModule","boardModule","userModule","SidebarHeader","withRouter","eventBusService","listener","callListener","detail","addEventListener","removeEventListener","dispatchEvent","CustomEvent","myBus","loadWorkspaces","saveUndoWorkspace","lastEditedWorkspace","loadWorkspace","loadWorkspaceByBoardId","editWorkspace","workspaceToSave","savedWorkspace","_UserMsg","msg","onCloseMsg","clearTimeout","timeoutId","removeEventBus","undo","Fragment","UserMsg","HomePage","document","_Login","isSignup","handleChange","target","field","val","value","preState","ev","guest","preventDefault","onSignup","responseGoogle","profileObj","email","imageUrl","onLoginWithGoogle","isSignUp","Container","component","maxWidth","CssBaseline","style","marginTop","display","flexDirection","alignItems","Avatar","margin","backgroundColor","Typography","variant","onSubmit","noValidate","TextField","required","fullWidth","autoComplete","onChange","autoFocus","FormControlLabel","control","Checkbox","Button","marginBottom","clientId","buttonText","onSuccess","onFailure","cookiePolicy","Grid","container","Link","href","routesHomePage","path","NoResault","notfound","toggleSelected","selectedItems","loadItem","groupOrBoard","saveItem","_DashboardView","chartType","changeChart","loadStatuses","statusToShow","numbers","values","DynamicChart","datasets","borderColor","borderWidth","DashboardView","itemModule","StatusColorPalette","setColor","hoverColor","onAddLabel","onEditLabel","onMouseOver","prevState","onMouseLeave","saveLabel","removeLabel","StatusMenu","onEditItem","useState","isEdit","setIsEdit","prevTxt","provided","droppableProps","ref","innerRef","draggableId","draggableProps","dragHandleProps","outline","contentEditable","suppressContentEditableWarning","onBlur","innerText","stopPropagation","currColumn","onChangeStatus","placeholder","PersonMenu","findIdx","memberId","removePerson","onAddMember","DatePicker","handleSelect","getTime","onShownDateChange","ItemColumn","isFocus","setFocus","printDate","timestamp","month","getMonth","day","getDate","minWidth","statusMenu","personMenu","dateMenu","newTxt","onFocus","renderSwitch","ItemMenu","onRemoveItem","onAddItem","ItemPreview","input","createRef","itemMenu","pathname","toggleSelect","current","focus","setGroup","ColorPallete","changeGroupColor","colorPicker","GroupMenu","isColor","onRemoveGroup","onEditGroup","GroupColumn","key","_GroupHeader","isHover","onHover","bool","setCurrGroupId","groupMenu","onMouseEnter","direction","GroupHeader","StatusFooter","statusMap","getStatusMap","toFixed","NumberFooter","NumberMenu","GroupFooter","numberMenu","_GroupPreview","isFocused","clearState","saveUndo","undoWorkspace","onKeyUp","keyCode","blur","snapshot","opacity","GroupPreview","isOpenNav","TableView","groupIndex","KanbanGroup","KanbanView","_BoardContent","currGroupId","handleOnDragEnd","onDragEnd","BoardContent","GroupFilter","onFilter","PersonFilter","onFilterPerson","personsCount","person","self","getPersons","personId","borderRadius","marginRight","StatusFilter","onFilterStatus","isFilter","filterStore","FilterMenu","groupModule","object","objectIdx","g","personIdx","onSort","SortMenu","dropdownBy","setDropdownBy","dropdownOrder","setDropdownOrder","_BoardSearch","isSearch","onSetSearch","onSearch","e","BoardSearch","BoardActions","filterMenu","sortMenu","BoardHeader","BoardMenu","onRemoveBoard","BoardPreview","boardMenu","BoardList","_WorkspaceMenu","substring","WorkspaceMenu","_AddWorkspace","onAddWorkspace","addWorkspace","searchInput","inputEl","userAndWorkspace","AddWorkspace","_AddBoard","onAddBoard","AddBoard","_AddMember","AddMember","_WorkspaceNav","toggleNav","workspaceMenu","isWorkspaceModal","isBoardModal","isMemberModal","WorkspaceNav","BoardUpdatesList","dangerouslySetInnerHTML","__html","PostUpdate","handleModelChange","model","bind","onModelChange","ItemUpdatesList","ActivityUpdateTab","ActivityLogTab","logTxt","_ItemDetails","onCloseItem","match","onToggle","ItemDetails","Screen","_ActivityLog","ActivityLog","Loader","SelectedPopup","_BoardDetails","pevTxt","strType","newType","onEditBoard","editGroup","newItemData","onRemoveSelected","isMenuOpen","prevProps","loadGroups","BoardDetails","_UserDetails","UserDetails","WorkspaceContent","isBoardsOpen","isMembersOpen","WorkspaceHeader","_WorkspaceDetails","routesMainApp","_RootCmp","routes","header","RootCmp","Boolean","hostname","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","colorMenu","userDetailsModal","activityLogModal","rootReducer","combineReducers","action","newState","lastRemovedWorkspace","userState","lastRemovedItem","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.fd276338.chunk.js","sourcesContent":["var randomColor = require('randomcolor');\n\n\nexport const storageService = {\n    query,\n    get,\n    post,\n    put,\n    remove,\n    _save\n}\n\nconst gWorkspaces = [\n    {\n        _id: \"w101\",\n        name: \"Workspace-1\",\n        description: \"desc-workspace\",\n        createdAt: 1489983468418,\n        createdBy: {\n            _id: \"u101\",\n            fullname: \"Adir Cohen\",\n            img: `https://robohash.org/adir`,\n        },\n        members: [\n            {\n                _id: \"u102\",\n                fullname: \"On Chetrit\",\n                img: `https://robohash.org/on`,\n            }\n        ],\n        boards: [\n            {\n                _id: \"b101\",\n                title: \"Board 1\",\n                createdAt: 1589983468418,\n                description: \"desc board\",\n                createdBy: {\n                    _id: \"u101\",\n                    fullname: \"Abi Abambi\",\n                    img: \"http://some-img\"\n                },\n                columns: [\n                    {\n                        id: \"column102\",\n                        type: \"member\",\n                        title: \"Person\",\n                        width: 150,\n                        members: []\n                    },\n                    {\n                        id: \"column101\",\n                        type: \"status\",\n                        title: \"Status\",\n                        width: 150,\n                        labels: [\n                            {\n                                id: 'label1',\n                                title: \"Done\",\n                                color: \"#00c875\"\n                            },\n                            {\n                                id: 'label2',\n                                title: \"Stuck\",\n                                color: \"#e2445c\"\n                            },\n                            {\n                                id: 'label3',\n                                title: \"Working on it\",\n                                color: \"#fdab3d\"\n                            },\n                            {\n                                id: 'label4',\n                                title: \"\",\n                                color: \"#c4c4c4\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"column103\",\n                        type: \"date\",\n                        title: \"Date\",\n                        width: 150,\n                        date: ''\n                    },\n\n\n                ],\n                groups: [\n                    {\n\n                        id: \"g101\",\n                        title: \"Group 1\",\n                        items: [\n                            {\n                                id: \"c101\",\n                                title: \"Punch adir in the nutz\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: [\n                                            {\n                                                _id: \"u102\",\n                                                fullname: \"On Chetrit\",\n                                                img: `https://robohash.org/on`,\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label1',\n                                            title: \"Done\",\n                                            color: \"#00c875\"\n                                        }\n\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [\n                                    {\n                                        id: 'update101',\n                                        txt: 'first update!',\n                                        createdBy: {\n                                            _id: 'u101',\n                                            fullname: 'Adir Cohen',\n                                            img: `https://robohash.org/adir`,\n                                        },\n                                        createdAt: 1589983468418\n                                    },\n                                    {\n                                        id: 'update102',\n                                        txt: 'Sec update!',\n                                        createdBy: {\n                                            _id: 'u102',\n                                            fullname: 'On Chetrit',\n                                            img: `https://robohash.org/on`,\n                                        },\n                                        createdAt: 1589989468418\n                                    }\n                                ],\n                                createdAt: 1589983468418,\n                                creator: {\n                                    _id: \"us101\",\n                                    fullname: \"Adir Cohen\",\n                                    img: `https://robohash.org/adir`\n                                },\n                                activities: [],\n                                isSelected: false,\n                            },\n                            {\n                                id: \"c102\",\n                                title: \"This also demo data\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: [{\n                                            _id: 'u101',\n                                            fullname: 'Adir Cohen',\n                                            img: `https://robohash.org/adir`\n                                        }]\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label2',\n                                            title: \"Stuck\",\n                                            color: \"#e2445c\"\n                                        }\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                        ],\n                        style: {\n                            color: randomColor({\n                                luminosity: 'dark',\n                                format: 'rgba',\n                                alpha: 0.9\n                            }),\n                        }\n                    },\n                    {\n\n                        id: \"g401\",\n                        title: \"Group 2\",\n                        items: [\n                            {\n                                id: \"c501\",\n                                title: \"Replace logo\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: [\n                                            {\n                                                _id: \"u101\",\n                                                fullname: \"Adir Cohen\",\n                                                img: `https://robohash.org/adir`,\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label1',\n                                            title: \"Done\",\n                                            color: \"#00c875\"\n                                        }\n\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                            {\n                                \"id\": \"c502\",\n                                \"title\": \"Replace logo\",\n                                \"columns\": [\n                                    {\n                                        \"type\": \"member\",\n                                        \"members\": [\n                                            {\n                                                \"_id\": \"u101\",\n                                                \"fullname\": \"Adir Cohen\",\n                                                \"img\": `https://robohash.org/adir`,\n                                            }\n                                        ]\n                                    },\n                                    {\n                                        \"type\": \"status\",\n                                        \"label\": {\n                                            id: 'label2',\n                                            title: \"Stuck\",\n                                            color: \"#e2445c\"\n                                        }\n                                    },\n                                    {\n                                        \"type\": \"date\",\n                                        \"date\": ''\n                                    },\n                                ],\n                                \"updates\": [],\n                                \"createdAt\": 1589983468418,\n                                \"activities\": [],\n                                \"isSelected\": true,\n\n                            },\n                        ],\n                        style: {\n                            color: randomColor({\n                                luminosity: 'dark',\n                                format: 'rgba',\n                                alpha: 0.9\n                            }),\n                        }\n                    },\n\n                ],\n                activities: [],\n                // for monday\n                cmpsOrder: [\"member\", \"status\", \"date\"]\n            },\n            {\n                _id: \"b102\",\n                title: \"board-2\",\n                createdAt: 1589983468418,\n                description: \"desc-board\",\n                createdBy: {\n                    _id: \"u101\",\n                    fullname: \"Adir Cohen\",\n                    img: `https://robohash.org/adir`,\n                },\n                style: {},\n                columns: [\n                    {\n                        id: \"column102\",\n                        type: \"member\",\n                        title: \"Person\",\n                        width: 140,\n                        members: []\n                    },\n                    {\n                        id: \"column101\",\n                        type: \"status\",\n                        title: \"Status\",\n                        width: 140,\n                        labels: [\n                            {\n                                id: 'label5',\n                                title: \"Done\",\n                                color: \"#00c875\"\n                            },\n                            {\n                                id: 'label6',\n                                title: \"Stuck\",\n                                color: \"#e2445c\"\n                            },\n                            {\n                                id: 'label7',\n                                title: \"Working on it\",\n                                color: \"#fdab3d\"\n                            },\n                            {\n                                id: 'label8',\n                                title: \"\",\n                                color: \"#c4c4c4\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"column103\",\n                        type: \"date\",\n                        title: \"Date\",\n                        width: 140,\n                        date: ''\n                    },\n                ],\n                groups: [\n                    {\n\n                        id: \"g102\",\n                        title: \"Group 2\",\n                        items: [\n                            {\n                                id: \"c103\",\n                                title: \"Replace\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: []\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label5',\n                                            title: \"Done\",\n                                            color: \"#00c875\"\n                                        }\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                            {\n                                id: \"c104\",\n                                title: \"Replace\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: []\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label8',\n                                            title: \"\",\n                                            color: \"#c4c4c4\"\n                                        }\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                        ],\n                        style: {\n                            color: randomColor({\n                                luminosity: 'dark',\n                                format: 'rgba',\n                                alpha: 0.9\n                            }),\n                        }\n                    },\n\n                ],\n                activities: [\n                    {\n                        id: 'ac101',\n                        createdAt: 1589983468418,\n                        activity: 'removed item',\n                        createdBy: {\n                            _id: \"u103\",\n                            fullname: \"Ron Buchris\",\n                            img: \"http://some-img\"\n                        }\n                    },\n                    {\n                        id: 'ac102',\n                        createdAt: 1589983468418,\n                        activity: 'removed item',\n                        createdBy: {\n                            _id: \"u102\",\n                            fullname: \"On Chetrit\",\n                            img: \"http://some-img\"\n                        }\n                    },\n                    {\n                        id: 'ac103',\n                        createdAt: 1589983468418,\n                        activity: 'removed item',\n                        createdBy: {\n                            _id: \"u101\",\n                            fullname: \"Adir Cohen\",\n                            img: \"http://some-img\"\n                        }\n                    },\n                ],\n                // for monday\n                cmpsOrder: [\"member\", \"status\", \"date\"]\n            }]\n    },\n    {\n        _id: \"w102\",\n        name: \"Workspace-2\",\n        description: \"desc-workspace-2\",\n        createdAt: 1489983468418,\n        createdBy: {\n            _id: \"u101\",\n            fullname: \"Adir Cohen\",\n            img: `https://robohash.org/adir`,\n        },\n        members: [\n            {\n                _id: \"u103\",\n                fullname: \"Ron Buchris\",\n                img: `https://robohash.org/ron`,\n            }\n        ],\n        boards: [\n            {\n                _id: \"b201\",\n                title: \"board-3\",\n                createdAt: 1589983468418,\n                description: \"desc-board-2\",\n                createdBy: {\n                    _id: \"u101\",\n                    fullname: \"Abi Abambi\",\n                    img: \"http://some-img\"\n                },\n                style: {},\n                columns: [\n                    {\n                        id: \"column102\",\n                        type: \"member\",\n                        title: \"Person\",\n                        width: 140,\n                        members: []\n                    },\n                    {\n                        id: \"column101\",\n                        type: \"status\",\n                        title: \"Status\",\n                        width: 140,\n                        labels: [\n                            {\n                                id: 'label9',\n                                title: \"Done\",\n                                color: \"#00c875\"\n                            },\n                            {\n                                id: 'label10',\n                                title: \"Stuck\",\n                                color: \"#e2445c\"\n                            },\n                            {\n                                id: 'label11',\n                                title: \"Working on it\",\n                                color: \"#fdab3d\"\n                            },\n                            {\n                                id: 'label12',\n                                title: \"\",\n                                color: \"#c4c4c4\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"column103\",\n                        type: \"date\",\n                        title: \"Date\",\n                        width: 140,\n                        date: ''\n                    },\n\n                ],\n                groups: [\n                    {\n\n                        id: \"g201\",\n                        title: \"Group 3\",\n                        items: [\n                            {\n                                id: \"c201\",\n                                title: \"Replace logo\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: []\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label10',\n                                            title: \"Stuck\",\n                                            color: \"#e2445c\"\n                                        }\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n                            },\n                            {\n                                id: \"c202\",\n                                title: \"Replace logo\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: []\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label9',\n                                            title: \"Done\",\n                                            color: \"#00c875\"\n                                        }\n\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                        ],\n                        style: {\n                            color: randomColor({\n                                luminosity: 'dark',\n                                format: 'rgba',\n                                alpha: 0.9\n                            }),\n                        }\n                    },\n\n                ],\n                activities: [],\n                // for monday\n                cmpsOrder: [\"member\", \"status\", \"date\"]\n            },\n            {\n                _id: \"b202\",\n                title: \"board-4\",\n                createdAt: 1589983468418,\n                description: \"desc-board\",\n                createdBy: {\n                    _id: \"u101\",\n                    fullname: \"Adir Cohen\",\n                    img: `https://robohash.org/adir`,\n                },\n                style: {},\n                columns: [\n\n                    {\n                        id: \"column102\",\n                        type: \"member\",\n                        title: \"Person\",\n                        pos: 2,\n                        width: 140,\n                        members: []\n                    },\n                    {\n                        id: \"column101\",\n                        type: \"status\",\n                        title: \"Status\",\n                        pos: 1,\n                        width: 140,\n                        labels: [\n                            {\n                                id: 'label13',\n                                title: \"Done\",\n                                color: \"#00c875\"\n                            },\n                            {\n                                id: 'label14',\n                                title: \"Stuck\",\n                                color: \"#e2445c\"\n                            },\n                            {\n                                id: 'label15',\n                                title: \"Working on it\",\n                                color: \"#fdab3d\"\n                            }\n                        ]\n                    },\n                    {\n                        id: \"column103\",\n                        type: \"date\",\n                        title: \"Date\",\n                        width: 140,\n                        date: ''\n                    },\n                ],\n                groups: [\n                    {\n\n                        id: \"g302\",\n                        title: \"Group 4\",\n                        items: [\n                            {\n                                id: \"c303\",\n                                title: \"Replace\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: []\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label15',\n                                            title: \"Working on it\",\n                                            color: \"#fdab3d\"\n                                        }\n                                    },\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                            {\n                                id: \"c304\",\n                                title: \"Replace\",\n                                columns: [\n                                    {\n                                        type: \"member\",\n                                        members: []\n                                    },\n                                    {\n                                        type: \"status\",\n                                        label: {\n                                            id: 'label15',\n                                            title: \"Working on it\",\n                                            color: \"#fdab3d\"\n                                        }\n                                    }\n                                    ,\n                                    {\n                                        type: \"date\",\n                                        date: ''\n                                    },\n                                ],\n                                updates: [],\n                                createdAt: 1589983468418,\n                                activities: [],\n                                isSelected: false,\n\n                            },\n                        ],\n                        style: {\n                            color: randomColor({\n                                luminosity: 'dark',\n                                format: 'rgba',\n                                alpha: 0.9\n                            }),\n                        }\n                    },\n\n                ],\n                activities: [],\n                // for monday\n                cmpsOrder: [\"member\", \"status\", \"date\"]\n            }]\n    },\n];\n\nconst gUsers = [\n    {\n        _id: 'u101',\n        fullname: 'Adir Cohen',\n        username: 'KaDaWa',\n        password: '123',\n        img: `https://robohash.org/adir`,\n        workspaces: ['w101', 'w102']\n\n    },\n    {\n        _id: 'guest',\n        fullname: 'guest',\n        username: 'guest',\n        password: '123',\n        img: `https://robohash.org/guest`,\n        workspaces: ['w101', 'w102']\n\n    },\n    {\n        _id: 'u102',\n        fullname: 'On Chetrit',\n        username: 'on',\n        password: '123',\n        img: `https://robohash.org/on`,\n        workspaces: ['w101']\n    },\n    {\n        _id: 'u103',\n        fullname: 'Ron Buchris',\n        username: 'ron',\n        password: '123',\n        img: `https://robohash.org/ron`,\n        workspaces: ['w102']\n    },\n]\n\n// _save('workspaceDB', gWorkspaces)\n// _save('userDB', gUsers)\n\n\nfunction query(entityType, delay = 400) {\n    var entities = JSON.parse(localStorage.getItem(entityType)) || []\n\n    return new Promise((resolve, reject) => {\n        setTimeout(() => {\n            resolve(entities)\n        }, delay)\n    })\n}\n\nfunction get(entityType, entityId) {\n    return query(entityType)\n        .then(entities => entities.find(entity => entity._id === entityId))\n}\n\nfunction post(entityType, newEntity) {\n    newEntity._id = _makeId()\n    return query(entityType)\n        .then(entities => {\n            entities.push(newEntity)\n            _save(entityType, entities)\n            return newEntity\n        })\n}\n\nfunction put(entityType, updatedEntity) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity._id === updatedEntity._id)\n            entities.splice(idx, 1, updatedEntity)\n            _save(entityType, entities)\n            return updatedEntity\n        })\n}\n\nfunction remove(entityType, entityId) {\n    return query(entityType)\n        .then(entities => {\n            const idx = entities.findIndex(entity => entity._id === entityId)\n            entities.splice(idx, 1)\n            _save(entityType, entities)\n        })\n}\n\n\nfunction _save(entityType, entities) {\n    localStorage.setItem(entityType, JSON.stringify(entities))\n}\n\nfunction _makeId(length = 5) {\n    var text = ''\n    var possible = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789'\n    for (var i = 0; i < length; i++) {\n        text += possible.charAt(Math.floor(Math.random() * possible.length))\n    }\n    return text\n}","import Axios from 'axios'\r\n\r\nconst BASE_URL = process.env.NODE_ENV === 'production'\r\n    ? '/api/'\r\n    : '//localhost:3030/api/'\r\n\r\n\r\nvar axios = Axios.create({\r\n    withCredentials: true\r\n})\r\n\r\nexport const httpService = {\r\n    get(endpoint, data) {\r\n        return ajax(endpoint, 'GET', data)\r\n    },\r\n    post(endpoint, data) {\r\n        return ajax(endpoint, 'POST', data)\r\n    },\r\n    put(endpoint, data) {\r\n        return ajax(endpoint, 'PUT', data)\r\n    },\r\n    delete(endpoint, data) {\r\n        return ajax(endpoint, 'DELETE', data)\r\n    }\r\n}\r\n\r\nasync function ajax(endpoint, method = 'GET', data = null) {\r\n    try {\r\n        const res = await axios({\r\n            url: `${BASE_URL}${endpoint}`,\r\n            method,\r\n            data,\r\n            params: (method === 'GET') ? data : null\r\n        })\r\n        return res.data\r\n    } catch (err) {\r\n        console.log(`Had Issues ${method}ing to the backend, endpoint: ${endpoint}, with data: ${data}`)\r\n        console.dir(err)\r\n        if (err.response && err.response.status === 401) {\r\n            sessionStorage.clear();\r\n            window.location.assign('/')\r\n        }\r\n        throw err\r\n    }\r\n}","import { storageService } from './async-storage.service'\nimport { httpService } from './http.service';\nconst STORAGE_KEY_LOGGEDIN_USER = 'loggedinUser'\n// var gWatchedUser = null;\nconst STORAGE_KEY = 'userDB'\nexport const userService = {\n    login,\n    logout,\n    signup,\n    getLoggedinUser,\n    query,\n    getById,\n    remove,\n    update,\n    save,\n    loginWithGoogle\n}\n\nwindow.userService = userService\n\n\nfunction query() {\n    return httpService.get(`user`)\n    // return storageService.query(STORAGE_KEY)\n}\n\n\nasync function getById(userId) {\n    // const user = await storageService.get(STORAGE_KEY, userId)\n    const user = await httpService.get(`user/${userId}`)\n    // gWatchedUser = user;\n    return user;\n}\nfunction remove(userId) {\n    // return storageService.remove(STORAGE_KEY, userId)\n    return httpService.delete(`user/${userId}`)\n}\n\nasync function update(user) {\n    // await storageService.put(STORAGE_KEY, user)\n    user = await httpService.put(`user/${user._id}`, user)\n    // Handle case in which admin updates other user's details\n    // if (getLoggedinUser()._id === user._id) _saveLocalUser(user)\n    return user;\n}\n\nasync function login(userCred) {\n    // const users = await storageService.query(STORAGE_KEY)\n    // if (guest) {\n    //     var user = users.find(user => user._id === 'guest')\n    // }else {\n    //     var user = users.find(user => user.username === userCred.username)\n    // }\n    // if (user) return _saveLocalUser(user)\n    if (userCred === 'guest') {\n        userCred = { username: userCred, password: userCred }\n    }\n    const user = await httpService.post('auth/login', userCred)\n    return _saveLocalUser(user)\n    // socketService.emit('set-user-socket', user._id);\n}\nasync function loginWithGoogle(googleUser) {\n    const user = await httpService.post('auth/loginWithGoogle', googleUser)\n    return _saveLocalUser(user)\n}\n\n\nasync function signup(userCred) {\n    // const user = await storageService.post(STORAGE_KEY, userCred)\n    const user = await httpService.post('auth/signup', userCred)\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\n    // socketService.emit('set-user-socket', user._id);\n    return user;\n}\n\n\nasync function logout() {\n    // sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\n    // socketService.emit('unset-user-socket');\n     await httpService.post('auth/logout')\n     sessionStorage.removeItem(STORAGE_KEY_LOGGEDIN_USER)\n}\n\nfunction _saveLocalUser(user) {\n    sessionStorage.setItem(STORAGE_KEY_LOGGEDIN_USER, JSON.stringify(user))\n    return user\n}\n\nfunction save(user) {\n    if (user._id) {\n        return storageService.put(STORAGE_KEY, user)\n    } else {\n        return storageService.post(STORAGE_KEY, user)\n    }\n}\n\nfunction getLoggedinUser() {\n    return JSON.parse(sessionStorage.getItem(STORAGE_KEY_LOGGEDIN_USER) || 'null')\n}\n\n\n// (async ()=>{\n//     await userService.signup({fullname: 'Puki Norma', username: 'user1', password:'123',score: 10000, isAdmin: false})\n//     await userService.signup({fullname: 'Muki G', username: 'muki', password:'123', score: 10000})\n//     await userService.signup({fullname: 'Master Adminov', username: 'admin', password:'123', score: 10000, isAdmin: true})\n// })();\n\n\n\n// This IIFE functions for Dev purposes\n// It allows testing of real time updates (such as sockets) by listening to storage events\n// (async () => {\n//     var user = getLoggedinUser()\n//     // Dev Helper: Listens to when localStorage changes in OTHER browser\n\n//     // Here we are listening to changes for the watched user (comming from other browsers)\n//     window.addEventListener('storage', async () => {\n//         if (!gWatchedUser) return;\n//         const freshUsers = await storageService.query('user')\n//         const watchedUser = freshUsers.find(u => u._id === gWatchedUser._id)\n//         if (!watchedUser) return;\n//         if (gWatchedUser.score !== watchedUser.score) {\n//             console.log('Watched user score changed - localStorage updated from another browser')\n//             socketService.emit(SOCKET_EVENT_USER_UPDATED, watchedUser)\n//         }\n//         gWatchedUser = watchedUser\n//     })\n// })();\n\n// This is relevant when backend is connected\n// (async () => {\n//     var user = getLoggedinUser()\n//     if (user) socketService.emit('set-user-socket', user._id)\n// })();\n\n","import { userService } from \"../../services/user.service\";\n\nexport function onLogin(credentials) {\n    return async (dispatch) => {\n        try {\n            const user = await userService.login(credentials)\n            dispatch({\n                type: 'SET_USER',\n                user\n            })\n        } catch (err) {\n            console.log('Cannot login', err)\n        }\n    }\n}\nexport function onLoginWithGoogle(googleUser) {\n    return async (dispatch) => {\n        try {\n            const user = await userService.loginWithGoogle(googleUser)\n            dispatch({\n                type: 'SET_USER',\n                user\n            })\n        } catch (err) {\n            console.log('Cannot login', err)\n        }\n    }\n}\n\nexport function getById(userId) {\n    return async (dispatch) => {\n        const user = await userService.getById(userId)\n        dispatch({\n            type: 'SET_MEMBER',\n            user\n        })\n\n    }\n\n}\n\nexport function onSignup(credentials) {\n    return async (dispatch) => {\n        try {\n            const user = userService.signup(credentials)\n            dispatch({\n                type: 'SET_USER',\n                user\n            })\n        } catch (err) {\n            console.log('Cannot signup', err)\n        }\n\n    }\n}\n\nexport function onLogout() {\n    return async (dispatch) => {\n        try {\n            await userService.logout()\n            dispatch({\n                type: 'SET_USER',\n                user: null\n            })\n        } catch (err) {\n            console.log('Cannot logout', err)\n        }\n    }\n}\n\n\nexport function loadUsers() {\n    return async dispatch => {\n        try {\n            const users = await userService.query()\n            dispatch({\n                type: 'SET_USERS',\n                users\n            })\n        } catch (err) {\n            console.log('Cannot load users', err)\n        }\n    }\n}\nexport function getLoggedinUser() {\n    return async dispatch => {\n        try {\n            const user = userService.getLoggedinUser()\n            dispatch({\n                type: 'SET_USER',\n                user\n            })\n        } catch (err) {\n            console.log('Cannot load users', err)\n        }\n    }\n}","export default __webpack_public_path__ + \"static/media/mainlogo.52288e6d.png\";","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { onLogin } from '../store/actions/user.actions.js';\nimport mainlogo from '../../assets/img/logo/mainlogo.png';\n\nclass _MainHeader extends React.Component {\n  state = {\n    isActive: false,\n  };\n\n  onActive = () => {\n    const { isActive } = this.state;\n    this.setState({ isActive: !isActive });\n  };\n\n  render() {\n    const { isActive } = this.state;\n    return (\n      <header className=\"main-header main-container\">\n        <div className=\"header-content flex space-between align-center\">\n          <div className=\"left flex\">\n            <NavLink exact to=\"/\">\n              <img src={mainlogo} alt=\"logo\" className=\"logo-home\" />\n            </NavLink>\n            <div className=\"nav-btn flex align-center\">\n              <span>Product</span>\n              <IoIosArrowDown />\n            </div>\n            <div className=\"nav-btn flex align-center\">\n              <span>Solutions</span>\n              <IoIosArrowDown />\n            </div>\n            <div className=\"nav-btn\">Templates</div>\n            <div className=\"nav-btn\">Pricing</div>\n            {/* <NavLink exact to=\"/templates\">\n            Templates\n          </NavLink> */}\n          </div>\n          <div className=\"right flex align-center\">\n            <NavLink exact to=\"/login\">\n              Log in\n            </NavLink>\n            <div className=\"started btn\">Get Started</div>\n          </div>\n        </div>\n        <div\n          className={`hamburger ${isActive ? 'is-active' : ''}`}\n          onClick={this.onActive}\n        >\n          <span></span>\n          <span></span>\n          <span></span>\n        </div>\n      </header>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onLogin,\n};\n\nexport const MainHeader = connect(null, mapDispatchToProps)(_MainHeader);\n","export default __webpack_public_path__ + \"static/media/logo.8c473ddc.png\";","export const utilService = {\n    makeId\n}\n\nexport function makeId(length = 6) {\n    var txt = '';\n    var possible =\n        'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n        txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n\n    return txt;\n}\n","import { makeId } from '../services/util.service'\n\nexport const itemService = {\n    duplicateItems,\n    removeSelected,\n    getPersonItem,\n    getStatuses,\n    createItem,\n    getById,\n    remove,\n    onPost,\n    save,\n}\n\nconst gCmpsOrder = [\"member\", \"status\", \"date\"]\n\nfunction getById(board, itemId) {\n    const group = board.groups.find(group => group.items.find(item => item.id === itemId));\n    const item = group.items.find(item => item.id === itemId)\n    return item\n}\n\nfunction getStatuses(board) {\n    const statuses = {}\n    const colors = {}\n    const statusIdx = board.cmpsOrder.findIndex(cmpOrder => cmpOrder === 'status')\n    board.groups.forEach(group => {\n        group.items.forEach(item => {\n            const color = item.columns[statusIdx].label.color\n            const status = item.columns[statusIdx].label.title === '' ? 'No Status' : item.columns[statusIdx].label.title\n            if (statuses[status]) {\n                statuses[status]++\n            } else {\n                colors[status] = color\n                statuses[status] = 1\n            }\n        })\n    })\n    return [statuses, colors]\n}\nfunction getPersonItem(board) {\n    let personsToShow = [];\n    const personsMap = board.groups.map(group => {\n        return group.items.reduce((acc, item) => {\n            const memberIdx = item.columns.findIndex(column => column.type === 'member')\n            acc.totalCount++;\n            const members = item.columns[memberIdx].members;\n            members.forEach(member => {\n                const name = member.fullname\n                if (acc[name]) {\n                    acc[name].count++;\n                } else {\n                    personsToShow.push(name);\n                    acc[name] = {};\n                    acc[name].count = 1;\n                }\n            })\n            acc.personsToShow = personsToShow;\n            return acc;\n        },\n        { totalCount: 0 }\n        );\n    })\n    return personsMap;\n}\n\nfunction onPost(update, user, item, groups, workspace) {\n    const newUpdate = createUpdate(update, user)\n    item.updates.unshift(newUpdate)\n    const group = groups.find(group => {\n        return group.items.find(gItem => gItem.id === item.id)\n    })\n    const itemIdx = group.items.findIndex(gItem => gItem.id === item.id)\n    const newItem = { ...item }\n    group.items.splice(itemIdx, 1, newItem)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\nfunction createUpdate(txt, user) {\n    return {\n        id: makeId(),\n        txt,\n        createdBy: {\n            _id: user._id,\n            fullname: user.fullname,\n            img: user.img\n        },\n        createdAt: Date.now()\n    }\n}\n\nfunction remove(workspace, group, itemId, board) {\n    const itemIdx = group.items.findIndex(item => item.id === itemId);\n    group.items.splice(itemIdx, 1)\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const returnedWorkspace = { ...workspace }\n    return returnedWorkspace\n}\n\nfunction removeSelected(workspace, board, itemsIds) {\n    board.groups.forEach(group => {\n        itemsIds.forEach(itemId => {\n            const itemIdx = group.items.findIndex(item => item.id === itemId);\n            if (itemIdx !== -1) {\n                group.items.splice(itemIdx, 1)\n            }\n        })\n    })\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const returnedWorkspace = JSON.parse(JSON.stringify(workspace))\n    return returnedWorkspace\n}\n\nfunction duplicateItem(item) {\n\n    return {\n        ...item,\n        title: `${item.title} (copy)`,\n        id: makeId(),\n        updates: [],\n    }\n}\n\nfunction save(item, group, workspace, user, addToTop, board, Duplicate) {\n    const itemIdx = group.items.findIndex(currItem => currItem.id === item.id);\n    if (Duplicate || item.id) {\n        const itemToCopy = JSON.parse(JSON.stringify(item))\n        const newItem = Duplicate ? duplicateItem(itemToCopy) : item\n        Duplicate ? group.items.splice(itemIdx + 1, 0, newItem)\n            : group.items.splice(itemIdx, 1, item)\n    } else {\n        const newItem = createItem(item, user, board)\n        addToTop ? group.items.unshift(newItem) : group.items.push(newItem)\n    }\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\nfunction duplicateItems(workspace, board, itemsIds) {\n    board.groups.forEach(group => {\n        itemsIds.forEach(itemId => {\n            const itemIdx = group.items.findIndex(item => item.id === itemId);\n            if (itemIdx !== -1) {\n                const item = group.items.find(item => item.id === itemId);\n                const itemToCopy = JSON.parse(JSON.stringify(item))\n                const newItem = duplicateItem(itemToCopy)\n                group.items.splice(itemIdx + 1, 0, newItem)\n            }\n        })\n    })\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\n\nexport function createItem(title, user, board) {\n    const cmpOrder = board.cmpsOrder ? board.cmpsOrder : gCmpsOrder\n    return {\n        id: makeId(),\n        title,\n        columns: _addCmpsOrder(cmpOrder),\n        creator: {\n            _id: user._id,\n            fullname: user.fullname,\n            img: user.img\n        },\n        updates: [],\n        createdAt: Date.now(),\n        activities: [],\n        isSelected: false,\n    }\n}\n\nfunction _addCmpsOrder(cmpsOrder) {\n    const columns = []\n    const members = {\n        type: \"member\",\n        members: []\n    }\n    const status = {\n        type: \"status\",\n        label: {\n            id: makeId(),\n            title: \"\",\n            color: \"#c4c4c4\"\n        }\n    }\n\n    const date = {\n        type: \"date\",\n        date: ''\n    }\n\n    const number = {\n        type: \"number\",\n        title: \"Number\",\n        number: ''\n    }\n\n    cmpsOrder.forEach((cmpOrder) => {\n        if (cmpOrder === \"member\") columns.push(members)\n        if (cmpOrder === \"status\") columns.push(status)\n        if (cmpOrder === \"number\") columns.push(number)\n        if (cmpOrder === \"date\") columns.push(date)\n    })\n    return columns\n\n}","import { makeId } from '../services/util.service'\nimport { createItem } from './item.service'\nvar randomColor = require('randomcolor');\n\nexport const groupService = {\n    createGroup,\n    query,\n    removeGroup,\n    save\n}\n\nfunction query(board, ActionBy = {}) {\n    var groups = []\n    if (ActionBy) {\n        if (ActionBy.searchBy?.itemTitle) {\n            groups = searchItem(board, ActionBy)\n        } else {\n            groups = board.groups\n        }\n        if (ActionBy.groupsIds || ActionBy.statuses) {\n            groups = filterGroups(board, ActionBy)\n            if (ActionBy?.statuses?.length) {\n                const statusIdx = board.cmpsOrder.findIndex((cmpOrder) => cmpOrder === 'status');\n                const groupsToFilter = groups?.length ? groups : board.groups\n                groups = filterStatus(ActionBy, groupsToFilter, statusIdx)\n            }\n            if (ActionBy?.persons?.length) {\n                groups = filterPersons(board, ActionBy)\n            }\n        }\n        if (ActionBy?.sortStore) {\n            if (ActionBy.sortStore.sortBy === 'Select sort by') {\n                return board.groups\n            } else {\n                groups = sortGroups(board, ActionBy)\n            }\n        }\n    }\n    if (!ActionBy.sortStore) {\n        groups = groups.filter((group, idx) => {\n            if (group.items?.length) {\n                return group\n            } else {\n                groups.splice(idx, 1)\n            }\n        })\n    }\n    const { searchBy, statuses, groupsIds, sortStore,persons } = ActionBy\n    const groupsToReturn = (searchBy || statuses?.length || groupsIds?.length || sortStore || persons?.length) ? groups : board.groups\n    return groupsToReturn\n}\n\n// Filter/Sort/Search\nfunction searchItem(board, ActionBy) {\n    var groups = []\n    groups = board.groups.map(group => {\n        return {\n            ...group, items: group.items.filter(item => {\n                return item.title.toLowerCase().includes(ActionBy.searchBy.itemTitle.toLowerCase())\n            })\n        }\n    })\n    return groups\n}\nfunction sortGroups(board, ActionBy) {\n    const { sortBy, sortOrder } = ActionBy.sortStore\n    var groups = []\n    const statusIdx = board.columns.findIndex(column => column.type === 'status')\n    const dateIdx = board.columns.findIndex(column => column.type === 'date')\n    groups = board.groups.map(group => {\n        return {\n            ...group, items: group.items.sort((a, b) => {\n                if (sortBy === 'Text') {\n                    if (sortOrder === 'Ascending') {\n                        return a.title.toLowerCase().localeCompare(b.title.toLowerCase())\n                    } else {\n                        return b.title.toLowerCase().localeCompare(a.title.toLowerCase())\n                    }\n                }\n                if (sortBy === 'Status') {\n                    if (sortOrder === 'Ascending') {\n                        return a.columns[statusIdx].label.title.localeCompare(b.columns[statusIdx].label.title)\n                    } else {\n                        return b.columns[statusIdx].label.title.localeCompare(a.columns[statusIdx].label.title)\n                    }\n                }\n                if (sortBy === 'Date') {\n                    if (sortOrder === 'Ascending') {\n                        return a.columns[dateIdx].date - b.columns[dateIdx].date\n                    } else {\n                        return b.columns[dateIdx].date - a.columns[dateIdx].date\n                    }\n                }\n            })\n        }\n    })\n    return groups\n}\nfunction filterGroups(board, ActionBy) {\n    var groups = []\n    groups = board.groups.filter(group => {\n        return ActionBy.groupsIds.includes(group.id)\n    })\n    return groups\n}\nfunction filterPersons(board, ActionBy) {\n    const memberIdx = board.cmpsOrder.findIndex(cmp => cmp === 'member')\n    const filteredGroups = board.groups.reduce((acc,group) => {\n        const newGroup = {\n            ...group, items: group.items.filter(item => {\n                return item.columns[memberIdx].members.some(member => {\n                    return ActionBy.persons.includes(member._id)\n                })\n            })\n        }\n        acc.push(newGroup)\n        return acc\n    },[])\n    return filteredGroups\n}\nfunction filterStatus(ActionBy, groupsToFilter, statusIdx) {\n    var groups = []\n    groups = groupsToFilter.map(group => {\n        return {\n            ...group, items: group.items.filter(item => {\n                return ActionBy.statuses.includes(item.columns[statusIdx].label.title)\n            })\n        }\n    })\n    return groups\n}\n\n//EDIT-ADD GROUP\nfunction save(workspace, board, group, user, groupId, Duplicate) {\n    const activity = {\n        id: makeId(),\n        createdAt: Date.now(),\n        activity: 'add group',\n        createdBy: {\n            _id: user._id,\n            fullname: user.fullname,\n            img: user.img\n        }\n    }\n    board.activities.push(activity)\n    const groupIdx = board.groups.findIndex(currGroup => currGroup.id === groupId);\n    if (Duplicate || groupId) {\n        const newGroup = Duplicate ? duplicateGroup(group) : createGroup(user, board)\n        board.groups.splice(groupIdx + 1, 0, newGroup);\n    }\n    else if (group.id) {\n        const groupIdx = board.groups.findIndex(currGroup => currGroup.id === group.id);\n        board.groups.splice(groupIdx, 1, group);\n    } else {\n        const newGroup = createGroup(user, board)\n        board.groups.unshift(newGroup)\n    }\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\nfunction duplicateGroup(group) {\n    return {\n        ...group,\n        title: `Duplicate of ${group.title}`,\n        id: makeId(),\n        items: group.items.map(item => {\n            return {\n                ...item, id: makeId(),\n                updates: [],\n                columns: item.columns.map(column => {\n                    return { ...column }\n                })\n            }\n        })\n    }\n}\n\nexport function createGroup(user, board, itemCount = 1) {\n    const items = []\n    for (var i = 0; i < itemCount; i++) {\n        const item = createItem(\"New Item\", user, board)\n        items.push(item)\n    }\n    const group = {\n        \"id\": makeId(),\n        \"title\": \"New Group\",\n        items,\n        \"style\": {\n            \"color\": randomColor({\n                luminosity: 'dark',\n                format: 'rgba',\n                alpha: 0.9\n            }),\n        }\n    }\n    return group\n}\n\nfunction removeGroup(workspace, board, groupId) {\n    const groupIdx = board.groups.findIndex(group => group.id === groupId);\n    board.groups.splice(groupIdx, 1)\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n","\nimport { makeId } from '../services/util.service'\n\nexport const labelService = {\n    save,\n    remove\n}\n\nconst gColors = [\"#ff5ac4\", \"#ff158a\", \"#bb3354\", \"#7f5347\",\n    \"#ff642e\", \"#ffcb00\", \"#cab641\", \"#9cd326\",\n    \"#037f4c\", \"#0086c0\", \"#579bfc\", \"#66ccff\", \"#a25ddc\",\n    \"#784bd1\", \"#808080\", \"#333333\", \"#ff7575\", \"#faa1f1\",\n    \"#ffadad\", \"#7e3b8a\", \"#9aadbd\", \"#68a1bd\", \"#225091\",\n    \"#4eccc6\", \"#5559df\", \"#401694\", \"#563e3e\", \"#bda8f9\",\n    \"#2b76e5\", \"#a9bee8\", \"#d974b0\", \"#9d99b9\", \"#ad967a\",\n    \"#a1e3f6\", \"#bd816e\", \"#175a63\", \"#00c875\", \"#e2445c\", \"#fdab3d\", '#c4c4c4'\n]\n\nexport function queryColors() {\n    return gColors\n}\n\nfunction save(workspace, board, columnIdx, label = null, labelIdx, prevColor, type) {\n    if (label?.id) {\n        if (type === \"color\") {\n            const prevColorIdx = gColors.findIndex(color => color === label.color);\n            gColors.splice(prevColorIdx, 1, prevColor)\n        }\n\n        board.groups.forEach(group => {\n            return group.items.forEach(item => {\n                const currLabel = item.columns[columnIdx].label\n                if (currLabel.id === label.id) currLabel[type] = label[type]\n            })\n        })\n    } else {\n        const newLabel = createLabel(label)\n        board.columns[columnIdx].labels.push(newLabel)\n    }\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\nfunction remove(labelIdx, board, columnIdx, workspace) {\n    const removedLabel = board.columns[columnIdx].labels.splice(labelIdx, 1)\n    gColors.push(removedLabel[0].color)\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\nexport function createLabel(color = null, title = null) {\n    const colorIdx = gColors.findIndex(currColor => currColor === color)\n    return {\n        id: makeId(),\n        title: title || '',\n        color: gColors.splice(color ? colorIdx : (Math.floor(Math.random() * gColors.length)), 1)[0]\n    }\n}","import { makeId } from '../services/util.service'\nimport { createLabel } from './label.service'\n\n\n\nfunction save(column, workspace, board) {\n    if (column?.id) {\n\n    } else {\n        const newColumn = createColumn(column);\n        board.columns.push(newColumn);\n    }\n\n    return { ...workspace }\n}\n\nexport function createColumn(column) {\n    switch (column) {\n        case 'status':\n            return {\n                id: makeId(),\n                title: 'Status',\n                width: 150,\n                labels: [\n                    createLabel('#c4c4c4', ''),\n                    createLabel('#00c875', 'Done'),\n                    createLabel('#e2445c', 'Stuck'),\n                    createLabel('#fdab3d', 'Working on it'),\n                ]\n            }\n            break;\n\n        default:\n            break;\n    }\n}","import { makeId } from '../services/util.service'\n\n\nimport { storageService } from \"./async-storage.service\"\nimport { createGroup } from './group.service'\nimport { createColumn } from './column.service'\n\nexport const boardService = { getById, save, getBoardById, remove, toggleMenu, dragAndDrop }\nconst STORAGE_KEY = 'workspaceDB'\n\nfunction getById(workspace, boardId) {\n    return workspace.boards.find(board => board._id === boardId)\n}\n//without access to workspace\nasync function getBoardById(boardId) {\n    const workspaces = await storageService.query(STORAGE_KEY)\n    const workspace = workspaces.find(workspace => {\n        return workspace.boards.find(board => board._id === boardId)\n    })\n    const board = workspace.boards.find(board => board._id === boardId)\n    return board\n\n}\n\nfunction save(workspace, boardOrTitle, user, users) {\n\n    if (typeof boardOrTitle === 'string') {\n        const newBoard = createBoard(user, users, boardOrTitle)\n        workspace.boards.push(newBoard)\n    } else {\n        const boardIdx = workspace.boards.findIndex(currBoard => currBoard._id === boardOrTitle._id);\n        workspace.boards.splice(boardIdx, 1, boardOrTitle);\n    }\n    const newWorkspace = { ...workspace };\n    return newWorkspace\n}\n\nfunction remove(workspace, boardId) {\n    const boardIdx = workspace.boards.findIndex(board => board._id === boardId);\n    workspace.boards.splice(boardIdx, 1)\n    const returnedWorkspace = { ...workspace }\n    return returnedWorkspace\n}\n\nexport function createBoard(user, users, title) {\n    const groups = [];\n    for (let i = 0; i < 3; i++) {\n        const group = createGroup(user, i + 1)\n        groups.push(group)\n    }\n    return {\n        _id: makeId(),\n        title,\n        createdAt: Date.now(),\n        description: \"Click to add description\",\n        createdBy: {\n            _id: user._id,\n            fullname: user.fullname,\n            img: user.img,\n        },\n        columns: [\n            {\n                id: makeId(),\n                type: \"member\",\n                title: \"Person\",\n                pos: 1,\n                width: 140,\n                members: []\n            },\n            createColumn('status'),\n            ,\n            {\n                id: makeId(),\n                type: \"date\",\n                title: \"Date\",\n                width: 140,\n                date: ''\n            },\n            {\n                id: makeId(),\n                type: \"number\",\n                title: \"Number\",\n                width: 140,\n                number: ''\n            }\n\n        ],\n        groups: groups,\n        activities: [],\n        cmpsOrder: [\"member\", \"status\", \"date\", \"number\"]\n    }\n}\n\nfunction toggleMenu(toggleMenus, menuToOpen, id) {\n    for (let menu of Object.keys(toggleMenus)) {\n        toggleMenus[menu] = false\n    }\n    if (menuToOpen) {\n        toggleMenus[menuToOpen] = id\n    }\n    const newMenu = { ...toggleMenus }\n    return newMenu\n}\n\nfunction dragAndDrop(workspace, board, result, groupId) {\n    const startIdx = result.source.index\n    const endIdx = result.destination ? result.destination.index : 0\n    if (result.type === \"group\") {\n        const [group] = board.groups.splice(startIdx, 1)\n        board.groups.splice(endIdx, 0, group)\n    }\n\n    if (result.type === \"label\") {\n        const columnIdx = board.columns.findIndex((column) => column.type === 'status');\n        const [label] = board.columns[columnIdx].labels.splice(startIdx, 1)\n        board.columns[columnIdx].labels.splice(endIdx, 0, label)\n    }\n\n    if (result.type === \"item\") {\n        const destination = result.destination ? result.destination.droppableId : groupId\n        const fromGroup = board.groups.find(group => group.id === result.source.droppableId)\n        const toGroup = board.groups.find(group => group.id === destination)\n        const [item] = fromGroup.items.splice(startIdx, 1)\n        toGroup.items.splice(endIdx, 0, item)\n    }\n\n    if (result.type === \"column\") {\n        const [column] = board.columns.splice(startIdx, 1)\n        board.groups.forEach((group) => {\n            group.items.forEach(item => {\n                const [column] = item.columns.splice(startIdx, 1)\n                item.columns.splice(endIdx, 0, column)\n            })\n        })\n        board.columns.splice(endIdx, 0, column)\n        const [cmpOrder] = board.cmpsOrder.splice(startIdx, 1)\n        board.cmpsOrder.splice(endIdx, 0, cmpOrder)\n    }\n    const boardIdx = workspace.boards.findIndex(gBoard => gBoard._id === board._id)\n    workspace.boards.splice(boardIdx, 1, board)\n    const newBoard = workspace.boards.find(gBoard => gBoard._id === board._id)\n    // const newBoard = { ...board }\n    const newWorkspace = { ...workspace };\n    return [newWorkspace, newBoard];\n}\n","import io from 'socket.io-client'\r\nconst baseUrl = (process.env.NODE_ENV === 'production') ? '' : '//localhost:3030'\r\nexport const socketService = createSocketService()\r\n// export const socketService = createDummySocketService()\r\n\r\nwindow.socketService = socketService\r\n\r\n// var socketIsReady = false;\r\nsocketService.setup()\r\n\r\n\r\nfunction createSocketService() {\r\n  var socket = null;\r\n  const socketService = {\r\n    setup() {\r\n      socket = io(baseUrl)\r\n    },\r\n    on(eventName, cb) {\r\n      socket.on(eventName, cb)\r\n    },\r\n    off(eventName, cb = null) {\r\n      if (!socket) return;\r\n      if (!cb) socket.removeAllListeners(eventName)\r\n      else socket.off(eventName, cb)\r\n    },\r\n    emit(eventName, data) {\r\n      socket.emit(eventName, data)\r\n    },\r\n    terminate() {\r\n      socket = null\r\n    }\r\n  }\r\n  return socketService\r\n}\r\n\r\n// eslint-disable-next-line\r\nfunction createDummySocketService() {\r\n  var listenersMap = {}\r\n  const socketService = {\r\n    listenersMap,\r\n    setup() {\r\n      listenersMap = {}\r\n    },\r\n    terminate() {\r\n      this.setup()\r\n    },\r\n    on(eventName, cb) {\r\n      listenersMap[eventName] = [...(listenersMap[eventName]) || [], cb]\r\n    },\r\n    off(eventName, cb) {\r\n      if (!listenersMap[eventName]) return\r\n      if (!cb) delete listenersMap[eventName]\r\n      else listenersMap[eventName] = listenersMap[eventName].filter(l => l !== cb)\r\n    },\r\n    emit(eventName, data) {\r\n      if (!listenersMap[eventName]) return\r\n      listenersMap[eventName].forEach(listener => {\r\n        listener(data)\r\n      })\r\n    },\r\n    debugMsg() {\r\n      this.emit('chat addMsg', { from: 'Someone', txt: 'Aha it worked!' })\r\n    },\r\n  }\r\n  window.listenersMap = listenersMap;\r\n  return socketService\r\n}","import { storageService } from './async-storage.service';\nimport { httpService } from './http.service';\nimport { socketService } from './socket.service'\nimport { makeId } from '../services/util.service'\nconst STORAGE_KEY = 'workspaceDB'\n\nexport const workspaceService = { query, getById, remove, save, getByBoardId, addNewWorkspace }\n\nasync function query(user) {\n    return await httpService.get(`workspace`,user)\n}\n\n\n\nfunction getById(workspaceId) {\n    return httpService.get(`workspace/${workspaceId}`)\n    // return storageService.get(STORAGE_KEY, workspaceId)\n}\n\nfunction remove(workspaceId) {\n    return httpService.delete(`workspace/${workspaceId}`)\n    // return storageService.remove(STORAGE_KEY, workspaceId)\n}\n\nasync function save(workspace) {\n    let updatedWorkspace;\n    if (workspace._id) {\n        updatedWorkspace = await httpService.put(`workspace/${workspace._id}`, workspace)\n        // return storageService.put(STORAGE_KEY, workspace)\n    } else {\n        updatedWorkspace = await httpService.post(`workspace`, workspace)\n        // workspace.owner = userService.getLoggedinUser()\n        // return storageService.post(STORAGE_KEY, workspace)\n    }\n    console.log(updatedWorkspace);\n    socketService.emit('board changed', updatedWorkspace)\n    return updatedWorkspace;\n}\n\nfunction getByBoardId(boardId, workspaces) {\n    return workspaces.find(workspace => {\n        return workspace.boards.find(board => {\n            if (board._id === boardId) {\n                return workspace\n            }\n        })\n    })\n}\n\nasync function addNewWorkspace(user, title) {\n    const workspace = createWorkspace(user, title)\n    await storageService.post(STORAGE_KEY, workspace)\n    user.workspaces.push(workspace._id)\n    const userToSave = { ...user }\n    return [userToSave, workspace]\n}\n\n\nfunction createWorkspace(user, title) {\n    return {\n        _id: makeId(),\n        name: title,\n        description: \"desc-workspace\",\n        createdAt: Date.now(),\n        createdBy: {\n            _id: user._id,\n            fullname: user.fullname\n        },\n        members: [],\n        boards: []\n    }\n}\n","import { boardService } from \"../../services/board.service\"\nimport { workspaceService } from \"../../services/workspace.service\";\n\nexport function loadBoard(workspace, boardId) {\n    return dispatch => {\n        try {\n            if (!boardId) return\n            const board = boardService.getById(workspace, boardId)\n            dispatch({\n                type: 'SET_BOARD',\n                board\n            })\n            dispatch({\n                type: 'SET_GROUPS',\n                groups: board.groups\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function changeView(currView) {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'CHANGE_VIEW',\n                currView\n            })\n        } catch (err) {\n            console.log('Cannot REMOVE group', err)\n        }\n    }\n}\n\nexport function removeBoard(workspace, boardId) {\n    return async dispatch => {\n        try {\n            const newWorkspace = boardService.remove(workspace, boardId)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace\n            })\n        } catch (err) {\n            console.log('Cannot REMOVE group', err)\n        }\n    }\n}\n\nexport function editBoard(workspace, boardOrTitle, user, users) {\n    return async (dispatch) => {\n        try {\n            const newWorkspace = boardService.save(workspace, boardOrTitle, user, users)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace,\n            })\n        } catch (err) {\n            console.log('Cannot update board')\n            console.log('Cannot save board', err)\n        }\n    }\n}\n\nexport function toggleMenu(toggleMenus, menuToOpen, id) {\n    return dispatch => {\n        const newToggleMenus = boardService.toggleMenu(toggleMenus, menuToOpen, id)\n        dispatch({\n            type: 'TOGGLE_MENU',\n            toggleMenus: newToggleMenus\n        })\n    }\n}\n\nexport function dragAndDrop(workspace, board, result, groupId) {\n    return async dispatch => {\n        try {\n            const newWorkspace = boardService.dragAndDrop(workspace, board, result, groupId)\n            const workspaceToSave = newWorkspace[0]\n            await workspaceService.save(workspaceToSave);\n            const newBoard = newWorkspace[1]\n            dispatch({\n                type: 'SET_WORKSPACE',\n                workspace: workspaceToSave,\n            })\n            dispatch({\n                type: 'SET_BOARD',\n                board: newBoard,\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter, Link } from 'react-router-dom';\n\nimport Workspace from 'monday-ui-react-core/dist/icons/Workspace';\nimport Notifications from 'monday-ui-react-core/dist/icons/Notifications';\nimport Inbox from 'monday-ui-react-core/dist/icons/Inbox';\nimport MyWeek from 'monday-ui-react-core/dist/icons/MyWeek';\nimport Invite from 'monday-ui-react-core/dist/icons/Invite';\nimport Help from 'monday-ui-react-core/dist/icons/Help';\nimport LogOut from 'monday-ui-react-core/dist/icons/LogOut';\n\nimport logo from '../../assets/img/logo/logo.png';\nimport { onLogout } from '../store/actions/user.actions';\nimport { toggleMenu } from '../store/actions/board.actions';\n\nclass _SidebarHeader extends Component {\n  state = {\n    isActive: false,\n  };\n\n  onActive = () => {\n    const { isActive } = this.state;\n    this.setState({ isActive: !isActive });\n  };\n\n  logout = () => {\n    this.props.onLogout();\n    this.props.history.push('/');\n  };\n  render() {\n    const { isActive } = this.state;\n    const { user, workspace, toggleMenus, toggleMenu, board } = this.props;\n    if (!workspace || !board) return <div></div>;\n    const id = workspace.boards.length\n      ? workspace.boards[0]._id\n      : workspace._id;\n    const route = workspace.boards ? 'board' : 'workspace';\n    return (\n      <div className=\"sidebar-container flex justify-center\">\n        <nav className=\"sidebar-icons flex space-between column align-center\">\n          <div className=\"left-side flex column align-center\">\n            <img className=\"logo\" src={logo} alt=\"logo\" />\n            <div className=\"logos-wrapper flex column align-center\">\n              <Link to={id ? `/${route}/${id}` : `/`}>\n                <Workspace className=\"nav-icon workspace\" />\n              </Link>\n              <Notifications className=\"nav-icon Notifications\" />\n              <Inbox className=\"nav-icon Inbox\" />\n              <MyWeek className=\"nav-icon MyWeek\" />\n            </div>\n          </div>\n          <div className=\"board-title-header\">{board.title}</div>\n          <div className=\"right-side flex column align-center\">\n            <div\n              className={`hamburger ${isActive ? 'is-active' : ''}`}\n              onClick={this.onActive}\n            >\n              <span></span>\n              <span></span>\n              <span></span>\n            </div>\n            <div className=\"logos-wrapper flex column align-center\">\n              <button\n                onClick={() => {\n                  toggleMenu(toggleMenus, 'isMemberModal', true);\n                }}\n              >\n                <Invite className=\"nav-icon Invite\" />\n              </button>\n              <Help className=\"nav-icon Help\" />\n              <button onClick={this.logout}>\n                <LogOut className=\"nav-icon logout\" />\n              </button>\n              <Link to={`/user/${user._id}`}>\n                <img className=\"user-profile\" src={user.img} alt=\"\" />\n              </Link>\n            </div>\n          </div>\n        </nav>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    toggleMenus: state.workspaceModule.toggleMenus,\n    workspace: state.workspaceModule.workspace,\n    board: state.boardModule.board,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  onLogout,\n  toggleMenu,\n};\n\nconst __SidebarHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_SidebarHeader);\n\nexport const SidebarHeader = withRouter(__SidebarHeader);\n","function on(eventName, listener) {\r\n\r\n    const callListener = ({ detail }) => {\r\n        listener(detail);\r\n    };\r\n\r\n    window.addEventListener(eventName, callListener);\r\n\r\n    return () => {\r\n        window.removeEventListener(eventName, callListener);\r\n    };\r\n}\r\n\r\nfunction emit(eventName, data) {\r\n    window.dispatchEvent(new CustomEvent(eventName, { detail: data }));\r\n}\r\n\r\nexport const eventBusService = { on, emit };\r\n\r\n// export function showUserMsg(txt, type = '') {\r\n//     eventBusService.emit('show-user-msg', { txt, type })\r\n// }\r\n// export function showSuccessMsg(txt) {\r\n//     showUserMsg(txt, 'success')\r\n// }\r\n// export function showErrorMsg(txt) {\r\n//     showUserMsg(txt, 'danger')\r\n// }\r\n\r\nwindow.myBus = eventBusService;","import { userService } from \"../../services/user.service\"\nimport { workspaceService } from \"../../services/workspace.service\"\n\nexport function loadWorkspaces(user) {\n    return async dispatch => {\n        try {\n            const workspaces = await workspaceService.query(user)\n            dispatch({\n                type: 'SET_WORKSPACES',\n                workspaces\n            })\n            return workspaces\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function undo(lastEditedWorkspace, boardId) {\n    return async dispatch => {\n        try {\n            const savedWorkspace = await workspaceService.save(lastEditedWorkspace)\n            const board = savedWorkspace.boards.find(gBoard => gBoard._id === boardId)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: savedWorkspace\n            })\n            dispatch({\n                type: 'SET_BOARD',\n                board\n            })\n            dispatch({\n                type: 'SET_GROUPS',\n                groups: board.groups\n            })\n        }\n        catch (err) {\n            console.log('Cannot save workspace', err)\n        }\n    }\n}\nexport function saveUndoWorkspace(workspace) {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'SET_UNDO_WORKSPACE',\n                lastEditedWorkspace: workspace\n            })\n        }\n        catch (err) {\n            console.log('Cannot save workspace', err)\n        }\n    }\n}\n\nexport function loadWorkspace(workspaceId) {\n    return async dispatch => {\n        try {\n            const workspace = await workspaceService.getById(workspaceId)\n            dispatch({\n                type: 'SET_WORKSPACE',\n                workspace\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function loadWorkspaceByBoardId(boardId,workspaces) {\n    return  dispatch => {\n        try {\n            const workspace =  workspaceService.getByBoardId(boardId,workspaces)\n            dispatch({\n                type: 'SET_WORKSPACE',\n                workspace\n            })\n        }\n        catch (err) {\n            console.log('Cannot remove workspace', err)\n        }\n    }\n}\n\nexport function addWorkspace(user, title) {\n    return async dispatch => {\n        try {\n            const userAndWorkspace = await workspaceService.addNewWorkspace(user, title)\n            const userToSave = userAndWorkspace[0]\n            const workspaces = await workspaceService.query(userToSave)\n            await userService.save(userToSave)\n            const workspace = userAndWorkspace[1]\n            dispatch({\n                type: 'SET_WORKSPACES',\n                workspaces\n            })\n            dispatch({\n                type: 'SET_WORKSPACE',\n                workspace\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function editWorkspace(workspaceToSave) {\n    return async dispatch => {\n        try {\n            const savedWorkspace = await workspaceService.save(workspaceToSave)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: savedWorkspace\n            })\n        }\n        catch (err) {\n            console.log('Cannot save workspace', err)\n        }\n    }\n}\n\nexport function removeWorkspace(workspaceId) {\n    return async dispatch => {\n        try {\n            await workspaceService.remove(workspaceId)\n            dispatch({\n                type: 'REMOVE_WORKSPACE',\n                workspaceId\n            })\n        }\n        catch (err) {\n            console.log('Cannot remove workspace', err)\n        }\n    }\n}\n\nexport function toggleNav() {\n    return dispatch => {\n        dispatch({\n            type: 'TOGGLE_NAV',\n        })\n    }\n}\n\n\n\n\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { eventBusService } from '../services/event-bus.service';\nimport CloseSmall from 'monday-ui-react-core/dist/icons/CloseSmall';\nimport Check from 'monday-ui-react-core/dist/icons/Check';\nimport { undo } from '../store/actions/workspace.actions';\nclass _UserMsg extends React.Component {\n  state = {\n    msg: null,\n  };\n  removeEventBus;\n  timeoutId;\n\n  componentDidMount() {\n    this.removeEventBus = eventBusService.on('user-msg', (msg) => {\n      this.setState({ msg }, () => {\n        if (this.timeoutId) clearTimeout(this.timeoutId);\n        this.timeoutId = setTimeout(this.onCloseMsg, 5000);\n      });\n    });\n  }\n\n  componentWillUnmount() {\n    this.removeEventBus();\n  }\n\n  onCloseMsg = () => {\n    this.setState({ msg: null });\n    clearTimeout(this.timeoutId);\n  };\n\n  render() {\n    const { msg } = this.state;\n    const { lastEditedWorkspace, board } = this.props;\n    if (!msg) return <React.Fragment></React.Fragment>;\n    return (\n      <section className={`user-msg flex align-center`}>\n        <Check />\n        <div className=\"user-msg-title\">\n          {msg.txt}\n          {msg.type}\n        </div>\n        <div\n          className=\"undo-btn btn br4\"\n          onClick={() => {\n            this.props.undo(lastEditedWorkspace, board._id);\n            this.onCloseMsg();\n          }}\n        >\n          Undo\n        </div>\n        <button\n          className=\"btn reset-btn auto-center br4\"\n          onClick={this.onCloseMsg}\n        >\n          <CloseSmall />\n        </button>\n      </section>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspace: state.workspaceModule.workspace,\n    lastEditedWorkspace: state.workspaceModule.lastEditedWorkspace,\n    board: state.boardModule.board,\n  };\n}\n\nconst mapDispatchToProps = {\n  undo,\n};\n\nexport const UserMsg = connect(mapStateToProps, mapDispatchToProps)(_UserMsg);\n","import React from 'react';\n\nexport class HomePage extends React.Component {\n  componentDidMount() {\n    document.title = `Welcome to Wednesday!`;\n  }\n  render() {\n    return (\n      <div className=\"main-home-page \">\n        <div className=\"home-page flex justify-center\">\n          <div className=\"head-line flex column align-center\">\n            <h1>Work Without Limits</h1>\n            <h2>\n              Easily build, run, and scale your dream workflows on one platform.\n              <br></br>\n              What would you like to manage with monday.com Work OS?\n            </h2>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Link from '@material-ui/core/Link';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Container from '@material-ui/core/Container';\nimport { userService } from '../services/user.service';\nimport { GoogleLogin } from 'react-google-login';\nimport { loadWorkspaces } from '../store/actions/workspace.actions';\nimport {\n  onLogin,\n  onSignup,\n  onLogout,\n  loadUsers,\n  onLoginWithGoogle,\n} from '../store/actions/user.actions.js';\n\nclass _Login extends React.Component {\n  state = {\n    credentials: {\n      username: '',\n      fullname: '',\n      password: '',\n    },\n    isSignup: false,\n  };\n  componentDidMount() {\n    document.title = `Wednesday Login`;\n  }\n  handleChange = ({ target }) => {\n    const field = target.name;\n    if (!field) return;\n    const val = target.value;\n    this.setState((preState) => ({\n      credentials: { ...preState.credentials, [field]: val },\n    }));\n  };\n\n  onLogin = async (ev, guest) => {\n    ev.preventDefault();\n    if (guest) {\n      await this.props.onLogin(guest);\n    } else {\n      const { username, password } = this.state.credentials;\n      if (!username || !password) return;\n      await this.props.onLogin({ username, password }, null);\n    }\n    const user = userService.getLoggedinUser();\n    const workspaces = await this.props.loadWorkspaces(user);\n    this.props.loadUsers();\n\n    //Open first board of first workspace\n    const boardId = workspaces[0].boards[0]._id;\n    // loadWorkspace(workspaces[0])\n    this.props.history.push(`/board/${boardId}`);\n  };\n\n  onSignup = (ev) => {\n    ev.preventDefault();\n    const { username, fullname, password } = this.state.credentials;\n    if (!username || !password || !fullname) return;\n    this.props.onSignup({ username, password, fullname });\n  };\n  responseGoogle = async (response) => {\n    const userToSave = {\n      username: response.profileObj.email,\n      fullname: response.profileObj.name,\n      img: response.profileObj.imageUrl,\n    };\n    await this.props.onLoginWithGoogle(userToSave);\n    const user = userService.getLoggedinUser();\n    console.log('user after login', user);\n    const workspaces = await this.props.loadWorkspaces(user);\n    this.props.loadUsers();\n    const boardId = workspaces[0].boards[0]._id;\n    this.props.history.push(`/board/${boardId}`);\n  };\n\n  render() {\n    const { isSignUp, credentials } = this.state;\n    const { username, fullname, password } = credentials;\n    return (\n      <Container component=\"main\" maxWidth=\"xs\">\n        <CssBaseline />\n        <div\n          style={{\n            marginTop: '40px',\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n          }}\n        >\n          <Avatar\n            style={{\n              margin: '40px',\n              backgroundColor: '#4353ff',\n            }}\n          >\n            {/* <LockOutlinedIcon /> */}\n          </Avatar>\n          <Typography component=\"h1\" variant=\"h5\">\n            {isSignUp ? 'Sign up' : 'Sign in'}\n          </Typography>\n          <form\n            style={{\n              width: '100%',\n              marginTop: '40px',\n            }}\n            onSubmit={isSignUp ? this.onSignup : this.onLogin}\n            noValidate\n          >\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              id=\"username\"\n              label=\"Username Address\"\n              name=\"username\"\n              value={username}\n              autoComplete=\"username\"\n              onChange={this.handleChange}\n              autoFocus\n            />\n            {isSignUp && (\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"fullname\"\n                label=\"Full Name\"\n                name=\"fullname\"\n                value={fullname}\n                autoComplete=\"fullname\"\n                onChange={this.handleChange}\n              />\n            )}\n            <TextField\n              variant=\"outlined\"\n              margin=\"normal\"\n              required\n              fullWidth\n              name=\"password\"\n              label=\"Password\"\n              type=\"password\"\n              id=\"password\"\n              value={password}\n              onChange={this.handleChange}\n              autoComplete=\"current-password\"\n            />\n            <FormControlLabel\n              control={<Checkbox value=\"remember\" color=\"primary\" />}\n              label=\"Remember me\"\n            />\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              style={{\n                margin: '25px 0',\n                backgroundColor: '#4353ff',\n              }}\n            >\n              {isSignUp ? 'Sign Up' : 'Sign In'}\n            </Button>\n            <div\n              className=\"flex auto-center\"\n              style={{ marginBottom: 10 + 'px' }}\n            >\n              <GoogleLogin\n                clientId=\"1090497579239-pe91bi8058atbcb12mbcffonugrjovlu.apps.googleusercontent.com\"\n                buttonText=\"Log in with Google\"\n                onSuccess={this.responseGoogle}\n                onFailure={this.responseGoogle}\n                cookiePolicy={'single_host_origin'}\n              />\n            </div>\n            <Grid container>\n              <Grid item>\n                <Link\n                  href=\"#\"\n                  variant=\"body2\"\n                  onClick={() => this.setState({ isSignUp: !isSignUp })}\n                >\n                  {isSignUp\n                    ? 'Already have an account? Sign in'\n                    : \"Don't have an account? Sign Up\"}\n                </Link>\n              </Grid>\n            </Grid>\n          </form>\n        </div>\n      </Container>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userModule.user,\n    users: state.userModule.users,\n  };\n}\n\nconst mapDispatchToProps = {\n  onLogin,\n  onSignup,\n  onLogout,\n  loadWorkspaces,\n  loadUsers,\n  onLoginWithGoogle,\n};\n\nexport const Login = connect(mapStateToProps, mapDispatchToProps)(_Login);\n","import { HomePage } from './js/pages/HomePage';\nimport { Login } from './js/pages/Login';\n\nconst routesHomePage = [\n    {\n        path: '/login',\n        component: Login,\n    },\n    {\n        path: '/',\n        component: HomePage,\n    },\n]\n\nexport default routesHomePage;","export default __webpack_public_path__ + \"static/media/notfound.a6c982eb.png\";","import notfound from '../../assets/img/not-found/notfound.png';\n\nexport function NoResault() {\n  return (\n    <div className=\"no-reasult flex column auto-center\">\n      <img src={notfound} alt=\"no-resaults\" />\n      No results found in this board\n    </div>\n  );\n}\n","import { groupService } from \"../../services/group.service\";\nimport { itemService } from \"../../services/item.service\";\nimport { workspaceService } from '../../services/workspace.service'\n\nexport function loadItems(group) {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'SET_ITEMS',\n                items: group.items\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function onPost(update, user, item, groups, workspace) {\n    return async dispatch => {\n        try {\n            const newWorkspace = itemService.onPost(update, user, item, groups, workspace)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace\n            })\n        } catch (err) {\n            console.log('Cannot add update', err)\n\n        }\n\n    }\n}\n\nexport function toggleSelected(board, selectedItems) {\n    return dispatch => {\n        const newBoard = JSON.parse(JSON.stringify(board))\n        dispatch({\n            type: 'TOGGLE_SELECT',\n            selectedItems\n        })\n        dispatch({\n            type: 'SET_BOARD',\n            board: newBoard\n        })\n        dispatch({\n            type: 'SET_GROUPS',\n            groups: newBoard.groups\n        })\n    }\n}\n\nexport function loadStatuses(board) {\n    return async dispatch => {\n        try {\n            const statuses = itemService.getStatuses(board)\n            dispatch({\n                type: 'GET_STATUS',\n                statuses\n            })\n\n        } catch (err) {\n            console.log('Cannot search item', err)\n        }\n    }\n}\nexport function getPersonItem(board,persons) {\n    return async dispatch => {\n        try {\n            const personsCount = itemService.getPersonItem(board, persons)\n            dispatch({\n                type: 'GET_PERSONS',\n                personsCount\n            })\n\n        } catch (err) {\n            console.log('Cannot search item', err)\n        }\n    }\n}\n\nexport function onSetSearch(board, searchBy) {\n    return (dispatch) => {\n        const groups = groupService.query(board, { searchBy })\n        try {\n            dispatch({\n                type: 'SET_GROUPS',\n                groups\n            })\n        } catch (err) {\n            console.log('Cannot search item', err)\n        }\n    }\n}\n\nexport function loadItem(board, itemId) {\n    return (dispatch) => {\n        try {\n            const item = itemService.getById(board, itemId)\n            dispatch({\n                type: 'SET_ITEM',\n                item\n            })\n        } catch (err) {\n            console.log('Cannot load item', err)\n        }\n    }\n}\n\nexport function onSort(board, sortStore) {\n    return (dispatch) => {\n        try {\n            const groups = groupService.query(board, { sortStore })\n            dispatch({\n                type: 'SET_GROUPS',\n                groups\n            })\n            dispatch({\n                type: 'SORT',\n                sortStore\n            })\n        } catch (err) {\n            console.log('Cannot sort item', err)\n        }\n    }\n}\n\nexport function removeItem(workspace, groupOrBoard, itemId,board) {\n    return async (dispatch) => {\n        try {\n            if (typeof itemId === 'string') {\n                var newWorkspace = itemService.remove(workspace, groupOrBoard, itemId,board)\n            } else {\n                var newWorkspace = itemService.removeSelected(workspace, groupOrBoard, itemId)\n                dispatch({\n                    type: 'TOGGLE_SELECT',\n                    selectedItems: []\n                })\n\n            }\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace\n            })\n\n        } catch (err) {\n            console.log('Cannot remove item', err)\n        }\n    }\n}\n\nexport function saveItem(item, user, workspace, group, addToTop, board, Duplicate) {\n    return async (dispatch) => {\n        try {\n            const newWorkspace = itemService.save(item, group, workspace, user, addToTop, board, Duplicate)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace,\n            })\n        } catch (err) {\n            console.log('Cannot add item', err)\n        }\n    }\n}\n\nexport function duplicateItems(workspace, board, selectedItems) {\n    return async (dispatch) => {\n        try {\n            const newWorkspace = itemService.duplicateItems(workspace, board, selectedItems)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace,\n            })\n            dispatch({\n                type: 'TOGGLE_SELECT',\n                selectedItems: []\n            })\n        } catch (err) {\n            console.log('Cannot add item', err)\n        }\n    }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport { Doughnut, Pie, Bar, Line } from 'react-chartjs-2';\nimport { loadStatuses } from '../../store/actions/item.actions';\n\nclass _DashboardView extends React.Component {\n  state = {\n    chartType: 'Pie',\n  };\n  componentDidMount() {\n    this.props.loadStatuses(this.props.board);\n  }\n\n  changeChart = (type) => {\n    this.setState({ chartType: type });\n  };\n  render() {\n    const { statuses } = this.props;\n    const { chartType } = this.state;\n    if (!statuses.length) return <div>loading</div>;\n    const statusToShow = Object.keys(statuses[0]);\n    const numbers = Object.values(statuses[0]);\n    const colors = Object.values(statuses[1]);\n    const DynamicChart = (props) => {\n      switch (chartType) {\n        case 'Pie':\n          return <Pie {...props} />;\n        case 'Doughnut':\n          return <Doughnut {...props} />;\n        case 'Bar':\n          return <Bar {...props} />;\n        case 'Line':\n          return <Line {...props} />;\n        default:\n          return;\n      }\n    };\n    if (!statusToShow || !numbers || !colors) return <div>loading</div>;\n    const data = {\n      labels: statusToShow,\n      datasets: [\n        {\n          label: '# of Votes',\n          data: numbers,\n          backgroundColor: colors,\n          borderColor: colors,\n          borderWidth: 3,\n        },\n      ],\n    };\n    return (\n      <div className=\"dashboard-preview flex column align-center\">\n        <div className=\"charts-list flex\">\n          <h3\n            className=\"chart-choice\"\n            onClick={() => {\n              this.changeChart('Pie');\n            }}\n          >\n            Pie\n          </h3>\n          <h3\n            className=\"chart-choice\"\n            onClick={() => {\n              this.changeChart('Doughnut');\n            }}\n          >\n            Doughnut\n          </h3>\n          <h3\n            className=\"chart-choice\"\n            onClick={() => {\n              this.changeChart('Bar');\n            }}\n          >\n            Bar\n          </h3>\n          <h3\n            className=\"chart-choice\"\n            onClick={() => {\n              this.changeChart('Line');\n            }}\n          >\n            Line\n          </h3>\n        </div>\n        <div className=\"dashboard\">\n          <DynamicChart data={data} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    statuses: state.itemModule.statuses,\n    workspace: state.workspaceModule.workspace,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadStatuses,\n};\n\nexport const DashboardView = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_DashboardView);\n","export default __webpack_public_path__ + \"static/media/user.a5e235dd.svg\";","import { queryColors } from '../../services/label.service';\n\nexport function StatusColorPalette({\n  setColor,\n  hoverColor,\n  onAddLabel,\n  onEditLabel,\n  statusIdx,\n}) {\n  return (\n    <div className=\"status-cange-color flex auto-center\">\n      {queryColors().map((color) => {\n        return (\n          <div\n            key={color}\n            onMouseOver={() => {\n              setColor((prevState) => {\n                return { ...prevState, color };\n              });\n            }}\n            onMouseLeave={() =>\n              setColor((prevState) => {\n                return { ...prevState, color: null };\n              })\n            }\n            onClick={() => {\n              hoverColor.idx || hoverColor.idx === 0\n                ? onEditLabel(statusIdx(), color, hoverColor.idx, 'color')\n                : onAddLabel(statusIdx(), color);\n              setColor((prevState) => {\n                return { ...prevState, idx: null };\n              });\n            }}\n            className=\"color-icon btn\"\n            style={{ backgroundColor: color }}\n          ></div>\n        );\n      })}\n    </div>\n  );\n}\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\n\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { FiDroplet } from 'react-icons/fi';\nimport Edit from 'monday-ui-react-core/dist/icons/Edit';\nimport Drag from 'monday-ui-react-core/dist/icons/Drag';\nimport CloseSmall from 'monday-ui-react-core/dist/icons/CloseSmall';\n\nimport { StatusColorPalette } from './StatusColorPalette';\n\nimport { saveLabel, removeLabel } from '../../store/actions/label.actions';\nimport { toggleMenu } from '../../store/actions/board.actions';\n\nexport function _StatusMenu({\n  toggleMenus,\n  removeLabel,\n  onEditItem,\n  toggleMenu,\n  workspace,\n  saveLabel,\n  board,\n  group,\n  item,\n}) {\n  const [isEdit, setIsEdit] = useState(false);\n  const [hoverColor, setColor] = useState({ idx: null, color: null });\n\n  const onAddLabel = (columnIdx, color = null) => {\n    saveLabel(workspace, board, columnIdx, color);\n  };\n\n  const onEditLabel = (columnIdx, value, labelIdx, type, prevTxt) => {\n    if (value === prevTxt) return;\n    const label = board.columns[columnIdx].labels[labelIdx];\n    const prevColor = label.color;\n    switch (type) {\n      case 'color':\n        label.color = value;\n        break;\n      case 'title':\n        label.title = value;\n        break;\n\n      default:\n        break;\n    }\n    saveLabel(workspace, board, columnIdx, label, labelIdx, prevColor, type);\n  };\n\n  const onRemoveLabel = (labelIdx, columnIdx) => {\n    removeLabel(labelIdx, board, columnIdx, workspace);\n  };\n\n  const onChangeStatus = (item, group, column, label) => {\n    const columnIdx = item.columns.findIndex(\n      (currColumn) => currColumn.type === column.type\n    );\n    item.columns[columnIdx].label = label;\n    const newItem = { ...item };\n    onEditItem(newItem, group);\n  };\n\n  const statusIdx = () => {\n    return board.columns.findIndex((column) => column.type === 'status');\n  };\n\n  return (\n    <div\n      className={`status-menu flex column space-between align-center\n      ${isEdit ? 'editing' : ''}`}\n    >\n      <div className=\"labels-list flex column full align-center\">\n        <Droppable type=\"label\" droppableId=\"labels\">\n          {(provided) => (\n            <div\n              className=\" wrapper flex column align-center\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {board.columns[statusIdx()]?.labels?.map((label, idx) => {\n                return isEdit ? (\n                  <Draggable key={label.id} draggableId={label.id} index={idx}>\n                    {(provided) => (\n                      <div\n                        key={label.id}\n                        className=\"color-option-editing flex\"\n                        {...provided.draggableProps}\n                        ref={provided.innerRef}\n                      >\n                        <div\n                          className=\"drag flex align-center\"\n                          {...provided.dragHandleProps}\n                        >\n                          <Drag />\n                        </div>\n                        <div\n                          className=\"input-wrapper flex\"\n                          style={{\n                            outline:\n                              hoverColor?.idx === idx\n                                ? '1px solid #0073ea'\n                                : 'none',\n                          }}\n                        >\n                          <div\n                            className=\"color-box btn\"\n                            style={{\n                              backgroundColor:\n                                hoverColor?.idx === idx && hoverColor?.color\n                                  ? hoverColor?.color\n                                  : label.color,\n                            }}\n                            onClick={() => {\n                              setColor((prevState) => {\n                                return hoverColor.idx === idx\n                                  ? { ...prevState, idx: null }\n                                  : { ...prevState, idx };\n                              });\n                            }}\n                          >\n                            <FiDroplet className=\"drop-hover\" />\n                          </div>\n                          <div\n                            className=\"label-input text-cmp\"\n                            contentEditable=\"true\"\n                            suppressContentEditableWarning={true}\n                            onBlur={(ev) =>\n                              onEditLabel(\n                                statusIdx(),\n                                ev.target.innerText,\n                                idx,\n                                'title',\n                                label.title\n                              )\n                            }\n                            style={{\n                              backgroundColor:\n                                hoverColor?.idx === idx\n                                  ? hoverColor?.color\n                                  : '#f5f6f8',\n                              color:\n                                hoverColor?.idx === idx && hoverColor?.color\n                                  ? '#fff'\n                                  : '#323338',\n                            }}\n                          >\n                            {label.title}\n                          </div>\n                        </div>\n                        <div\n                          className=\"delete-label btn flex align-center\"\n                          onClick={() => onRemoveLabel(idx, statusIdx())}\n                        >\n                          <CloseSmall className=\"delete-icon\" />\n                        </div>\n                      </div>\n                    )}\n                  </Draggable>\n                ) : (\n                  <div\n                    key={label.id}\n                    className=\"label flex auto-center btn text-cmp\"\n                    style={{ backgroundColor: label.color }}\n                    onClick={(ev) => {\n                      ev.stopPropagation();\n                      onChangeStatus(\n                        item,\n                        group,\n                        board.columns[statusIdx()],\n                        label\n                      );\n                      toggleMenu(toggleMenus);\n                    }}\n                  >\n                    {label.title}\n                  </div>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n\n        {isEdit && (\n          <div\n            style={{\n              backgroundColor:\n                hoverColor?.idx || hoverColor?.idx === 0\n                  ? '#fff'\n                  : hoverColor?.color,\n              color: hoverColor?.color ? '#fff' : '#c4c4c4',\n            }}\n            className=\"add-label-placeholder flex auto-center btn\"\n            onClick={() => {\n              onAddLabel(statusIdx());\n            }}\n          >\n            New Label\n          </div>\n        )}\n      </div>\n      {isEdit && (\n        <StatusColorPalette\n          setColor={setColor}\n          hoverColor={hoverColor}\n          onAddLabel={onAddLabel}\n          statusIdx={statusIdx}\n          onEditLabel={onEditLabel}\n        />\n      )}\n      <div className=\"divider\"></div>\n      <div\n        className=\"edit-label flex auto-center btn\"\n        onClick={(ev) => {\n          ev.stopPropagation();\n          setIsEdit(!isEdit);\n        }}\n      >\n        {!isEdit && <Edit />}\n        {isEdit ? 'Apply' : 'Add/Edit Labels'}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    toggleMenus: state.workspaceModule.toggleMenus,\n    workspace: state.workspaceModule.workspace,\n  };\n}\n\nconst mapDispatchToProps = {\n  toggleMenu,\n  saveLabel,\n  removeLabel,\n};\n\nexport const StatusMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_StatusMenu);\n","import { labelService } from \"../../services/label.service\";\nimport { workspaceService } from \"../../services/workspace.service\";\n\nexport function saveLabel(workspace, board, columnIdx, label, labelIdx, prevColor, type) {\n    return async dispatch => {\n        try {\n            const newWorkspace = labelService.save(workspace, board, columnIdx, label, labelIdx, prevColor, type);\n            await workspaceService.save(newWorkspace);\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace,\n            })\n        } catch (err) {\n            console.log('Cannot add label', err)\n        }\n    }\n}\n\nexport function removeLabel(labelIdx, board, columnIdx, workspace) {\n    return async dispatch => {\n        try {\n            const newWorkspace = labelService.remove(labelIdx, board, columnIdx, workspace);\n            await workspaceService.save(newWorkspace);\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace,\n            })\n        } catch (err) {\n            console.log('Cannot remove label', err)\n        }\n    }\n}","import { BsEnvelope } from 'react-icons/bs';\nimport { connect } from 'react-redux';\nimport { saveItem } from '../../store/actions/item.actions';\nimport Close from 'monday-ui-react-core/dist/icons/Close';\nfunction _PersonMenu({\n  toggleMenus,\n  toggleMenu,\n  workspace,\n  saveItem,\n  findIdx,\n  group,\n  board,\n  users,\n  user,\n  item,\n}) {\n  const onAddMember = (user) => {\n    item.columns[findIdx('member')].members.unshift(user);\n    const newItem = JSON.parse(JSON.stringify(item));\n    saveItem(newItem, user, workspace, group, null, board, '');\n  };\n  const removePerson = (memberId) => {\n    const memberIdx = item.columns[findIdx('member')].members.findIndex(\n      (member) => member._id === memberId\n    );\n    item.columns[findIdx('member')].members.splice(memberIdx, 1);\n    const newItem = JSON.parse(JSON.stringify(item));\n    saveItem(newItem, user, workspace, group, null, board, '');\n  };\n\n  const checkMember = (memberId) => {\n    return item.columns[findIdx('member')].members.some((member) => {\n      return member._id === memberId;\n    });\n  };\n  return (\n    <div className=\"person-menu menu-modal flex column\">\n      <div className=\"item-member-list flex\">\n        {item.columns[findIdx('member')].members.map((member) => {\n          return (\n            <div className=\"member-box fs12 flex align-center\" key={member._id}>\n              <div className=\"user-wrapper flex align-center\">\n                <img src={member.img} alt=\"user-img\" />\n                {member.fullname}\n              </div>\n              <div\n                className=\"clear-btn flex auto-center\"\n                onClick={() => {\n                  removePerson(member._id);\n                }}\n              >\n                <Close />\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className=\"search-person\">\n        <input type=\"text\" placeholder=\"Enter name\" />\n      </div>\n      <div className=\"divider\"></div>\n      <div className=\"members-list  flex column\">\n        {users.map((user) => {\n          const isExcluded = checkMember(user._id);\n          if (isExcluded) return <div key={user._id}></div>;\n          {\n            return (\n              <div\n                className=\"wrapper\"\n                key={user._id}\n                onClick={(ev) => {\n                  ev.preventDefault();\n                  onAddMember(user);\n                  toggleMenu(toggleMenus);\n                }}\n              >\n                <div className=\"add-member-box br4 btn flex\">\n                  <div className=\"img-user flex auto-center\">\n                    <img src={user.img} alt=\"member-img\" />\n                  </div>\n                  <div className=\"fullname-user full\">\n                    <span>{user.fullname}</span>\n                  </div>\n                </div>\n              </div>\n            );\n          }\n        })}\n        <div\n          className=\"invite br4 flex align-center\"\n          onClick={() => {\n            toggleMenu(toggleMenus, 'isMemberModal', true);\n          }}\n        >\n          <BsEnvelope />\n          Invite a new member by username\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspace: state.workspaceModule.workspace,\n    board: state.boardModule.board,\n    users: state.userModule.users,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  saveItem,\n};\n\nexport const PersonMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_PersonMenu);\n","import React from 'react';\nimport { Calendar } from 'react-date-range';\n\nimport 'react-date-range/dist/styles.css'; // main style file\nimport 'react-date-range/dist/theme/default.css'; // theme css file\n\nexport class DatePicker extends React.Component {\n  handleSelect = (date) => {\n    const { item, group, onEditItem } = this.props; \n    const columnIdx = item.columns.findIndex(\n      (currColumn) => currColumn.type === 'date'\n    );\n    item.columns[columnIdx].date = date.getTime();\n    const newItem = { ...item };\n    onEditItem(newItem, group);\n    this.props.toggleMenu(this.props.toggleMenus)\n  };\n\n  render() {\n    const { item } = this.props;\n    const columnIdx = item.columns.findIndex(\n      (currColumn) => currColumn.type === 'date'\n    );\n    return (\n      <div className=\"date-menu\">\n        <Calendar\n          date={new Date(item.columns[columnIdx].date || Date.now())}\n          onShownDateChange={this.onShownDateChange}\n          onChange={this.handleSelect}\n        />\n      </div>\n    );\n  }\n}\n","import React, { useState } from 'react';\nimport { FaPlus } from 'react-icons/fa';\n\nimport user from '../../../assets/img/user.svg';\nimport { StatusMenu } from '../menus/StatusMenu';\nimport { PersonMenu } from '../menus/PersonMenu';\nimport { DatePicker } from '../menus/DatePicker';\n\nexport function ItemColumn({\n  toggleMenus,\n  toggleMenu,\n  onEditItem,\n  column,\n  board,\n  group,\n  item,\n  workspace,\n}) {\n  const [isFocus, setFocus] = useState(false);\n\n\n  const findIdx = (type) => {\n    const idx = board.cmpsOrder.findIndex((column) => column === type);\n    return idx;\n  };\n\n  const printDate = (timestamp) => {\n    const date = new Date(timestamp);\n    const month = date.getMonth();\n    const day = date.getDate();\n    const months = [\n      'Jan',\n      'Feb',\n      'Mar',\n      'Apr',\n      'May',\n      'June',\n      'July',\n      'Aug',\n      'Sept',\n      'Oct',\n      'Nov',\n      'Dec',\n    ];\n    return `${Date.now() - timestamp > 0 ? '!' : ''}${months[month]} ${\n      day < 10 ? '0' + day : day\n    }`;\n  };\n\n  const onBlur = (newTxt, prevTxt) => {\n    if (newTxt === prevTxt) return;\n    item.columns[findIdx('number')].number = newTxt;\n    const newItem = { ...item };\n    onEditItem(newItem, group);\n  };\n\n\n  const renderSwitch = (column) => {\n    switch (column.type) {\n      case 'status':\n        return (\n          <div\n            className=\"status fill\"\n            style={{\n              backgroundColor: column.label.color,\n              minWidth: board.columns[findIdx('status')].width,\n            }}\n          >\n            <span className=\"fold\"></span>\n            <div\n              className=\"item-column status-col flex cell-cmp btn\"\n              onClick={(ev) => {\n                ev.stopPropagation();\n                toggleMenu(toggleMenus, 'statusMenu', item.id);\n              }}\n            >\n              {column.label.title}\n            </div>\n            {toggleMenus.statusMenu === item.id && (\n              <StatusMenu\n                toggleMenus={toggleMenus}\n                onEditItem={onEditItem}\n                toggleMenu={toggleMenu}\n                workspace={workspace}\n                board={board}\n                group={group}\n                item={item}\n              />\n            )}\n          </div>\n        );\n\n      case 'member':\n        return (\n          <div\n            onClick={(ev) => {\n              ev.preventDefault();\n              toggleMenu(toggleMenus, 'personMenu', item.id);\n            }}\n            className=\"item-column member-col flex cell-cmp btn\"\n            style={{\n              minWidth: board.columns[findIdx('member')].width,\n            }}\n          >\n            <div className=\"add-member auto-center\">\n              <FaPlus className=\"plus\" />\n            </div>\n            {!column.members.length && (\n              <img\n                className=\"profile-icon\"\n                src={user}\n                alt=\"member-placeholder\"\n              />\n            )}\n            {column.members &&\n              column.members.map((member) => {\n                return (\n                  <img\n                    key={member._id}\n                    src={member.img}\n                    className=\"profile-icon\"\n                    alt=\"member-img\"\n                  />\n                );\n              })}\n            <div className=\"add-member-modal\">\n              {toggleMenus.personMenu === item.id && (\n                <PersonMenu\n                  toggleMenus={toggleMenus}\n                  toggleMenu={toggleMenu}\n                  workspace={workspace}\n                  findIdx={findIdx}\n                  group={group}\n                  item={item}\n                />\n              )}\n            </div>\n          </div>\n        );\n\n      case 'date':\n        return (\n          <div\n            className=\"date btn cell-cmp\"\n            onClick={(ev) => {\n              ev.stopPropagation();\n              toggleMenu(toggleMenus, 'dateMenu', item.id);\n            }}\n          >\n            <div\n              className=\"date-border\"\n              style={{\n                backgroundColor:\n                  column.date && Date.now() - column.date > 0 ? '#e2445c' : '',\n              }}\n            >\n              <div\n                className=\"item-column date-col flex auto-center btn\"\n                style={{\n                  minWidth: board.columns[findIdx('date')].width - 10,\n                  color:\n                    column.date && Date.now() - column.date > 0\n                      ? '#fff'\n                      : '#666',\n                }}\n              >\n                {column.date && printDate(column.date)}\n              </div>\n            </div>\n            {toggleMenus.dateMenu === item.id && (\n              <DatePicker\n                workspace={workspace}\n                toggleMenus={toggleMenus}\n                onEditItem={onEditItem}\n                toggleMenu={toggleMenu}\n                board={board}\n                group={group}\n                item={item}\n              />\n            )}\n          </div>\n        );\n\n      case 'number':\n        return (\n          <div\n            className=\"item-col number-col cell-cmp\"\n            style={{ minWidth: board.columns[findIdx('number')].width }}\n          >\n            <div\n              className={`number-field flex auto-center ${\n                isFocus ? 'focus' : ''\n              }`}\n              contentEditable='true'\n              suppressContentEditableWarning={true}\n              onBlur={(ev) => {\n                ev.stopPropagation();\n                onBlur(ev.target.innerText, column.number, column);\n                setFocus(false);\n              }}\n              onFocus={(ev) => {\n                ev.stopPropagation();\n                setFocus(true);\n              }}\n            >\n              {column.number}\n            </div>\n          </div>\n        );\n      default:\n    }\n  };\n  return <>{renderSwitch(column)}</>;\n}\n","import Delete from 'monday-ui-react-core/dist/icons/Delete';\nimport Duplicate from 'monday-ui-react-core/dist/icons/Duplicate';\n\nexport function ItemMenu({\n  item,\n  onRemoveItem,\n  toggleMenus,\n  toggleMenu,\n  onAddItem,\n  group,\n  board\n}) {\n  return (\n    <div className=\"item-menu menu-modal br8\">\n      <div className=\"menu-section fs14\">\n        <div\n          className=\"btn flex align-center  header-btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            onAddItem(item, group, false, board, 'Duplicate');\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <Duplicate />\n          Duplicate\n        </div>\n        <div className=\"divider\"></div>\n        <div\n          className=\"btn flex align-center header-btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            onRemoveItem(item.id);\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <Delete />\n          Delete\n        </div>\n        <div className=\"btn header-btn\">Archive</div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from 'react';\nimport { withRouter } from 'react-router';\n\nimport AddUpdate from 'monday-ui-react-core/dist/icons/AddUpdate';\nimport Update from 'monday-ui-react-core/dist/icons/Update';\nimport { FaCaretDown } from 'react-icons/fa';\nimport Check from 'monday-ui-react-core/dist/icons/Check';\n\nimport { toggleMenu } from '../../store/actions/board.actions';\nimport { loadItem, toggleSelected } from '../../store/actions/item.actions';\n\nimport { ItemColumn } from './ItemColumn';\nimport { connect } from 'react-redux';\nimport { ItemMenu } from '../menus/ItemMenu';\n\nfunction _ItemPreview({\n  toggleSelected,\n  selectedItems,\n  onRemoveItem,\n  toggleMenus,\n  onEditItem,\n  toggleMenu,\n  workspace,\n  onAddItem,\n  location,\n  provided,\n  history,\n  onBlur,\n  board,\n  group,\n  item,\n}) {\n  const toggleSelect = (itemId) => {\n    if (selectedItems.includes(itemId)) {\n      const itemIdx = selectedItems.findIndex((item) => item === itemId);\n      selectedItems.splice(itemIdx, 1);\n    } else {\n      selectedItems.push(itemId);\n    }\n    toggleSelected(board, selectedItems);\n  };\n\n  const [isFocus, setFocus] = useState(false);\n\n  const input = React.createRef();\n\n  return (\n    <div className=\"item-preview flex\">\n      {toggleMenus.itemMenu === item.id && (\n        <ItemMenu\n          onRemoveItem={onRemoveItem}\n          toggleMenus={toggleMenus}\n          toggleMenu={toggleMenu}\n          onAddItem={onAddItem}\n          board={board}\n          group={group}\n          item={item}\n        />\n      )}\n      <div className=\"item-menu-arrow flex auto-center\">\n        <div\n          className=\"item-menu-button br4 btn flex auto-center\"\n          onClick={() => {\n            toggleMenu(toggleMenus, 'itemMenu', item.id);\n          }}\n        >\n          <FaCaretDown />\n        </div>\n      </div>\n\n      <div\n        {...provided.dragHandleProps}\n        className=\"item-title flex space-between cell-cmp\"\n        onClick={() =>\n          !isFocus && history.push(location.pathname + `/item/${item.id}`)\n        }\n      >\n        <div className=\"title flex align-center\">\n          <div\n            className={`indicator select flex auto-center ${\n              selectedItems.length && 'is-selecting'\n            }`}\n            style={{ backgroundColor: group.style.color }}\n          >\n            <div\n              className={`selected btn flex ${\n                selectedItems.includes(item.id) ? 'is-selected' : ''\n              }`}\n              onClick={(ev) => {\n                ev.stopPropagation()\n                toggleSelect(item.id)\n              }}\n            >\n              {selectedItems.includes(item.id) && (\n                <span\n                  className=\"flex align-center \"\n                  style={{ color: group.style.color }}\n                >\n                  <Check />\n                </span>\n              )}\n            </div>\n          </div>\n          <div\n            className={`item-title-text ${isFocus ? 'focus' : ''}`}\n            contentEditable=\"true\"\n            suppressContentEditableWarning={true}\n            ref={input}\n            onBlur={(ev) => {\n              ev.stopPropagation();\n              onBlur(ev.target.innerText, item.title, item, 'item', group);\n              setFocus(false);\n            }}\n            onFocus={(ev) => {\n              ev.stopPropagation();\n              setFocus(true);\n            }}\n          >\n            {item.title}\n          </div>\n          <div\n            className={`edit-title-btn br4 ${isFocus ? 'focus' : ''}`}\n            onClick={(ev) => {\n              ev.stopPropagation();\n              input.current.focus();\n            }}\n          >\n            Edit\n          </div>\n        </div>\n        <div\n          className=\"add-update-btn-wrapper flex align-center\"\n          onClick={() => history.push(location.pathname + `/item/${item.id}`)}\n        >\n          {item.updates.length ? (\n            <>\n              <Update className=\"updates\" />\n              <span className=\"updates-count\">{item.updates.length}</span>\n            </>\n          ) : (\n            <AddUpdate className=\"add-update-btn\" />\n          )}\n        </div>\n      </div>\n      <div className=\"item-column-list flex\">\n        {item.columns.map((column, idx) => {\n          return (\n            <ItemColumn\n              toggleMenus={toggleMenus}\n              toggleMenu={toggleMenu}\n              onEditItem={onEditItem}\n              workspace={workspace}\n              column={column}\n              board={board}\n              group={group}\n              item={item}\n              key={idx}\n            />\n          );\n        })}\n      </div>\n      <div className=\"space-item\"></div>\n      <div className=\"indicator\"></div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    toggleMenus: state.workspaceModule.toggleMenus,\n    workspace: state.workspaceModule.workspace,\n    selectedItems: state.itemModule.selectedItems,\n  };\n}\n\nconst mapDispatchToProps = {\n  toggleMenu,\n  loadItem,\n  toggleSelected,\n};\n\nexport const ItemPreview = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(_ItemPreview)\n);\n","import { workspaceService } from \"../../services/workspace.service\";\nimport { groupService } from \"../../services/group.service\";\nimport { boardService } from \"../../services/board.service\";\n\nexport function setGroup(group) {\n    return async dispatch => {\n        try {\n            dispatch({\n                type: 'SET_GROUP',\n                group\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function editGroup(workspace, board, group, user, groupId, Duplicate) {\n    return async (dispatch) => {\n        try {\n            const newWorkspace = groupService.save(workspace, board, group, user, groupId, Duplicate)\n            const newBoard = boardService.getById(newWorkspace, board._id)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace,\n            })\n            dispatch({\n                type: 'SET_GROUPS',\n                groups: newBoard.groups,\n            })\n        } catch (err) {\n            console.log('Cannot edit group', err)\n        }\n    }\n}\n\nexport function loadGroups(board) {\n    return dispatch => {\n        try {\n            const groups = groupService.query(board)\n            dispatch({\n                type: 'SET_GROUPS',\n                groups\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function filterGroups(board, filterStore) {\n    return async dispatch => {\n        try {\n            const groups = groupService.query(board, filterStore)\n            dispatch({\n                type: 'SET_GROUPS',\n                groups\n            })\n            dispatch({\n                type: 'FILTER',\n                filterStore\n            })\n        } catch (err) {\n            console.log('Cannot load workspaces', err)\n        }\n    }\n}\n\nexport function removeGroup(workspace, board, groupId) {\n    return async dispatch => {\n        try {\n            const newWorkspace = groupService.removeGroup(workspace, board, groupId)\n            await workspaceService.save(newWorkspace)\n            dispatch({\n                type: 'EDIT_WORKSPACE',\n                workspace: newWorkspace\n            })\n        } catch (err) {\n            console.log('Cannot REMOVE group', err)\n        }\n    }\n}","import React from \"react\";\n\nexport class ColorPallete extends React.Component {\n    state = {\n      colors: ['#037f4c', '#00c875', '#9cd326', '#cab641','#ffcb00','#784bd1','#a25ddc','#0086c0','#579bfc','#66ccff','#bb3354','#e2445c','#ff158a','#ff5ac4','#ff642e','#fdab3d','#c4c4c4','#808080'],\n    };\n  \n    render() {\n      const { changeGroupColor,colorPicker,toggleMenus,toggleMenu} = this.props;\n      const { colors } = this.state;\n      return (\n          <div className=\"colors\">\n              {colors.map((color)=>(\n                  <div key={color} className=\"group-color-item btn\" style={{ backgroundColor: color}} onClick={(ev)=>{\n                      ev.stopPropagation();\n                      changeGroupColor(color)\n                      colorPicker();\n                      toggleMenu(toggleMenus)\n                  }}></div>\n              ))}\n          </div>\n          \n      );\n    }\n  }\n  ","import { FaAngleRight } from 'react-icons/fa';\nimport Delete from 'monday-ui-react-core/dist/icons/Delete';\nimport Duplicate from 'monday-ui-react-core/dist/icons/Duplicate';\nimport { ColorPallete } from '../dynamic-cmps/ColorPallete';\n\nexport function GroupMenu({\n  group,\n  isColor,\n  onRemoveGroup,\n  colorPicker,\n  changeGroupColor,\n  toggleMenus,\n  toggleMenu,\n  onEditGroup,\n  board,\n}) {\n  return (\n    <div className=\"group-menu menu-modal br8\">\n      <div className=\"menu-section fs14\">\n        <div className=\"btn header-btn\">Collapse this group</div>\n        <div className=\"btn header-btn\">Collapse all Groups</div>\n        <div className=\"btn header-btn\">Select all items</div>\n      </div>\n      <div className=\"divider\"></div>\n      <div className=\"menu-section fs14\">\n        <div\n          className=\"btn header-btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            toggleMenu(toggleMenus);\n            onEditGroup('New Group', group.id, board);\n          }}\n        >\n          Add group\n        </div>\n        <div\n          className=\"btn flex align-center header-btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            toggleMenu(toggleMenus);\n            onEditGroup(group, group.id, board, 'Duplicate');\n          }}\n        >\n          <Duplicate />\n          Duplicate this group\n        </div>\n        <div className=\"btn flex space-between align-center header-btn\">\n          Move group to board <FaAngleRight />\n        </div>\n      </div>\n      <div className=\"divider\"></div>\n      <div className=\"menu-section fs14\">\n        <div className=\"btn header-btn\">Rename group</div>\n        <div className=\"color-picker\">\n          <div\n            className=\"btn header-btn flex align-center\"\n            onClick={colorPicker}\n          >\n            <div className=\"change-group-color flex align-center\">\n              <div\n                className=\"group-color\"\n                style={{ backgroundColor: group.style.color }}\n              ></div>\n              Change group color\n            </div>\n          </div>\n          {isColor && (\n            <div className=\"color-pallete\">\n              <ColorPallete\n                toggleMenus={toggleMenus}\n                toggleMenu={toggleMenu}\n                colorPicker={colorPicker}\n                changeGroupColor={changeGroupColor}\n              />\n            </div>\n          )}\n        </div>\n      </div>\n      <div className=\"divider\"></div>\n      <div className=\"menu-section fs14\">\n        <div\n          className=\"btn flex align-center header-btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            onRemoveGroup(group.id);\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <Delete />\n          Delete\n        </div>\n        <div className=\"btn header-btn\">Archive</div>\n      </div>\n    </div>\n  );\n}\n","import { Draggable } from 'react-beautiful-dnd';\nimport Drag from 'monday-ui-react-core/dist/icons/Drag';\nexport function GroupColumn({ column, index }) {\n  return (\n    <Draggable draggableId={column.id} index={index}>\n      {(provided) => (\n        <div {...provided.draggableProps}\n         ref={provided.innerRef}\n         >\n          <div\n            {...provided.dragHandleProps}\n            className=\"group-column-header\"\n            key={column.id}\n            style={{ \n              minWidth: column.width,\n             }}\n          >\n            <div className=\"drag-btn\">\n              <Drag />\n            </div>\n            {column.title}\n          </div>\n        </div>\n      )}\n    </Draggable>\n  );\n}\n","// import DropdownChevronDown from 'monday-ui-react-core/dist/icons/DropdownChevronDown';\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { Droppable } from 'react-beautiful-dnd';\nimport { FaCaretDown } from 'react-icons/fa';\nimport Drag from 'monday-ui-react-core/dist/icons/Drag';\nimport Add from 'monday-ui-react-core/dist/icons/Add';\nimport { toggleMenu } from '../../store/actions/board.actions';\nimport { GroupMenu } from '../menus/GroupMenu';\nimport { GroupColumn } from './GroupColumn';\n\nexport class _GroupHeader extends React.Component {\n  state = {\n    isHover: false,\n    isColor: false,\n  };\n\n  onHover = (bool, groupId) => {\n    this.props.setCurrGroupId(groupId);\n    if (!groupId) this.setState({ isHover: bool });\n  };\n\n  colorPicker = () => {\n    const { isColor } = this.state;\n    this.setState({ isColor: !isColor });\n  };\n\n  changeGroupColor = (color) => {\n    const { group, onEditGroup } = this.props;\n    const newGroup = { ...group, style: { color } };\n    onEditGroup(newGroup);\n  };\n\n  render() {\n    const {\n      board,\n      group,\n      onBlur,\n      onRemoveGroup,\n      toggleMenus,\n      toggleMenu,\n      provided,\n      onEditGroup,\n    } = this.props;\n    const { isHover, isColor } = this.state;\n    return (\n      <div className=\"group-header flex\">\n        <div className=\"group-arrow\">\n          <div\n            className=\"group-menu-button btn\"\n            style={\n              isHover\n                ? { color: group.style.color }\n                : toggleMenus.groupMenu === group.id\n                ? { backgroundColor: '#cce5ff', color: '#0073ea' }\n                : { backgroundColor: group.style.color }\n            }\n            onMouseEnter={() => this.onHover(true)}\n            onMouseLeave={() => this.onHover(false)}\n            onClick={() => {\n              toggleMenu(toggleMenus, 'groupMenu', group.id);\n            }}\n          >\n            <FaCaretDown />\n          </div>\n        </div>\n        {toggleMenus.groupMenu === group.id && (\n          <GroupMenu\n            group={group}\n            board={board}\n            isColor={isColor}\n            toggleMenu={toggleMenu}\n            toggleMenus={toggleMenus}\n            onEditGroup={onEditGroup}\n            onRemoveGroup={onRemoveGroup}\n            colorPicker={this.colorPicker}\n            changeGroupColor={this.changeGroupColor}\n          />\n        )}\n\n        <div\n          onMouseEnter={() => this.onHover(true, group.id)}\n          onMouseLeave={() => this.onHover(false, group.id)}\n          className=\"group-title fs18 flex align-center fs18\"\n          style={{ color: group.style.color }}\n          contentEditable=\"true\"\n          suppressContentEditableWarning={true}\n          onBlur={(ev) => {\n            onBlur(ev.target.innerText, group.title, group, 'group');\n          }}\n        >\n          <div className=\"drag-btn btn\" {...provided.dragHandleProps}>\n            <Drag />\n          </div>\n          {group.title}\n        </div>\n        <Droppable\n          droppableId=\"all-columns\"\n          direction=\"horizontal\"\n          type=\"column\"\n        >\n          {(provided) => (\n            <div\n              className=\"group-column-list flex\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {board.columns.map((column, index) => {\n                return (\n                  <GroupColumn index={index} key={column.id} column={column} />\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <div className=\"add-column flex auto-center\">\n          <div className=\"plus-btn open flex auto-center btn\">\n            <Add className=\"icon\" />\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    toggleMenus: state.workspaceModule.toggleMenus,\n  };\n}\n\nconst mapDispatchToProps = { toggleMenu };\n\nexport const GroupHeader = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_GroupHeader);\n","export function StatusFooter({ board, group, column }) {\n  const getStatusMap = () => {\n    let statusToShow = [];\n    const statusMap = group.items.reduce(\n      (acc, item) => {\n        const statusIdx = item.columns.findIndex(\n          (column) => column.type === 'status'\n        );\n        acc.totalCount++;\n        const title = item.columns[statusIdx].label.title;\n        const color = item.columns[statusIdx].label.color;\n        if (acc[title]) {\n          acc[title].count++;\n        } else {\n          statusToShow.push(title);\n          acc[title] = {};\n          acc[title].count = 1;\n          acc[title].color = color;\n        }\n        acc.statusToShow = statusToShow;\n        return acc;\n      },\n      { totalCount: 0 }\n    );\n    return statusMap;\n  };\n\n  const statusMap = getStatusMap();\n\n  return (\n    <div style={{ minWidth: column.width }} className=\"status-footer flex\">\n      <div className=\"battery-container flex align-center\">\n        {statusMap.statusToShow?.map((status) => {\n          return (\n            <div\n              key={status}\n              className=\"battery-status tooltip\"\n              style={{\n                width:\n                  (statusMap[status].count / statusMap.totalCount) * 100 + '%',\n                backgroundColor: statusMap[status].color,\n              }}\n            >\n              <span className=\"tooltiptext\">\n                {`${status} ${statusMap[status].count}/${\n                  statusMap.totalCount\n                } ${(\n                  (statusMap[status].count / statusMap.totalCount) *\n                  100\n                ).toFixed(1)}%`}\n              </span>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","export function NumberFooter({\n  toggleMenus,\n  toggleMenu,\n  column,\n  group,\n  board,\n}) {\n  return (\n    <div\n      style={{ minWidth: column.width }}\n      className=\"status-footer flex\"\n      onClick={(ev) => {\n        ev.preventDefault();\n        toggleMenu(toggleMenus, 'numberMenu', group.id);\n      }}\n    ></div>\n  );\n}\n","export function NumberMenu() {\n  return <div className=\"\"></div>;\n}\n","import { StatusFooter } from './StatusFooter';\nimport { NumberFooter } from '../group/NumberFooter';\nimport { NumberMenu } from '../menus/NumberMenu';\n\nexport function GroupFooter({ board, group, toggleMenus, toggleMenu }) {\n  return (\n    <div className=\"group-footer flex\">\n      <div className=\"empty-cell-cmp group-title\"></div>\n      {board.columns.map((column) => {\n        return column.type === 'status' ? (\n          <StatusFooter\n            key={column.type}\n            board={board}\n            group={group}\n            column={column}\n          />\n        ) : column.type === 'number' ? (\n          <>\n            <NumberFooter\n              key={column.type}\n              board={board}\n              group={group}\n              column={column}\n              toggleMenus={toggleMenus}\n              toggleMenu={toggleMenu}\n            />\n            {toggleMenus.numberMenu === group.id && <NumberMenu />}\n          </>\n        ) : (\n          <div\n            key={column.id}\n            style={{ minWidth: column.width }}\n            className=\"empty-footer-column\"\n          ></div>\n        );\n      })}\n      <div className=\"empty-cell-end\"></div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\nimport { ItemPreview } from '../item/ItemPreview';\nimport { setGroup, removeGroup } from '../../store/actions/group.actions';\nimport { toggleMenu } from '../../store/actions/board.actions';\nimport { saveUndoWorkspace } from '../../store/actions/workspace.actions';\nimport { GroupHeader } from './GroupHeader';\nimport { GroupFooter } from './GroupFooter';\nimport { removeItem } from '../../store/actions/item.actions';\nimport { eventBusService } from '../../services/event-bus.service';\n\nclass _GroupPreview extends React.Component {\n  state = {\n    itemTitle: '',\n    isFocused: false,\n  };\n\n  handleChange = ({ target }) => {\n    const value = target.value;\n    this.setState({ itemTitle: value });\n  };\n\n  clearState = () => {\n    this.setState({ itemTitle: '', isFocused: false });\n  };\n\n  onBlur = () => {\n    const { isFocused } = this.state;\n    this.setState({ isFocused: !isFocused });\n  };\n\n  onFocus = () => {\n    const { isFocused } = this.state;\n    if (isFocused) return;\n    this.setState({ isFocused: !isFocused });\n  };\n\n  onRemoveGroup = (groupId) => {\n    const { workspace, board, removeGroup } = this.props;\n    this.saveUndo(workspace);\n    removeGroup(workspace, board, groupId);\n    eventBusService.emit('user-msg', {\n      txt: 'group was successfully deleted',\n      // type: '',\n    });\n  };\n\n  makeId = (length = 6) => {\n    var txt = '';\n    var possible =\n      'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n\n    for (var i = 0; i < length; i++) {\n      txt += possible.charAt(Math.floor(Math.random() * possible.length));\n    }\n    return txt;\n  };\n  onRemoveItem = (itemId) => {\n    const { workspace, group, removeItem, board, user } = this.props;\n    const activity = {\n      id: this.makeId(),\n      createdAt: Date.now(),\n      activity: 'Removed item',\n      createdBy: {\n        _id: user._id,\n        fullname: user.fullname,\n        img: user.img,\n      },\n    };\n    board.activities.unshift(activity);\n    this.saveUndo(workspace);\n    removeItem(workspace, group, itemId, board);\n    eventBusService.emit('user-msg', {\n      txt: 'We successfully deleted 1 item',\n      type: '',\n    });\n  };\n\n  saveUndo = (workspace) => {\n    const undoWorkspace = JSON.parse(JSON.stringify(workspace));\n    this.props.saveUndoWorkspace(undoWorkspace);\n  };\n\n  onKeyUp = (ev) => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      ev.target.blur();\n    }\n  };\n\n  render() {\n    const {\n      setCurrGroupId,\n      onEditGroup,\n      toggleMenus,\n      onEditItem,\n      toggleMenu,\n      onAddItem,\n      provided,\n      onBlur,\n      board,\n      group,\n    } = this.props;\n    const { itemTitle, isFocused } = this.state;\n    return (\n      <div key={group.id} className=\"group-preview\">\n        <GroupHeader\n          onRemoveGroup={this.onRemoveGroup}\n          setCurrGroupId={setCurrGroupId}\n          onEditGroup={onEditGroup}\n          provided={provided}\n          onBlur={onBlur}\n          board={board}\n          group={group}\n        />\n        <Droppable type=\"item\" droppableId={group.id}>\n          {(provided, snapshot) => (\n            <div\n              className=\"item-list flex column\"\n              {...provided.droppableProps}\n              ref={provided.innerRef}\n            >\n              {group?.items?.map((item, index) => {\n                return (\n                  <Draggable key={item.id} draggableId={item.id} index={index}>\n                    {(provided) => (\n                      <div\n                        className=\"item-preview-container\"\n                        {...provided.draggableProps}\n                        ref={provided.innerRef}\n                      >\n                        <ItemPreview\n                          onRemoveItem={this.onRemoveItem}\n                          onEditItem={onEditItem}\n                          onAddItem={onAddItem}\n                          provided={provided}\n                          onBlur={onBlur}\n                          group={group}\n                          board={board}\n                          key={item.id}\n                          item={item}\n                        />\n                      </div>\n                    )}\n                  </Draggable>\n                );\n              })}\n              {provided.placeholder}\n            </div>\n          )}\n        </Droppable>\n        <div>\n          <form\n            className=\"item-add\"\n            onSubmit={(ev) => {\n              ev.preventDefault();\n              onAddItem(itemTitle, group, false, board);\n              this.clearState();\n            }}\n          >\n            <div\n              className=\"indicator\"\n              style={{ backgroundColor: group.style.color, opacity: 0.5 }}\n            ></div>\n            <input\n              type=\"text\"\n              dir=\"auto\"\n              className=\"item-add-input\"\n              placeholder=\"+ Add\"\n              value={itemTitle}\n              onChange={this.handleChange}\n              onBlur={this.onBlur}\n              onFocus={this.onFocus}\n              onKeyUp={this.onKeyUp}\n            />\n\n            {(isFocused || itemTitle) && (\n              <>\n                <button className=\"item-add-button\">Add</button>\n                <div className=\"space-item\"></div>\n              </>\n            )}\n            <div className=\"indicator\"></div>\n          </form>\n        </div>\n        <GroupFooter\n          board={board}\n          group={group}\n          toggleMenus={toggleMenus}\n          toggleMenu={toggleMenu}\n        />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    isOpenNav: state.workspaceModule.isOpenNav,\n    workspace: state.workspaceModule.workspace,\n    toggleMenus: state.workspaceModule.toggleMenus,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  setGroup,\n  removeGroup,\n  removeItem,\n  saveUndoWorkspace,\n  toggleMenu,\n};\n\nexport const GroupPreview = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_GroupPreview);\n","import { Draggable } from 'react-beautiful-dnd';\nimport { GroupPreview } from '../group/GroupPreview';\nexport function TableView({\n  setCurrGroupId,\n  onEditGroup,\n  onEditItem,\n  onAddItem,\n  onBlur,\n  board,\n  groups,\n}) {\n  return (\n    <div className=\"table-view-container\">\n      {groups.map((group, index) => {\n        return (\n          <Draggable key={group.id} draggableId={group.id} index={index}>\n            {(provided, snapshot) => (\n              <div {...provided.draggableProps} ref={provided.innerRef}>\n                <GroupPreview\n                  setCurrGroupId={setCurrGroupId}\n                  onEditGroup={onEditGroup}\n                  onEditItem={onEditItem}\n                  onAddItem={onAddItem}\n                  provided={provided}\n                  snapshot={snapshot}\n                  groupIndex={index}\n                  onBlur={onBlur}\n                  key={group.id}\n                  group={group}\n                  board={board}\n                />\n              </div>\n            )}\n          </Draggable>\n        );\n      })}\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport Drag from 'monday-ui-react-core/dist/icons/Drag';\nimport { Droppable, Draggable } from 'react-beautiful-dnd';\n\nexport class KanbanGroup extends Component {\n  state = {\n    itemTitle: '',\n    isFocused: false,\n  };\n\n  handleChange = ({ target }) => {\n    const value = target.value;\n    this.setState({ itemTitle: value });\n  };\n\n  clearState = () => {\n    this.setState({ itemTitle: '', isFocused: false });\n  };\n  onBlur = () => {\n    const { isFocused } = this.state;\n    this.setState({ isFocused: !isFocused });\n  };\n\n  onFocus = () => {\n    const { isFocused } = this.state;\n    if (isFocused) return;\n    this.setState({ isFocused: !isFocused });\n  };\n\n  onKeyUp = (ev) => {\n    if (ev.keyCode === 13) {\n      ev.preventDefault();\n      ev.target.blur();\n    }\n  };\n\n  render() {\n    const { provided, group, onAddItem, board, snapshot} = this.props;\n    const { itemTitle, isFocused } = this.state;\n\n    return (\n      <div className=\"kanban-group\" \n      >\n        <div\n          className=\"group-box br4 flex column\"\n          style={{ backgroundColor: group.style.color }}\n          >\n          <div\n            className=\"list-header flex justify-center\"\n            {...provided.dragHandleProps}\n          >\n            <div className=\"drag-btn btn\">\n              <Drag />\n            </div>\n            <div className=\"kanban-group-title\">{group.title}</div>\n          </div>\n          <Droppable type=\"item\" droppableId={group.id}>\n            {(provided, snapshot) => (\n              <div\n                className=\"kanban-list flex column\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {group.items.map((item, index) => {\n                  return (\n                    <Draggable\n                      key={item.id}\n                      draggableId={item.id}\n                      index={index}\n                    >\n                      {(provided) => (\n                        <div\n                          className=\"item-preview-container br4\"\n                          {...provided.draggableProps}\n                          ref={provided.innerRef}\n                        >\n                          <div\n                            className=\"kanban-item\"\n                            {...provided.dragHandleProps}\n                            onBlur={this.onBlur}\n                          >\n                            {item.title}\n                          </div>\n                        </div>\n                      )}\n                    </Draggable>\n                  );\n                })}\n                <div className=\"item-add\">\n                  <form\n                    className=\"\"\n                    onSubmit={(ev) => {\n                      ev.preventDefault();\n                      onAddItem(itemTitle, group, false, board);\n                      this.clearState();\n                    }}\n                  >\n                    <input\n                      type=\"text\"\n                      dir=\"auto\"\n                      className={`item-add-input ${\n                        isFocused ? 'is-focus' : ''\n                      }`}\n                      placeholder=\"+ Add Item\"\n                      value={itemTitle}\n                      onChange={this.handleChange}\n                      onBlur={this.onBlur}\n                      onFocus={this.onFocus}\n                      onKeyUp={this.onKeyUp}\n                    />\n                  </form>\n                </div>\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </div>\n    );\n  }\n}\n","import { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { KanbanGroup } from './KanbanGroup';\nexport function KanbanView({\n  onEditGroup,\n  onEditItem,\n  onAddItem,\n  onBlur,\n  board,\n  groups,\n}) {\n  return (\n    <>\n      <div className=\"divider\"></div>\n      <Droppable direction=\"horizontal\" type=\"group\" droppableId=\"groups\">\n        {(provided) => (\n          <div className=\"kanban-view flex\" {...provided.droppableProps}\n            ref={provided.innerRef}>\n            {groups.map((group, index) => {\n              return (\n                <Draggable key={group.id} draggableId={group.id} index={index}>\n                  {(provided, snapshot) => (\n                    <div {...provided.draggableProps} ref={provided.innerRef}>\n                      <KanbanGroup\n                        onEditGroup={onEditGroup}\n                        onEditItem={onEditItem}\n                        onAddItem={onAddItem}\n                        provided={provided}\n                        snapshot={snapshot}\n                        groupIndex={index}\n                        onBlur={onBlur}\n                        key={group.id}\n                        group={group}\n                        board={board}\n                      />\n                    </div>\n                  )}\n                </Draggable>\n              );\n            })}\n            {provided.placeholder}\n          </div>\n\n        )}\n      </Droppable>\n    </>\n  );\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { DragDropContext, Droppable } from 'react-beautiful-dnd';\nimport { dragAndDrop } from '../../store/actions/board.actions';\nimport { NoResault } from '../NoResault';\nimport { DashboardView } from './DashboardView';\nimport { TableView } from './TableView';\nimport { KanbanView } from '../kanban/KanbanView';\n\nclass _BoardContent extends Component {\n  state = {\n    currGroupId: null,\n  };\n\n  handleOnDragEnd = (result) => {\n    const { workspace, board } = this.props;\n    this.props.dragAndDrop(workspace, board, result, this.state.currGroupId);\n  };\n\n  setCurrGroupId = (groupId) => {\n    this.setState({ currGroupId: groupId });\n  };\n\n  render() {\n    const {\n      onEditGroup,\n      onEditItem,\n      removeItem,\n      onAddItem,\n      workspace,\n      currView,\n      groups,\n      onBlur,\n      board,\n    } = this.props;\n    if (!groups.length) return <NoResault />;\n    return (\n      <DragDropContext onDragEnd={this.handleOnDragEnd}>\n        <div className=\"board-content-container\">\n          <Droppable type=\"group\" droppableId=\"groups\">\n            {(provided) => (\n              <div\n                className=\"board-content\"\n                {...provided.droppableProps}\n                ref={provided.innerRef}\n              >\n                {currView === 'chart' && <DashboardView board={board} />}\n                {currView === 'table' && (\n                  <TableView\n                    setCurrGroupId={this.setCurrGroupId}\n                    onEditGroup={onEditGroup}\n                    onEditItem={onEditItem}\n                    onAddItem={onAddItem}\n                    onBlur={onBlur}\n                    groups={groups}\n                    board={board}\n                  />\n                )}\n                {currView === 'kanban' && (\n                  <KanbanView\n                    onEditGroup={onEditGroup}\n                    onEditItem={onEditItem}\n                    workspace={workspace}\n                    onAddItem={onAddItem}\n                    removeItem={removeItem}\n                    onBlur={onBlur}\n                    groups={groups}\n                    board={board}\n                  />\n                )}\n                {provided.placeholder}\n              </div>\n            )}\n          </Droppable>\n        </div>\n      </DragDropContext>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspace: state.workspaceModule.workspace,\n  };\n}\n\nconst mapDispatchToProps = {\n  dragAndDrop,\n};\n\nexport const BoardContent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_BoardContent);\n","export function GroupFilter({ board, groups, onFilter, groupsIds }) {\n  const isFilter = (groupId) => {\n    return groupsIds.includes(groupId);\n  };\n\n  return (\n    <div className=\"column-option\">\n      <div className=\"title\">Group</div>\n      <div className=\"options-container flex column\">\n        {board.groups.map((group) => {\n          return (\n            <div\n              key={group.id}\n              className={`flex filter-item align-center br4 header-btn space-between ${\n                isFilter(group.id) ? 'filter' : ''\n              }`}\n              onClick={() => {\n                onFilter(group.id, '', true);\n              }}\n            >\n              <div className=\"text-wrapper flex align-center\">\n                <div\n                  className=\"color-div\"\n                  style={{ backgroundColor: group.style.color }}\n                ></div>\n                <div className=\"filter-group-list-text\">{group.title}</div>\n              </div>\n              <div>{group.items.length}</div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","\n\nexport function PersonFilter({ board, onFilterPerson, persons, personsCount, getPersonItem }) {\n    const getPersons = () => {\n        const persons = []\n        board.groups.map(group => {\n            group.items.map((item) => {\n                const columnIdx = item.columns.findIndex(column => column.type === 'member')\n                item.columns[columnIdx].members.map(member => {\n                    persons.push(member)\n                })\n            })\n        })\n        const personsToReturn = persons.filter((person, index, self) =>\n            index === self.findIndex((member) => (\n                member._id === person._id\n            ))\n        )\n        return personsToReturn\n    }\n    const isFilter = (personId) => {\n        return persons.includes(personId);\n    };\n\n    return (\n        <div className=\"column-option\">\n            <div className=\"title\">Persons</div>\n            <div className=\"options-container flex column\">\n                {getPersons().map((person) => {\n                    return <div\n                        key={person._id}\n                        className={`flex filter-item align-center br4 header-btn space-between\n                         ${isFilter(person._id) ? 'filter' : ''}`}\n                        onClick={() => {\n                            onFilterPerson(person._id)\n                        }}\n                    >\n                        <div className='flex auto-center'>\n                            <img src={person.img} alt=\"\" style={{width:25+'px', borderRadius: 50+'%', marginRight:5 +'px'}}/>\n                            {person.fullname}\n                        </div>\n                    </div>\n                })}\n            </div>\n        </div>\n    );\n}\n","export function StatusFilter({ board, onFilterStatus, statuses }) {\n  const statusIdx = () => {\n    return board.columns.findIndex((column) => column.type === 'status');\n  };\n\n  const isFilter = (label) => {\n    return statuses.includes(label);\n  };\n  return (\n    <div className=\"column-option\">\n      <div className=\"title\">Status</div>\n      <div className=\"options-container flex column\">\n        {board.columns[statusIdx()].labels.map((label) => {\n          return (\n            <div\n              className={`flex filter-item align-center br4 header-btn space-between ${\n                isFilter(label.title) ? 'filter' : ''\n              }`}\n              key={label.color}\n              onClick={() => {\n                onFilterStatus('', label.title, false);\n              }}\n            >\n              <div className=\"flex align-center\">\n                <div\n                  className=\"color-div\"\n                  style={{ backgroundColor: label.color }}\n                ></div>\n                <div>{label.title}</div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import fi from 'date-fns/esm/locale/fi/index.js';\nimport { connect } from 'react-redux';\nimport { filterGroups } from '../../store/actions/group.actions';\nimport { getPersonItem } from '../../store/actions/item.actions';\nimport { GroupFilter } from '../group/GroupFilter';\nimport { PersonFilter } from '../item/PersonFilter';\nimport { StatusFilter } from '../item/StatusFilter';\n\nfunction _FilterMenu({ board, groups, filterGroups, filterStore, personsCount, getPersonItem }) {\n  const { groupsIds, statuses, persons} = filterStore;\n\n  const onFilter = (groupId, status, bool) => {\n    const filter = bool ? groupsIds : statuses;\n    const object = bool ? groupId : status;\n\n    if (filter.includes(object)) {\n      const objectIdx = filter.findIndex((g) => g === object);\n      filter.splice(objectIdx, 1);\n    } else {\n      filter.push(object);\n    }\n    filterGroups(board, filterStore);\n  };\n\n  const onFilterPerson = (personId) => {\n    if (persons.includes(personId)) {\n      const personIdx = persons.findIndex((person) => person === personId);\n      persons.splice(personIdx, 1);\n    } else {\n      persons.push(personId);\n    }\n    filterGroups(board, filterStore)\n  }\n\n  const clearFilter = () => {\n    filterStore.groupsIds = [];\n    filterStore.statuses = [];\n    filterStore.persons = [];\n    filterGroups(board, filterStore);\n  };\n\n  return (\n    <div className=\"menu-modal filter-menu fs14\">\n      <div className=\"filter-menu-header flex align-center space-between\">\n        Quick filters\n        <div className=\"clear-filter br4\" onClick={clearFilter}>\n          Clear all\n        </div>\n      </div>\n      <div className=\"filter-options flex\">\n        <GroupFilter\n          board={board}\n          groups={groups}\n          onFilter={onFilter}\n          groupsIds={groupsIds}\n        />\n        <PersonFilter \n        board={board} \n        onFilterPerson={onFilterPerson} \n        persons={persons} \n        personsCount={personsCount}\n          getPersonItem={getPersonItem}\n        />\n        <StatusFilter\n          board={board}\n          onFilterStatus={onFilter}\n          statuses={statuses}\n        />\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspace: state.workspaceModule.workspace,\n    groups: state.groupModule.groups,\n    filterStore: state.boardModule.filterStore,\n    personsCount: state.itemModule.personsCount,\n  };\n}\n\nconst mapDispatchToProps = {\n  filterGroups,\n  getPersonItem\n};\n\nexport const FilterMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_FilterMenu);\n","import { useState } from 'react';\nimport { connect } from 'react-redux';\nimport { IoIosArrowDown } from 'react-icons/io';\nimport { toggleMenu } from '../../store/actions/board.actions';\nimport { onSort } from '../../store/actions/item.actions';\n\nfunction _SortMenu({ onSort, board, sortStore, toggleMenu, toggleMenus }) {\n  const { sortBy, sortOrder } = sortStore;\n  const [dropdownBy, setDropdownBy] = useState(false);\n  const [dropdownOrder, setDropdownOrder] = useState(false);\n\n  const resetSort = () => {\n    sortStore.sortBy = 'Select sort by';\n    onSort(board, sortStore);\n    toggleMenu(toggleMenus);\n  };\n\n  const onSetSort = () => {\n    onSort(board, sortStore);\n    toggleMenu(toggleMenus);\n  };\n\n  const sortByArray = ['Text', 'Status', 'Date'];\n\n  return (\n    <div className=\"menu-modal sort-menu \">\n      <div className=\"menu-header flex align-center space-between\">\n        Sort by\n        <div className=\"right flex\">\n          <div className=\"clear-filter btn br4\" onClick={resetSort}>\n            Reset sort\n          </div>\n          <div className=\"sort-btn br4 \" onClick={onSetSort}>\n            Sort\n          </div>\n        </div>\n      </div>\n      <div className=\"sort-content flex\">\n        <div\n          className=\"sort-by br4 btn flex align-center space-between\"\n          onClick={() => setDropdownBy(!dropdownBy)}\n        >\n          <div className=\"sort-by-text\">{sortBy}</div>\n          <IoIosArrowDown />\n          {dropdownBy && (\n            <div className=\"dropdown-sort br4\">\n              {sortByArray.map((value) => (\n                <div\n                  key={value}\n                  className=\"sort-by-title br4\"\n                  onClick={() => (sortStore.sortBy = value)}\n                >\n                  {value}\n                </div>\n              ))}\n            </div>\n          )}\n        </div>\n\n        <div\n          className=\"sort-order btn br4 flex align-center space-between\"\n          onClick={() => setDropdownOrder(!dropdownOrder)}\n        >\n          {sortOrder}\n          <IoIosArrowDown />\n          {dropdownOrder && (\n            <div className=\"dropdown-sort br4\">\n              <div\n                className=\"sort-by-title br4\"\n                onClick={() => (sortStore.sortOrder = 'Ascending')}\n              >\n                Ascending\n              </div>\n              <div\n                className=\"sort-by-title br4\"\n                onClick={() => (sortStore.sortOrder = 'Descending')}\n              >\n                Descending\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    sortStore: state.boardModule.sortStore,\n  };\n}\n\nconst mapDispatchToProps = {\n  onSort,\n  toggleMenu,\n};\n\nexport const SortMenu = connect(mapStateToProps, mapDispatchToProps)(_SortMenu);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Search from 'monday-ui-react-core/dist/icons/Search';\nimport { onSetSearch } from '../../store/actions/item.actions';\n\nclass _BoardSearch extends Component {\n  state = {\n    searchBy: {\n      itemTitle: '',\n    },\n    isSearch: false,\n  };\n\n  handleChange = (ev) => {\n    ev.preventDefault();\n    const field = ev.target.name;\n    if (!field) return;\n    const value = ev.target.value;\n    this.setState(\n      (prevState) => ({ searchBy: { ...prevState.searchBy, [field]: value } }),\n      () => {\n        this.props.onSetSearch(this.props.board, this.state.searchBy);\n      }\n    );\n  };\n\n  onSearch = (ev) => {\n    ev.preventDefault();\n    this.props.onSetSearch(this.props.board, this.state.searchBy);\n  };\n\n  render() {\n    const { itemTitle } = this.state.searchBy;\n    return (\n      <div\n        className={`btn-search search flex br4 auto-center ${\n          this.state.isSearch ? 'searching' : ''\n        }`}\n      >\n        <Search />\n        <input\n          className=\"input-search\"\n          name=\"itemTitle\"\n          id=\"itemTitle\"\n          type=\"text\"\n          placeholder=\"Search\"\n          value={itemTitle}\n          onChange={this.handleChange}\n          onBlur={(e) => {\n            this.setState({ isSearch: false });\n          }}\n          onFocus={(e) => {\n            this.setState({ isSearch: true });\n          }}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onSetSearch,\n};\nexport const BoardSearch = connect(null, mapDispatchToProps)(_BoardSearch);\n","import { connect } from 'react-redux';\n\nimport Filter from 'monday-ui-react-core/dist/icons/Filter';\nimport Sort from 'monday-ui-react-core/dist/icons/Sort';\nimport { IoIosArrowDown } from 'react-icons/io';\n\nimport { FilterMenu } from '../menus/FilterMenu';\nimport { SortMenu } from '../menus/SortMenu';\nimport { BoardSearch } from './BoardSearch';\n\nimport { toggleMenu } from '../../store/actions/board.actions';\n\nfunction _BoardActions({\n  board,\n  onAddItem,\n  toggleMenu,\n  onEditGroup,\n  toggleMenus,\n  filterStore,\n  sortStore,\n}) {\n  return (\n    <div className=\"actions-container flex\">\n      <div className=\"add-action flex\">\n        <div\n          className=\"add item-add flex align-center btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            onAddItem('New Item', board.groups[0], true, board);\n          }}\n        >\n          New Item\n        </div>\n        <div\n          className=\"add group-add flex align-center btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            onEditGroup('New Group');\n          }}\n        >\n          New group\n        </div>\n      </div>\n      <BoardSearch board={board} />\n      <div\n        className={`action-hidden btn-search flex br4 btn  auto-center ${\n          filterStore.groupsIds.length ||\n          filterStore.statuses.length ||\n          filterStore.persons.length\n            ? 'active'\n            : ''\n        }`}\n        onClick={() => {\n          toggleMenu(toggleMenus, 'filterMenu', true);\n        }}\n      >\n        <Filter className=\"w32\" />\n        <span>Filter</span>\n        <IoIosArrowDown className=\"w32\" />\n        {toggleMenus.filterMenu && <FilterMenu board={board} />}\n      </div>\n      <div\n        className={`action-hidden btn-search flex br4 btn  auto-center ${\n          sortStore.sortBy !== 'Select sort by' ? 'active' : ''\n        }`}\n        onClick={() => toggleMenu(toggleMenus, 'sortMenu', true)}\n      >\n        <Sort className=\"w32\" />\n        <span>Sort</span>\n        <IoIosArrowDown className=\"w32\" />\n        {toggleMenus.sortMenu && (\n          <SortMenu board={board} toggleMenus={toggleMenus} />\n        )}\n      </div>\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    filterStore: state.boardModule.filterStore,\n    sortStore: state.boardModule.sortStore,\n  };\n}\n\nconst mapDispatchToProps = {\n  toggleMenu,\n};\n\nexport const BoardActions = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_BoardActions);\n","// import React from 'react';\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport { connect } from 'react-redux';\n\nimport { BoardActions } from './BoardActions';\nimport Menu from 'monday-ui-react-core/dist/icons/Menu';\nimport Table from 'monday-ui-react-core/dist/icons/Table';\nimport Dashboard from 'monday-ui-react-core/dist/icons/Dashboard';\nimport Favorite from 'monday-ui-react-core/dist/icons/Favorite';\nimport Chart from 'monday-ui-react-core/dist/icons/Chart';\nimport Info from 'monday-ui-react-core/dist/icons/Info';\nimport { BsKanban } from 'react-icons/bs';\n\nimport { toggleMenu } from '../../store/actions/board.actions';\n\nfunction _BoardHeader({\n  board,\n  onBlur,\n  onAddItem,\n  changeView,\n  toggleMenus,\n  onEditGroup,\n  currView,\n  history,\n  location,\n}) {\n  // const []\n  return (\n    <div className=\"board-header flex column\">\n      <div className=\"board-header-top flex align-center\">\n        <div className=\"board-header-left flex\">\n          <div className=\"board-name-hd flex\">\n            <div\n              className=\"board-header-title\"\n              contentEditable=\"true\"\n              suppressContentEditableWarning={true}\n              onBlur={(ev) => {\n                onBlur(ev.target.innerText, board.title, board, 'board');\n              }}\n            >\n              <div>{board.title}</div>\n            </div>\n            <div className=\"header-btn toggle-desc btn\">\n              <Info />\n            </div>\n\n            <div className=\"header-btn add-favorite btn\">\n              <Favorite />\n            </div>\n          </div>\n        </div>\n        <div className=\"header right-side flex auto-center\">\n          <div\n            className=\"board-activity btn header-btn\"\n            onClick={() => {\n              history.push(location.pathname + `/activity_log`);\n            }}\n          >\n            activity\n          </div>\n          <div className=\"menu-btn header-btn btn br4 flex auto-center\">\n            <Menu />\n          </div>\n        </div>\n      </div>\n      <div\n        className=\"board-desc\"\n        contentEditable=\"true\"\n        suppressContentEditableWarning={true}\n        onBlur={(ev) => {\n          onBlur(ev.target.innerText, board.description, board, 'boardDesc');\n        }}\n      >\n        {board.description}\n      </div>\n      <div className=\"view-container flex align-center\">\n        <div\n          className={`flex align-center table-view btn ${\n            currView === 'table' ? 'active' : ''\n          }`}\n          onClick={(ev) => {\n            ev.preventDefault();\n            changeView('table');\n          }}\n        >\n          <Table />\n          <div className=\"full flex align-center\">Table</div>\n        </div>\n        <div\n          className={`flex align-center table-view btn ${\n            currView === 'chart' ? 'active' : ''\n          }`}\n          onClick={(ev) => {\n            ev.preventDefault();\n            changeView('chart');\n          }}\n        >\n          <Chart />\n          <div className=\"full flex align-center\">Chart</div>\n        </div>\n        <div\n          className={`flex align-center table-view btn ${\n            currView === 'kanban' ? 'active' : ''\n          }`}\n          onClick={(ev) => {\n            ev.preventDefault();\n            changeView('kanban');\n          }}\n        >\n          <BsKanban />\n          <div className=\"full flex align-center\">Kanban</div>\n        </div>\n      </div>\n      <div className=\"divider\"></div>\n      <BoardActions\n        onEditGroup={onEditGroup}\n        toggleMenus={toggleMenus}\n        onAddItem={onAddItem}\n        board={board}\n      />\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    currView: state.boardModule.currView,\n    toggleMenus: state.workspaceModule.toggleMenus,\n  };\n}\n\nconst mapDispatchToProps = { toggleMenu };\nexport const BoardHeader = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(_BoardHeader)\n);\n","import Delete from 'monday-ui-react-core/dist/icons/Delete';\n\nexport function BoardMenu({ board, onRemoveBoard, toggleMenus, toggleMenu }) {\n  return (\n    <div className=\"board-menu menu-modal\">\n      <div className=\"menu-section fs14\">\n        <div\n          className=\"btn flex align-center header-btn\"\n          onClick={(ev) => {\n            ev.stopPropagation();\n            onRemoveBoard(board._id);\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <Delete />\n          Delete\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport Board from 'monday-ui-react-core/dist/icons/Board';\nimport Menu from 'monday-ui-react-core/dist/icons/Menu';\nimport { BoardMenu } from '../menus/BoardMenu';\n\nexport function BoardPreview({\n  onRemoveBoard,\n  toggleMenus,\n  changeView,\n  toggleMenu,\n  workspace,\n  boardIdx,\n  boardId,\n}) {\n  const board = workspace.boards[boardIdx];\n  if (!board) return <div></div>;\n  return (\n    <div>\n      <div\n        className={`${\n          board._id === boardId && 'selected'\n        } board-preview br4 menu-button-wrapper text-wrap flex align-center space-between`}\n        onClick={() => {\n          changeView('table');\n        }}\n      >\n        <Link to={`/board/${board._id}`} className=\"full\">\n          <div className=\"board-title text-wrap flex align-center\">\n            <Board />\n            <span className=\"text-cmp\">{board.title}</span>\n          </div>\n        </Link>\n        <div\n          className=\"hover-display flex align-center btn\"\n          onClick={() => {\n            toggleMenu(toggleMenus, 'boardMenu', board._id);\n          }}\n        >\n          <Menu />\n        </div>\n      </div>\n      {toggleMenus.boardMenu === board._id && (\n        <BoardMenu\n          board={board}\n          onRemoveBoard={onRemoveBoard}\n          toggleMenus={toggleMenus}\n          toggleMenu={toggleMenu}\n        />\n      )}\n    </div>\n  );\n}\n","import { BoardPreview } from './BoardPreview';\n\nexport function BoardList({\n  workspace,\n  boardId,\n  onRemoveBoard,\n  changeView,\n  toggleMenus,\n  toggleMenu,\n}) {\n  if (!workspace.boards.length) return <div></div>;\n  return (\n    <div className=\"board-list\">\n      {workspace.boards.map((board, idx) => {\n        return (\n          <BoardPreview\n            onRemoveBoard={onRemoveBoard}\n            toggleMenus={toggleMenus}\n            changeView={changeView}\n            toggleMenu={toggleMenu}\n            workspace={workspace}\n            boardId={boardId}\n            key={board._id}\n            boardIdx={idx}\n            board={board}\n          />\n        );\n      })}\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Link } from 'react-router-dom';\n\nimport AddSmall from 'monday-ui-react-core/dist/icons/AddSmall';\n\nimport { toggleMenu } from '../store/actions/board.actions';\n\nclass _WorkspaceMenu extends React.Component {\n  render() {\n    const { workspaces, toggleMenu, toggleMenus } = this.props;\n    return (\n      <div className=\"workspace-menu\">\n        <div className=\"section\">\n          <div className=\"list-category\">My workspaces</div>\n          {workspaces.map((workspace) => {\n            return (\n              <Link key={workspace._id} to={`/workspace/${workspace._id}`}>\n                <div\n                  key={workspace._id}\n                  className=\"workspace-option menu-button-wrapper flex align-center br4\"\n                  onClick={(ev) => {\n                    ev.stopPropagation();\n                    toggleMenu(toggleMenus);\n                  }}\n                >\n                  <div\n                    className=\"workspace-icon flex auto-center\"\n                    // style={{ backgroundColor: }}\n                  >\n                    {workspace.name?.substring(0, 1)}\n                  </div>\n                  {workspace.name}\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n        <div className=\"divider\"></div>\n        <div className=\"section\">\n          <div\n            className=\"add-workspace menu-button-wrapper br4 flex align-center\"\n            onClick={(ev) => {\n              ev.stopPropagation();\n              toggleMenu(toggleMenus, 'isWorkspaceModal', true);\n            }}\n          >\n            <div className=\"icon flex align-center\">\n              <AddSmall />\n            </div>\n            Add workspace\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspaces: state.workspaceModule.workspaces,\n  };\n}\n\nconst mapDispatchToProps = {\n  toggleMenu,\n};\n\nexport const WorkspaceMenu = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_WorkspaceMenu);\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { addWorkspace } from '../../store/actions/workspace.actions';\nimport Close from 'monday-ui-react-core/dist/icons/Close';\n\nclass _AddWorkspace extends React.Component {\n  state = {\n    title: '',\n  };\n\n  componentDidMount() {\n    this.searchInput.focus();\n  }\n\n  handleChange = (ev) => {\n    ev.preventDefault();\n    const field = ev.target.name;\n    if (!field) return;\n    const value = ev.target.value;\n    this.setState({ title: value });\n  };\n\n  onAddWorkspace = async () => {\n    const { user, addWorkspace } = this.props;\n    const { title } = this.state;\n    await addWorkspace(user, title);\n  };\n\n  render() {\n    const { title } = this.state;\n    const { toggleMenus, toggleMenu } = this.props;\n    return (\n      <div className=\"add-modal flex column space-evenly br8\">\n        <div\n          className=\"close-add-workspace btn\"\n          onClick={() => {\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <div className=\"close-modal header-btn flex align-center\">\n            <Close />\n          </div>\n        </div>\n        <div className=\"create-title\">Create Workspace</div>\n        <div>\n          <div>Workspace name</div>\n          <div className=\"title-input-container\">\n            <form\n              className=\"title-input\"\n              onSubmit={(ev) => {\n                ev.preventDefault();\n                this.onAddWorkspace();\n                toggleMenu(toggleMenus);\n              }}\n            >\n              <input\n                ref={(inputEl) => (this.searchInput = inputEl)}\n                name=\"title\"\n                id=\"title\"\n                type=\"text\"\n                placeholder=\"New Workspace\"\n                value={title}\n                onChange={this.handleChange}\n              />\n            </form>\n          </div>\n        </div>\n        <div className=\"new-container-btn flex\">\n          <div\n            className=\"cancel-btn header-btn\"\n            onClick={() => {\n              toggleMenu(toggleMenus);\n            }}\n          >\n            Cancel\n          </div>\n          <div\n            className=\"create-btn br4\"\n            onClick={(ev) => {\n              ev.stopPropagation();\n              this.onAddWorkspace();\n              toggleMenu(toggleMenus);\n            }}\n          >\n            Create Workspace\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspaces: state.workspaceModule.workspaces,\n    workspace: state.workspaceModule.workspace,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  addWorkspace,\n};\n\nexport const AddWorkspace = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_AddWorkspace);\n","import { connect } from 'react-redux';\nimport React from 'react';\nimport { withRouter } from 'react-router';\n\nimport { editBoard } from '../../store/actions/board.actions';\nimport Close from 'monday-ui-react-core/dist/icons/Close';\n\nclass _AddBoard extends React.Component {\n  state = {\n    title: '',\n    isFocus: false,\n  };\n\n  componentDidMount() {\n    this.searchInput.focus();\n  }\n\n  handleChange = (ev) => {\n    ev.preventDefault();\n    const field = ev.target.name;\n    if (!field) return;\n    const value = ev.target.value;\n    this.setState({ ...this.state, title: value });\n  };\n\n  onAddBoard = async () => {\n    const { workspace, user, editBoard, users, history } = this.props;\n    const { title } = this.state;\n    await editBoard(workspace, title, user, users);\n    history.push(`/board/${workspace.boards[workspace.boards.length - 1]._id}`);\n  };\n\n  render() {\n    const { title, isFocus } = this.state;\n    const { toggleMenus, toggleMenu } = this.props;\n    return (\n      <div className=\"add-modal flex column space-evenly br8\">\n        <div\n          className=\"btn\"\n          onClick={() => {\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <div className=\"close-modal header-btn flex align-center\">\n            <Close />\n          </div>\n        </div>\n        <div className=\"create-title\">Create Board</div>\n        <div>\n          <div>Board name</div>\n          <div className={`title-input-container ${isFocus ? 'focused' : ''}`}>\n            <form\n              className=\"title-input\"\n              onSubmit={(ev) => {\n                ev.preventDefault();\n                this.onAddBoard();\n                toggleMenu(toggleMenus);\n              }}\n            >\n              <input\n                ref={(inputEl) => (this.searchInput = inputEl)}\n                name=\"title\"\n                id=\"title\"\n                type=\"text\"\n                placeholder=\"New Board\"\n                value={title}\n                onChange={this.handleChange}\n                onBlur={() => this.setState({ ...this.state, isFocus: false })}\n                onFocus={() => this.setState({ ...this.state, isFocus: true })}\n              />\n            </form>\n          </div>\n        </div>\n        <div className=\"new-container-btn flex\">\n          <div\n            className=\"cancel-btn header-btn\"\n            onClick={() => {\n              toggleMenu(toggleMenus);\n            }}\n          >\n            Cancel\n          </div>\n          <div\n            className=\"create-btn br4\"\n            onClick={(ev) => {\n              ev.stopPropagation();\n              this.onAddBoard();\n              toggleMenu(toggleMenus);\n            }}\n          >\n            Create Board\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspaces: state.workspaceModule.workspaces,\n    workspace: state.workspaceModule.workspace,\n    users: state.userModule.users,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  editBoard,\n};\n\nexport const AddBoard = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(_AddBoard)\n);\n","import { connect } from 'react-redux';\nimport React from 'react';\n\nimport { editBoard } from '../../store/actions/board.actions';\nimport Close from 'monday-ui-react-core/dist/icons/Close';\n\nclass _AddMember extends React.Component {\n  state = {\n    title: '',\n  };\n\n  handleChange = (ev) => {\n    ev.preventDefault();\n    const field = ev.target.name;\n    if (!field) return;\n    const value = ev.target.value;\n    this.setState({ title: value });\n  };\n\n  onAddMember = async () => {\n    const { workspace, user, editBoard, users } = this.props;\n    const { title } = this.state;\n    editBoard(workspace, title, user, users);\n  };\n\n  render() {\n    const { title } = this.state;\n    const { toggleMenus, toggleMenu } = this.props;\n    return (\n      <div className=\"add-modal flex column space-evenly br8\">\n        <div\n          className=\"close-add-workspace btn\"\n          onClick={() => {\n            toggleMenu(toggleMenus);\n          }}\n        >\n          <div className=\"close-modal header-btn flex align-center\">\n            <Close />\n          </div>\n        </div>\n        <div className=\"create-title\">Invite new members</div>\n        <div>\n          <div>invite with username</div>\n          <div className=\"title-input-container\">\n            <form\n              className=\"title-input\"\n              onSubmit={(ev) => {\n                ev.preventDefault();\n                this.onAddMember();\n              }}\n            >\n              <input\n                name=\"title\"\n                id=\"title\"\n                type=\"text\"\n                placeholder=\"New Board\"\n                value={title}\n                onChange={this.handleChange}\n              />\n            </form>\n          </div>\n        </div>\n        <div className=\"new-container-btn flex\">\n          <div\n            className=\"cancel-btn header-btn\"\n            onClick={() => {\n              toggleMenu(toggleMenus);\n            }}\n          >\n            Cancel\n          </div>\n          <div\n            className=\"create-btn br4\"\n            onClick={(ev) => {\n              ev.stopPropagation();\n              this.onAddMember();\n              toggleMenu(toggleMenus);\n            }}\n          >\n            Invite\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspaces: state.workspaceModule.workspaces,\n    workspace: state.workspaceModule.workspace,\n    users: state.userModule.users,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  editBoard,\n};\n\nexport const AddMember = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_AddMember);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Add from 'monday-ui-react-core/dist/icons/Add';\nimport Filter from 'monday-ui-react-core/dist/icons/Filter';\nimport Search from 'monday-ui-react-core/dist/icons/Search';\nimport Menu from 'monday-ui-react-core/dist/icons/Menu';\nimport DropdownChevronDown from 'monday-ui-react-core/dist/icons/DropdownChevronDown';\nimport NavigationChevronRight from 'monday-ui-react-core/dist/icons/NavigationChevronRight';\nimport NavigationChevronLeft from 'monday-ui-react-core/dist/icons/NavigationChevronLeft';\n\nimport {\n  loadWorkspaces,\n  loadWorkspace,\n  toggleNav,\n  editWorkspace,\n} from '../store/actions/workspace.actions';\nimport {\n  loadBoard,\n  toggleMenu,\n  changeView,\n} from '../store/actions/board.actions';\n\nimport { BoardList } from './board/BoardList';\nimport { WorkspaceMenu } from './WorkspaceMenu';\nimport { AddWorkspace } from './workspace/AddWorkspace';\nimport { AddBoard } from './board/AddBoard';\nimport { AddMember } from './menus/AddMember';\n\nclass _WorkspaceNav extends Component {\n  componentDidMount() {\n    this.props.loadWorkspaces(this.props.user);\n  }\n\n  handleChange = ({ target }) => {\n    const value = target.value;\n    this.props.loadWorkspace(value);\n  };\n\n  render() {\n    const {\n      workspace,\n      isOpenNav,\n      toggleNav,\n      board,\n      onRemoveBoard,\n      toggleMenu,\n      toggleMenus,\n      changeView,\n    } = this.props;\n    return (\n      <div className={`workspace-nav flex column ${isOpenNav ? 'close' : ''}`}>\n        <div\n          className={`collapse-button-component flex auto-center btn\n          ${isOpenNav ? '' : 'is-pinned'}`}\n          onClick={() => toggleNav()}\n        >\n          {isOpenNav ? <NavigationChevronRight /> : <NavigationChevronLeft />}\n        </div>\n\n        {!isOpenNav && (\n          <>\n            <div className=\"dropdown-header flex space-between\">\n              <span>Workspace</span>\n              <Menu />\n            </div>\n\n            <div\n              className=\"workspace-dropdown-button br4 flex space-between align-center btn\"\n              onClick={() => {\n                toggleMenu(toggleMenus, 'workspaceMenu', workspace._id);\n              }}\n            >\n              <div className=\"workspace-title flex align-center\">\n                <div\n                  className=\"workspace-icon large flex auto-center\"\n                  // style={{ backgroundColor: }}\n                >\n                  {workspace.name?.substring(0, 1)}\n                </div>\n                <h2>{workspace.name}</h2>\n              </div>\n              <DropdownChevronDown />\n              {toggleMenus.workspaceMenu && (\n                <WorkspaceMenu toggleMenus={toggleMenus} />\n              )}\n            </div>\n            <button\n              className=\"flex menu-button-wrapper text-cmp align-center\"\n              onClick={() => {\n                toggleMenu(toggleMenus, 'isBoardModal', true);\n              }}\n            >\n              <Add />\n              <span>Add</span>\n            </button>\n            <button className=\"flex menu-button-wrapper align-center\">\n              <Filter />\n              <span>Filter</span>\n            </button>\n            <button className=\"flex menu-button-wrapper align-center search\">\n              <Search />\n              <span>Search</span>\n            </button>\n            <div className=\"divider\"></div>\n            <BoardList\n              boardId={board ? board._id : workspace.boards[0]}\n              workspace={workspace}\n              onRemoveBoard={onRemoveBoard}\n              changeView={changeView}\n              toggleMenus={toggleMenus}\n              toggleMenu={toggleMenu}\n            />\n          </>\n        )}\n        {toggleMenus.isWorkspaceModal && (\n          <AddWorkspace toggleMenus={toggleMenus} toggleMenu={toggleMenu} />\n        )}\n        {toggleMenus.isBoardModal && (\n          <AddBoard toggleMenus={toggleMenus} toggleMenu={toggleMenu} />\n        )}\n        {toggleMenus.isMemberModal && (\n          <AddMember toggleMenus={toggleMenus} toggleMenu={toggleMenu} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspaces: state.workspaceModule.workspaces,\n    workspace: state.workspaceModule.workspace,\n    toggleMenus: state.workspaceModule.toggleMenus,\n    isOpenNav: state.workspaceModule.isOpenNav,\n    users: state.userModule.users,\n    user: state.userModule.user,\n    board: state.boardModule.board,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadWorkspaces,\n  loadWorkspace,\n  toggleNav,\n  loadBoard,\n  editWorkspace,\n  toggleMenu,\n  changeView,\n};\nexport const WorkspaceNav = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_WorkspaceNav);\n","import Board from 'monday-ui-react-core/dist/icons/Board';\n\nexport function BoardUpdatesList({ board }) {\n  return (\n    <div className=\"item-updates-container\">\n      {board.groups.map((group) => {\n        return group.items.map((item) => {\n          return item.updates.map((update) => {\n            return (\n              <div className=\"update-card br8\" key={update.id}>\n                <div className=\"post-header flex align-center\">\n                  <img src={update.createdBy.img} alt=\"user-img\" />\n                  <div className=\"username-wrapper\">\n                    {update.createdBy.fullname}\n                    <div className=\"flex align-center\">\n                      <Board />\n                      {`${board.title} > ${group.title} > ${item.title}`}\n                    </div>\n                  </div>\n                </div>\n                <div\n                  className=\"body-text\"\n                  dangerouslySetInnerHTML={{ __html: update.txt }}\n                ></div>\n                <div className=\"post-action flex \">\n                  <div className=\"like-post-wrapper \">\n                    <div className=\"like-post btn\">Like</div>\n                  </div>\n                  <div className=\"reply-post-wrapper \">\n                    <div className=\"reply-post btn\">Reply</div>\n                  </div>\n                </div>\n              </div>\n            );\n          });\n        });\n      })}\n    </div>\n  );\n}\n","import { Component } from 'react';\n\nimport FroalaEditor from 'react-froala-wysiwyg';\n\nexport class PostUpdate extends Component {\n  constructor() {\n    super();\n    this.handleModelChange = this.handleModelChange.bind(this);\n    this.state = {\n      model: '',\n    };\n  }\n\n  handleModelChange = (model) => {\n    this.setState({\n      model: model,\n    });\n  };\n  onPost = () => {\n    this.props.onPost(this.state.model);\n    this.setState({ model: '' });\n  };\n\n  render() {\n    return (\n      <div>\n        <div>\n          <FroalaEditor\n            model={this.state.model}\n            onModelChange={this.handleModelChange}\n          />\n        </div>\n        <div className=\"side-panel-actions flex align-center space-between btn\">\n          <div className=\"left-side-actions flex\">\n            <div className=\"add-files\">Add files</div>\n            <div className=\"gif\">GIF</div>\n            <div className=\"emoji\">Emoji</div>\n            <div className=\"mention\">Mention</div>\n          </div>\n          <div\n            className=\"update-btn br4\"\n            onClick={(ev) => {\n              ev.preventDefault();\n              this.onPost();\n            }}\n          >\n            Update\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\n// export class PostUpdate extends Component {\n//   state = {\n//     update: {\n//       txt: '',\n//     },\n//   };\n//   handleChange = (ev) => {\n//     ev.preventDefault();\n//     const field = ev.target.name;\n//     if (!field) return;\n//     const value = ev.target.value;\n//     this.setState((prevState) => ({\n//       update: { ...prevState.update, [field]: value },\n//     }));\n//   };\n\n//   onPost = (ev) => {\n//     ev.preventDefault();\n//     this.props.onPost(this.state.update);\n//     this.setState({ update: { txt: '' } });\n//   };\n\n//   render() {\n//     const { txt } = this.state.update;\n//     return (\n//       <form className=\"\" onSubmit={this.onPost}>\n//         <input\n//           className=\"update-input\"\n//           name=\"txt\"\n//           id=\"txt\"\n//           type=\"textarea\"\n//           placeholder=\"Write an update\"\n//           value={txt}\n//           onChange={this.handleChange}\n//         />\n//         <button>Update</button>\n//       </form>\n//     );\n//   }\n// }\n","import { PostUpdate } from './PostUpdate';\n\nexport function ItemUpdatesList({ item, onPost }) {\n  return (\n    <div className=\"item-updates-container\">\n      <PostUpdate onPost={onPost} />\n      <div className=\"\">\n        {item.updates.map((update) => {\n          return (\n            <div className=\"update-card br8\" key={update.id}>\n              <div className=\"post-header flex align-center\">\n                <img src={update.createdBy.img} alt=\"user-img\" />\n                <div className=\"username-wrapper\">\n                  {update.createdBy.fullname}\n                </div>\n              </div>\n              <div\n                className=\"body-text\"\n                dangerouslySetInnerHTML={{ __html: update.txt }}\n              ></div>\n              <div className=\"post-action flex \">\n                <div className=\"like-post-wrapper \">\n                  <div className=\"like-post btn\">Like</div>\n                </div>\n                <div className=\"divider-height\"></div>\n                <div className=\"reply-post-wrapper \">\n                  <div className=\"reply-post btn\">Reply</div>\n                </div>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n    </div>\n  );\n}\n","import { Component } from 'react';\n\nimport { BoardUpdatesList } from '../board/BoardUpdatesList';\nimport { ItemUpdatesList } from '../item/ItemUpdatesList';\n\n// ReactDOM.render(<FroalaEditorComponent tag='textarea' />, document.getElementById('editor'));\nexport class ActivityUpdateTab extends Component {\n  render() {\n    const { item, board, onPost } = this.props;\n    return (\n      <div className=\"slide-panel-bottom\">\n        {item && <ItemUpdatesList item={item} onPost={onPost} />}\n        {board && <BoardUpdatesList board={board} />}\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport Time from 'monday-ui-react-core/dist/icons/Time';\nimport DropdownChevronDown from 'monday-ui-react-core/dist/icons/DropdownChevronDown';\n\nexport class ActivityLogTab extends Component {\n  state = {\n    logTxt: '',\n  };\n\n  handleChange = (ev) => {\n    ev.preventDefault();\n    const field = ev.target.name;\n    if (!field) return;\n    const value = ev.target.value;\n    this.setState({ [field]: value }, () => {\n      this.props.onSetSearch(this.props.board, this.state.logTxt);\n    });\n  };\n  render() {\n    const { logTxt } = this.state;\n    const { item, board } = this.props;\n    const activities = item ? item.activities : board.activities;\n    // if (!activities?.length) return <div>no activities yet</div>\n    return (\n      <div className=\"activity-log-wrapper\">\n        <div className=\"log-filter flex align-center\">\n          <div className=\"drop-down-filter btn flex align-center br4\">\n            <div>Filter Log</div>\n            <div className=\"dropdown-chevron\">\n              <DropdownChevronDown />\n            </div>\n          </div>\n          {board && (\n            <div className=\"activity-log-input-filter\">\n              <input\n                className=\"input-filter-log\"\n                name=\"search-log\"\n                id=\"search-log\"\n                type=\"text\"\n                placeholder=\"Filter by name\"\n                value={logTxt}\n                onChange={this.handleChange}\n              />\n            </div>\n          )}\n        </div>\n\n        <div className=\"logs flex column\">\n          {activities &&\n            activities.map((activity) => {\n              return (\n                <div\n                  key={activity.id}\n                  className=\"single-activity flex align-center column\"\n                >\n                  <div className=\"activity-box flex align-center space-between\">\n                    <div className=\"activity-time\">\n                      <Time />\n                      17m\n                    </div>\n                    <div className=\"activity-member\">\n                      {activity.createdBy.fullname}\n                    </div>\n                    <div className=\"activity-activity\">{activity.activity}</div>\n                  </div>\n                  <div className=\"divider\"></div>\n                </div>\n              );\n            })}\n        </div>\n      </div>\n    );\n  }\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\n\nimport { loadItem, onPost } from '../store/actions/item.actions';\nimport { loadBoard } from '../store/actions/board.actions';\nimport { loadWorkspaceByBoardId } from '../store/actions/workspace.actions';\nimport Close from 'monday-ui-react-core/dist/icons/Close';\nimport { ActivityUpdateTab } from '../cmps/dynamic-cmps/ActivityUpdateTab';\nimport { ActivityLogTab } from '../cmps/dynamic-cmps/ActivityLogTab';\nimport { toggleMenu } from '../store/actions/board.actions';\nimport Drag from 'monday-ui-react-core/dist/icons/Drag';\n\nclass _ItemDetails extends Component {\n  state = {\n    toggleNav: true,\n  };\n\n  async componentDidMount() {\n    const { loadBoard, match, workspace, board } = this.props;\n    const { boardId } = match.params;\n    await loadBoard(workspace, boardId);\n    this.loadItem();\n    document.title = `${board.title} - ${this.props.item.title}`;\n  }\n\n  onCloseItem = () => {\n    const { boardId } = this.props.match.params;\n    this.props.history.push(`/board/${boardId}`);\n  };\n\n  loadItem = () => {\n    const { loadItem, board } = this.props;\n    const { itemId } = this.props.match.params;\n    loadItem(board, itemId);\n  };\n\n  onPost = (update) => {\n    const { user, workspace, onPost, item, groups } = this.props;\n    onPost(update, user, item, groups, workspace);\n  };\n\n  onToggle = (bool) => {\n    this.setState({ toggleNav: bool });\n  };\n\n  render() {\n    const { toggleMenu, toggleMenus, item, board } = this.props;\n    const { toggleNav } = this.state;\n    if (!item) return <div className=\"\">loading</div>;\n    return (\n      <div className=\"item-activity slide-panel flex column\">\n        <div className=\"slide-panel-resizer\">\n          <div className=\"drag-resizer\">\n            <Drag />\n          </div>\n        </div>\n        <div className=\"activity-log-header\">\n          <div className=\"activity-log-close btn\">\n            <Close\n              onClick={() => {\n                toggleMenu(toggleMenus);\n                this.props.history.push(`/board/${board._id}`);\n              }}\n            />\n          </div>\n          <div className=\"activity-title flex\">{item.title}</div>\n          <div className=\"tabs-wrapper flex\">\n            <div\n              className={`item-activity-update btn ${\n                toggleNav && 'is-selected'\n              }`}\n              onClick={(ev) => {\n                ev.preventDefault();\n                this.onToggle(true);\n              }}\n            >\n              Update\n            </div>\n            <div\n              className={`item-activity-log btn ${!toggleNav && 'is-selected'}`}\n              onClick={(ev) => {\n                ev.preventDefault();\n                this.onToggle(false);\n              }}\n            >\n              Activity Log\n            </div>\n          </div>\n        </div>\n        {toggleNav ? (\n          <ActivityUpdateTab item={item} onPost={this.onPost} />\n        ) : (\n          <ActivityLogTab item={item} />\n        )}\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userModule.user,\n    board: state.boardModule.board,\n    groups: state.groupModule.groups,\n    workspace: state.workspaceModule.workspace,\n    item: state.itemModule.item,\n    toggleMenus: state.workspaceModule.toggleMenus,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadItem,\n  loadWorkspaceByBoardId,\n  loadBoard,\n  onPost,\n  toggleMenu,\n};\nexport const ItemDetails = withRouter(\n  connect(mapStateToProps, mapDispatchToProps)(_ItemDetails)\n);\n","import { connect } from 'react-redux';\nimport { toggleMenu } from '../store/actions/board.actions';\n\nexport function _Screen({ toggleMenu, toggleMenus }) {\n  const darkScreen = () => {\n    if (\n      toggleMenus.isWorkspaceModal ||\n      toggleMenus.isBoardModal ||\n      toggleMenus.isMemberModal\n    )\n      return true;\n    return false;\n  };\n\n  return (\n    <div\n      className={`screen ${darkScreen() && 'dark'}`}\n      onClick={() => {\n        toggleMenu(toggleMenus);\n      }}\n    ></div>\n  );\n}\n\nconst mapDispatchToProps = {\n  toggleMenu,\n};\n\nexport const Screen = connect(null, mapDispatchToProps)(_Screen);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { toggleMenu } from '../store/actions/board.actions'\nimport Close from 'monday-ui-react-core/dist/icons/Close';\nimport { ActivityLogTab } from '../cmps/dynamic-cmps/ActivityLogTab';\nimport { ActivityUpdateTab } from '../cmps/dynamic-cmps/ActivityUpdateTab';\n\n\nclass _ActivityLog extends Component {\n    state = {\n        toggleNav: true,\n    };\n\n    onToggle = (bool) => {\n        this.setState({ toggleNav: bool });\n      }\n\n\n\n    render() {\n        const {toggleNav } = this.state\n        const { toggleMenu, toggleMenus, board } = this.props\n        return (\n            <div className=\"activity-log-panel slide-panel flex column\">\n                <div className=\"activity-log-header\">\n                    <div className=\"activity-log-close btn\">\n                        <Close\n                            onClick={() => {\n                                toggleMenu(toggleMenus);\n                                this.props.history.push(`/board/${board._id}`);\n                            }} />\n                    </div>\n                    <div className=\"activity-title flex\">\n                        {board.title} Log\n                    </div>\n                    <div className=\"tabs-wrapper flex\">\n                        <div className={`activity-tab btn ${toggleNav && \"is-selected\"}`}\n                            onClick={(ev) => {\n                                ev.preventDefault();\n                                this.onToggle(true);\n                            }}\n                        >Activity</div>\n                        <div className={`updates-tab btn ${!toggleNav && \"is-selected\"}`}\n                            onClick={(ev) => {\n                                ev.preventDefault();\n                                this.onToggle(false);\n                            }}\n                        >Updates</div>\n                    </div>\n\n                </div>\n                    {toggleNav?<ActivityLogTab board={board}/>:<ActivityUpdateTab board={board}/>}\n            </div>\n        );\n    }\n}\n\nfunction mapStateToProps(state) {\n    return {\n        toggleMenus: state.workspaceModule.toggleMenus,\n        board: state.boardModule.board\n    };\n}\n\n\nconst mapDispatchToProps = {\n    toggleMenu\n};\n\nexport const ActivityLog = withRouter(connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(_ActivityLog));\n","export function Loader() {\n  return (\n    <div className=\"loader-wrapper flex auto-center\">\n      <div className=\"loader\"></div>\n    </div>\n  );\n}\n","import Close from 'monday-ui-react-core/dist/icons/Close';\nimport Duplicate from 'monday-ui-react-core/dist/icons/Duplicate';\nimport Delete from 'monday-ui-react-core/dist/icons/Delete';\nimport { eventBusService } from '../services/event-bus.service';\n\nexport function SelectedPopup({\n  saveUndoWorkspace,\n  toggleSelected,\n  duplicateItems,\n  selectedItems,\n  removeItem,\n  workspace,\n  groups,\n  board,\n}) {\n  const saveUndo = (workspace) => {\n    const undoWorkspace = JSON.parse(JSON.stringify(workspace));\n    saveUndoWorkspace(undoWorkspace);\n  };\n\n  const itemsDots = () => {\n    return groups.map((group) =>\n      group.items.map((item) => {\n        if (selectedItems.includes(item.id)) {\n          return (\n            <div\n              className=\"dot-item\"\n              key={item.id}\n              style={{ backgroundColor: group.style.color }}\n            ></div>\n          );\n        }\n      })\n    );\n  };\n\n  return (\n    <div className=\"selected-popup flex\">\n      <div className=\"number flex auto-center\">{selectedItems?.length}</div>\n      <div className=\"title-section flex column\">\n        <div className=\"title\">\n          Item{selectedItems.length > 1 ? 's' : ''} selected\n        </div>\n        <div className=\"items-dot flex align-center\">{itemsDots()}</div>\n      </div>\n      <div\n        className=\"duplicate-items action btn flex column align-center space-evenly\"\n        onClick={() => {\n          saveUndo(workspace);\n          duplicateItems(workspace, board, selectedItems);\n          eventBusService.emit('user-msg', {\n            txt: `We successfully duplicated ${selectedItems.length} ${\n              selectedItems.length > 1 ? 'items' : 'item'\n            }`,\n            type: '',\n          });\n        }}\n      >\n        <Duplicate />\n        Duplicate\n      </div>\n      <div\n        className=\"delete-items action btn flex column align-center space-evenly\"\n        onClick={() => {\n          saveUndo(workspace);\n          removeItem(workspace, board, selectedItems);\n          eventBusService.emit('user-msg', {\n            txt: `We successfully deleted ${selectedItems.length} ${\n              selectedItems.length > 1 ? 'items' : 'item'\n            }`,\n            type: '',\n          });\n        }}\n      >\n        <Delete />\n        Delete\n      </div>\n      <div\n        className=\"unselect btn action flex auto-center\"\n        onClick={() => toggleSelected(board, [])}\n      >\n        <Close />\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Route } from 'react-router';\n\nimport { eventBusService } from '../services/event-bus.service';\nimport { socketService } from '../services/socket.service';\nimport { BoardContent } from '../cmps/board/BoardContent';\nimport { BoardHeader } from '../cmps/board/BoardHeader';\nimport { WorkspaceNav } from '../cmps/WorkspaceNav';\nimport { ItemDetails } from './ItemDetails';\n\nimport {\n  loadBoard,\n  editBoard,\n  removeBoard,\n  changeView,\n  toggleMenu,\n} from '../store/actions/board.actions';\nimport {\n  editGroup,\n  setGroup,\n  loadGroups,\n} from '../../js/store/actions/group.actions';\n\nimport {\n  saveItem,\n  removeItem,\n  toggleSelected,\n  duplicateItems\n} from '../../js/store/actions/item.actions';\nimport {\n  loadWorkspaceByBoardId,\n  editWorkspace,\n  loadWorkspace,\n  loadWorkspaces,\n  saveUndoWorkspace\n} from '../store/actions/workspace.actions';\nimport { getLoggedinUser, loadUsers } from '../store/actions/user.actions';\nimport { Screen } from './Screen';\nimport { ActivityLog } from './ActivityLog';\nimport { Loader } from '../cmps/Loader';\nimport { SelectedPopup } from '../cmps/SelectedPopup';\n\nexport class _BoardDetails extends React.Component {\n  async componentDidMount() {\n    const { getLoggedinUser, loadWorkspaces, loadWorkspaceByBoardId, loadUsers} =\n      this.props;\n    await loadUsers()\n    const boardId = this.props.match.params.boardId;\n    if (!this.props.workspaces?.length) {\n      await getLoggedinUser();\n      await loadWorkspaces(this.props.user);\n    }\n    await loadWorkspaceByBoardId(boardId, this.props.workspaces);\n    await this.props.loadBoard(this.props.workspace, boardId);\n    document.title = `${this.props.board.title}`;\n    socketService.emit('connect board', this.props.board._id)\n    socketService.on('board updated', socket=> {\n      if(socket.boardId===boardId) {\n        this.props.loadWorkspace(socket.workspace._id);\n        this.props.loadBoard(socket.workspace,socket.boardId);\n      }\n    });\n  }\n\n  componentWillUnmount() {\n    socketService.off('board updated');\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { boardId } = this.props.match.params;\n    const { workspace } = this.props;\n    if (prevProps.match.params.boardId !== boardId) {\n      await this.props.loadBoard(workspace, boardId);\n      document.title = `${this.props.board.title}`;\n    }\n  }\n\n  onBlur = (newTxt, pevTxt, type, strType, group = null) => {\n    if (newTxt === pevTxt) return;\n    const newType =\n      strType === 'boardDesc'\n        ? { ...type, description: newTxt }\n        : { ...type, title: newTxt };\n\n    switch (strType) {\n      case 'boardDesc':\n      case 'board':\n        this.onEditBoard(newType);\n        break;\n      case 'group':\n        this.onEditGroup(newType);\n        break;\n      case 'item':\n        this.onEditItem(newType, group);\n        break;\n      default:\n      // case 'column':\n      //   this.onEditColumn(newType);\n      //   break;\n      // case 'label':\n      //   this.onEditLabel(newType);\n      //   break;\n    }\n  };\n\n  //Boards Functions\n  onRemoveBoard = (boardId) => {\n    const { workspace, removeBoard, match } = this.props;\n    removeBoard(workspace, boardId);\n    if (!workspace.boards.length) {\n      this.props.history.push(`/workspace/${workspace._id}`);\n    } else if (match.params.boardId === boardId) {\n      this.props.history.push(`/board/${workspace.boards[0]._id}`);\n    }\n    eventBusService.emit('user-msg', { txt: 'Board has removed', type: '' });\n  };\n\n  onEditBoard = (board) => {\n    const { workspace, user, users, editBoard } = this.props;\n    editBoard(workspace, board, user, users);\n  };\n\n  //Groups Functions\n  onEditGroup = (group, groupId, newBoard, Duplicate) => {\n    const { workspace, user, board, editGroup } = this.props;\n    const boardToEdit = newBoard ? newBoard : board;\n    editGroup(workspace, boardToEdit, group, user, groupId, Duplicate);\n  };\n\n  //Labels Functions\n  // onEditLabel = (label, groupId, newBoard) => {\n  //   const { workspace, user, board, editGroup } = this.props;\n\n  // };\n\n  //Items Functions\n  onAddItem = (newItemData, group, addToTop = false, board, Duplicate) => {\n    const { workspace, user, saveItem } = this.props;\n    saveItem(newItemData, user, workspace, group, addToTop, board, Duplicate);\n  };\n\n  onEditItem = (item, group) => {\n    const { workspace, user, saveItem,board } = this.props;\n    saveItem(item, user, workspace, group,false,board);\n  };\n\n  onRemoveSelected = (group) => {};\n\n  isMenuOpen = () => {\n    const { toggleMenus } = this.props;\n    for (const menu of Object.keys(toggleMenus)) {\n      if (toggleMenus[menu]) return true;\n    }\n    return false;\n  };\n\n  render() {\n    const {\n      saveUndoWorkspace,\n      toggleSelected,\n      duplicateItems,\n      selectedItems,\n      toggleMenus,\n      changeView,\n      removeItem,\n      workspace,\n      currView,\n      groups,\n      board,\n    } = this.props;\n    if (!workspace || !board) return <Loader />;\n    return (\n      <div className=\"board-app flex\">\n        {this.isMenuOpen() && <Screen toggleMenus={toggleMenus} />}\n        <WorkspaceNav\n          onRemoveBoard={this.onRemoveBoard}\n          changeView={changeView}\n          workspace={workspace}\n          board={board}\n        />\n        <div className=\"board-details\">\n          <BoardHeader\n            onRemoveBoard={this.onRemoveBoard}\n            onEditGroup={this.onEditGroup}\n            onAddItem={this.onAddItem}\n            changeView={changeView}\n            onBlur={this.onBlur}\n            board={board}\n          />\n          <BoardContent\n            onEditGroup={this.onEditGroup}\n            onEditItem={this.onEditItem}\n            onAddItem={this.onAddItem}\n            onBlur={this.onBlur}\n            currView={currView}\n            groups={groups}\n            board={board}\n          />\n          {selectedItems.length ? (\n            <SelectedPopup\n            saveUndoWorkspace={saveUndoWorkspace}\n              toggleSelected={toggleSelected}\n              duplicateItems={duplicateItems}\n              selectedItems={selectedItems}\n              removeItem={removeItem}\n              workspace={workspace}\n              groups={groups}\n              board={board}\n            />\n          ) : (\n            ''\n          )}\n          <Route path=\"/board/:boardId/item/:itemId\" component={ItemDetails} />\n          <Route path=\"/board/:boardId/activity_log\" component={ActivityLog} />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    toggleMenus: state.workspaceModule.toggleMenus,\n    selectedItems: state.itemModule.selectedItems,\n    workspaces: state.workspaceModule.workspaces,\n    workspace: state.workspaceModule.workspace,\n    currView: state.boardModule.currView,\n    groups: state.groupModule.groups,\n    board: state.boardModule.board,\n    users: state.userModule.users,\n    item: state.itemModule.item,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  toggleMenu,\n  //workspace\n  loadWorkspaces,\n  loadWorkspaceByBoardId,\n  editWorkspace,\n  loadWorkspace,\n  saveUndoWorkspace,\n  //board\n  removeBoard,\n  loadBoard,\n  editBoard,\n  //group\n  loadGroups,\n  editGroup,\n  setGroup,\n  //item\n  saveItem,\n  changeView,\n  removeItem,\n  toggleSelected,\n  duplicateItems,\n  //USER\n  getLoggedinUser,\n  loadUsers\n};\n\nexport const BoardDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_BoardDetails);\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport Email from 'monday-ui-react-core/dist/icons/Email';\nimport Mobile from 'monday-ui-react-core/dist/icons/Mobile';\nimport Calendar from 'monday-ui-react-core/dist/icons/Calendar';\nimport { getById } from '../store/actions/user.actions';\nclass _UserDetails extends Component {\n  componentDidMount() {\n    const { userId } = this.props.match.params;\n    this.props.getById(userId);\n    document.title = `Wednesday - ${this.props.user.fullname}`;\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevProps.match.params.userId !== this.props.match.params.userId) {\n      this.props.getById(this.props.match.params.userId);\n    }\n  }\n  render() {\n    const { member } = this.props;\n    if (!member) return <div className=\"\">loading...</div>;\n    return (\n      <div className=\"user-details\">\n        <header className=\"user-header\">\n          <img src={member.img} alt=\"\" className=\"user-img\" />\n          <h1>{member.fullname}</h1>\n        </header>\n        <div className=\"user-content\">\n          <h3>Overview</h3>\n          <h4>\n            <Email />\n            Email:\n          </h4>\n          <h4>\n            <Mobile />\n            Phone:\n          </h4>\n          <h4>\n            <Calendar />\n            Birthday:\n          </h4>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userModule.user,\n    member: state.userModule.member,\n  };\n}\nconst mapDispatchToProps = {\n  getById,\n};\nexport const UserDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_UserDetails);\n","import { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { editBoard } from '../../store/actions/board.actions';\nfunction _WorkspaceContent({\n  workspace,\n  isBoardsOpen,\n  isMembersOpen,\n  changeView,\n  editBoard,\n  user,\n  users,\n}) {\n  return (\n    <div className=\"workspace-content\">\n      {!workspace.boards.length && (\n        <div>\n          <h1>You have 0 boards in workspace</h1>\n          <button\n            onClick={() => {\n              editBoard(workspace, 'My First Board', user, users);\n            }}\n          >\n            +Add a board\n          </button>\n        </div>\n      )}\n      {isBoardsOpen && workspace.boards && (\n        <div>\n          {workspace.boards.map((board) => {\n            return (\n              <Link key={board._id} to={`/board/${board._id}`}>\n                <div\n                  onClick={() => {\n                    changeView('table');\n                  }}\n                >\n                  {board.title}\n                </div>\n              </Link>\n            );\n          })}\n        </div>\n      )}\n      {isMembersOpen && (\n        <div>\n          {workspace.members.map((member) => {\n            return (\n              <Link key={member._id} to={`/user/${member._id}`}>\n                {member.fullname}\n              </Link>\n            );\n          })}\n        </div>\n      )}\n    </div>\n  );\n}\n\nfunction mapStateToProps(state) {\n  return {\n    toggleMenus: state.workspaceModule.toggleMenus,\n    user: state.userModule.user,\n    users: state.userModule.users,\n  };\n}\n\nconst mapDispatchToProps = {\n  editBoard,\n};\n\nexport const WorkspaceContent = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_WorkspaceContent);\n","import Home from 'monday-ui-react-core/dist/icons/Home';\n\nexport function WorkspaceHeader({ workspace, handleChange }) {\n  return (\n    <div className=\"workspace-header\">\n      <div className=\"flex auto-center column\">\n        <h1>\n          <Home />\n          {workspace.name}\n        </h1>\n        <p>\n          Use the main Workspace to manage and collaborate on all company-wide\n          boards. All team members are in this Workspace\n        </p>\n      </div>\n      <button onClick={handleChange}>Boards</button>\n      <button onClick={handleChange}>Members</button>\n    </div>\n  );\n}\n","import { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { WorkspaceContent } from '../cmps/workspace/WorkspaceContent';\nimport { WorkspaceHeader } from '../cmps/workspace/WorkspaceHeader';\nimport { WorkspaceNav } from '../cmps/WorkspaceNav';\n\nimport { loadWorkspace } from '../store/actions/workspace.actions';\nimport {\n  loadBoard,\n  removeBoard,\n  changeView,\n} from '../store/actions/board.actions';\nimport { Loader } from '../cmps/Loader';\n\nexport class _WorkspaceDetails extends Component {\n  state = {\n    isBoardsOpen: true,\n    isMembersOpen: false,\n  };\n  async componentDidMount() {\n    const { workspaceId } = this.props.match.params;\n    await this.props.loadWorkspace(workspaceId);\n    const { workspace } = this.props;\n    this.props.loadBoard(workspace, workspace[0]);\n    document.title = `Wednesday - Workspaces`;\n  }\n\n  async componentDidUpdate(prevProps, prevState) {\n    const { workspaceId } = this.props.match.params;\n    if (prevProps.match.params.workspaceId !== workspaceId) {\n      await this.props.loadWorkspace(workspaceId);\n    }\n  }\n\n  handleChange = () => {\n    const { isBoardsOpen, isMembersOpen } = this.state;\n    this.setState({\n      isBoardsOpen: !isBoardsOpen,\n      isMembersOpen: !isMembersOpen,\n    });\n  };\n\n  render() {\n    const { workspace, board, changeView, removeBoard } = this.props;\n    if (!workspace) return <Loader />;\n    return (\n      <div className=\"workspace-app flex\">\n        <WorkspaceNav\n          removeBoard={removeBoard}\n          changeView={changeView}\n          workspace={workspace}\n          board={board}\n        />\n        <div className=\"workspace-details\">\n          <WorkspaceHeader\n            workspace={workspace}\n            onBlur={this.onBlur}\n            handleChange={this.handleChange}\n          />\n          <WorkspaceContent\n            workspace={workspace}\n            onBlur={this.onBlur}\n            isBoardsOpen={this.state.isBoardsOpen}\n            isMembersOpen={this.state.isMembersOpen}\n            changeView={changeView}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    workspaces: state.workspaceModule.workspaces,\n    workspace: state.workspaceModule.workspace,\n    board: state.boardModule.board,\n    user: state.userModule.user,\n  };\n}\n\nconst mapDispatchToProps = {\n  loadWorkspace,\n  removeBoard,\n  loadBoard,\n  changeView,\n};\n\nexport const WorkspaceDetails = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(_WorkspaceDetails);\n","import { BoardDetails } from './js/pages/BoardDetails';\nimport { UserDetails } from './js/pages/UserDetails';\nimport { WorkspaceDetails } from './js/pages/WorkspaceDetails';\n\nconst routesMainApp = [\n    {\n        path: '/board/:boardId',\n        component: BoardDetails,\n    },\n    {\n        path: '/user/:userId',\n        component: UserDetails,\n    },\n    {\n        path: '/workspace/:workspaceId',\n        component: WorkspaceDetails,\n    },\n]\n\nexport default routesMainApp;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { Switch, Route } from 'react-router';\n\nimport { MainHeader } from './js/cmps/MainHeader';\nimport { SidebarHeader } from './js/cmps/SidebarHeader';\nimport { UserMsg } from './js/cmps/user-msg';\nimport { socketService } from './js/services/socket.service';\n\nimport routesHomePage from './routesHomePage';\nimport routesMainApp from './routesMainApp';\n\nclass _RootCmp extends React.Component {\n\n  componentDidMount(){\n    socketService.setup()\n  }\n\n  componentWillUnmount(){\n    socketService.terminate()\n  }\n\n  render() {\n    const { user } = this.props;\n    const routes = user ? routesMainApp : routesHomePage;\n    const header = user ? <SidebarHeader /> : <MainHeader />;\n    return (\n      <div className={`app-container ${user && 'flex'}`}>\n        {header}\n        <main>\n          <Switch>\n            {routes.map((route) => (\n              <Route\n                key={route.path}\n                component={route.component}\n                path={route.path}\n                title={route.title}\n              />\n            ))}\n          </Switch>\n        </main>\n        <UserMsg />\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    user: state.userModule.user,\n  };\n}\n\nexport const RootCmp = connect(mapStateToProps, null)(_RootCmp);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\n    workspace: null,\n    workspaces: [],\n    labels: [],\n    isOpenNav: false,\n    toggleMenus: {\n        workspaceMenu: false,\n        groupMenu: false,\n        boardMenu: false,\n        itemMenu: false,\n        colorMenu: false,\n        dateMenu: false,\n        filterMenu: false,\n        sortMenu: false,\n        personMenu: false,\n        numberMenu: false,\n        isBoardModal: false,\n        isWorkspaceModal: false,\n        userDetailsModal: false,\n        activityLogModal: false,\n        isMemberModal: false\n    },\n    lastEditedWorkspace: null\n}\n\nexport function workspaceReducer(state = initialState, action) {\n    var newState = state\n    var workspaces\n    switch (action.type) {\n        case 'SET_WORKSPACES':\n            newState = { ...state, workspaces: action.workspaces }\n            break\n        case 'SET_WORKSPACE':\n            // workspaces = state.workspaces.map(workspace => workspace._id !== action.workspace._id ? workspace : action.workspace)\n            newState = { ...state, workspace: action.workspace }\n            break\n        case 'ADD_WORKSPACE':\n            newState = { ...state, workspaces: [...state.workspaces, action.workspace] }\n            break\n        case 'EDIT_WORKSPACE':\n            workspaces = state.workspaces.map(workspace => (workspace._id === action.workspace._id) ? action.workspace : workspace)\n            newState = { ...state, workspaces, workspace: action.workspace }\n            break\n        case 'REMOVE_WORKSPACE':\n            const lastRemovedWorkspace = state.workspaces.find(workspace => workspace._id === action.workspaceId)\n            workspaces = state.workspaces.filter(workspace => workspace._id !== action.workspaceId)\n            newState = { ...state, workspaces, lastRemovedWorkspace }\n            break\n        case 'SET_UNDO_WORKSPACE':\n            newState = { ...state, lastEditedWorkspace: action.lastEditedWorkspace }\n            break\n        case 'TOGGLE_NAV':\n            newState = { ...state, isOpenNav: !state.isOpenNav }\n            break\n        case 'TOGGLE_MENU':\n            newState = { ...state, toggleMenus: action.toggleMenus }\n            break\n        default:\n    }\n    return newState\n}","import { userService } from '../../services/user.service.js'\n\n\nconst initialState = {\n    user: userService.getLoggedinUser(),\n    users: [],\n    member: null\n}\nexport function userReducer(state = initialState, action) {\n    var newState = state;\n    switch (action.type) {\n        case 'SET_USER':\n            newState = { ...state, user: action.user }\n            break;\n        case 'SET_USERS':\n            newState = { ...state, users: action.users }\n            break;\n        case 'SET_MEMBER':\n            newState = { ...state, member: action.user }\n            break;\n        default:\n    }\n    // For debug:\n    window.userState = newState;\n    // console.log('State:', newState);\n    return newState;\n\n}\n","const initialState = {\n    board: null,\n    boards: [],\n    currView: 'table',\n    sortStore: {\n        sortBy: 'Select sort by',\n        sortOrder: 'Ascending'\n    },\n    filterStore: {\n        groupsIds: [],\n        statuses: [],\n        persons: []\n    }\n}\n\nexport function boardReducer(state = initialState, action) {\n    var newState = state\n    switch (action.type) {\n        case 'SET_BOARD':\n            newState = { ...state, board: action.board }\n            break\n        case 'ADD_BOARD':\n            newState = { ...state, boards: [...state.boards, action.board] }\n            break\n        case 'CHANGE_VIEW':\n            newState = { ...state, currView: action.currView }\n            break\n        case 'FILTER':\n            newState = { ...state, filterStore: { ...action.filterStore } }\n            break\n        case 'SORT':\n            newState = { ...state, sortStore: { ...action.sortStore } }\n            break\n\n        default:\n    }\n    return newState\n}","const initialState = {\n    group: null,\n    groups: []\n}\n\nexport function groupReducer(state = initialState, action) {\n    var newState = state\n    switch (action.type) {\n        case 'SET_GROUP':\n            newState = { ...state, group: action.group }\n            break\n        case 'SET_GROUPS':\n            newState = { ...state, groups: action.groups }\n            break\n        case 'ADD_GROUP':\n            newState = { ...state, groups: [...state.groups, action.group] }\n            break\n        default:\n    }\n    return newState\n}","const initialState = {\n    item: null,\n    items: [],\n    statuses:{},\n    personsCount:{},\n    selectedItems:[]\n}\n\nexport function itemReducer(state = initialState, action) {\n    var newState = state\n    var items\n    switch (action.type) {\n        case 'SET_ITEMS':\n            newState = { ...state, items: action.items }\n            break\n        case 'SET_ITEM':\n            newState = { ...state, item: action.item }\n            break\n        case 'ADD_ITEM':\n            newState = { ...state, items: [...state.items, action.item] }\n            break\n        case 'UPDATE_ITEM':\n            items = state.items.map(item => (item.id === action.item.id) ? action.item : item)\n            newState = { ...state, items }\n            break\n        case 'GET_PERSONS':\n            newState = { ...state, personsCount: action.personsCount }\n            break\n        case 'GET_STATUS':\n            newState = { ...state, statuses: action.statuses }\n            break\n        case 'TOGGLE_SELECT':\n            newState = { ...state, selectedItems: action.selectedItems }\n            break\n        case 'REMOVE_ITEM':\n            const lastRemovedItem = state.items.find(item => item._id === action.itemId)\n            items = state.items.filter(item => item._id !== action.itemId)\n            newState = { ...state, items, lastRemovedItem }\n            break\n        default:\n    }\n    return newState\n}","import { createStore, applyMiddleware, combineReducers, compose } from 'redux'\nimport thunk from 'redux-thunk'\n\nimport { workspaceReducer } from './reducers/workspace.reducer.js'\nimport { userReducer } from './reducers/user.reducer.js'\nimport { boardReducer } from './reducers/board.reducer.js'\nimport { groupReducer } from './reducers/group.reducer.js'\nimport { itemReducer } from './reducers/item.reducer.js'\n\nconst rootReducer = combineReducers({\n    workspaceModule: workspaceReducer,\n    userModule: userReducer,\n    boardModule: boardReducer,\n    groupModule: groupReducer,\n    itemModule: itemReducer,\n})\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nexport const store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunk)))","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './assets/styles/styles.scss';\nimport 'froala-editor/css/froala_style.min.css';\nimport 'froala-editor/css/froala_editor.pkgd.min.css';\nimport { RootCmp } from './RootCmp';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './js/store/store'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\n\nReactDOM.render(\n\n  <React.StrictMode>\n    <Provider store={store}>\n      <Router>\n        <RootCmp />\n      </Router>\n    </Provider>\n  </React.StrictMode>,\n\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}